define(['dart_sdk', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/painting/image_stream.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/extended_image_library/src/extended_image_provider.dart', 'packages/flutter/src/painting/image_resolution.dart'], (function load__packages__extended_image_library__src__extended_asset_bundle_image_provider_dart(dart_sdk, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__painting__image_stream$46dart, packages__flutter__src__foundation__debug$46dart, packages__extended_image_library__src__extended_image_provider$46dart, packages__flutter__src__painting__image_resolution$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const ui = dart_sdk.ui;
  const typed_data = dart_sdk.typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const image_stream = packages__flutter__src__painting__image_stream$46dart.src__painting__image_stream;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const extended_image_provider = packages__extended_image_library__src__extended_image_provider$46dart.src__extended_image_provider;
  const image_resolution = packages__flutter__src__painting__image_resolution$46dart.src__painting__image_resolution;
  var extended_asset_bundle_image_provider = Object.create(dart.library);
  var $buffer = dartx.buffer;
  var $asUint8List = dartx.asUint8List;
  var $runtimeType = dartx.runtimeType;
  var $_equals = dartx._equals;
  var $hashCode = dartx.hashCode;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    ExtendedAssetBundleImageKeyL: () => (T.ExtendedAssetBundleImageKeyL = dart.constFn(dart.legacy(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey)))(),
    CompleterOfExtendedAssetBundleImageKeyL: () => (T.CompleterOfExtendedAssetBundleImageKeyL = dart.constFn(async.Completer$(T.ExtendedAssetBundleImageKeyL())))(),
    AssetBundleImageKeyL: () => (T.AssetBundleImageKeyL = dart.constFn(dart.legacy(image_provider.AssetBundleImageKey)))(),
    AssetBundleImageKeyLToNull: () => (T.AssetBundleImageKeyLToNull = dart.constFn(dart.fnType(core.Null, [T.AssetBundleImageKeyL()])))(),
    ObjectL: () => (T.ObjectL = dart.constFn(dart.legacy(core.Object)))(),
    ImageProviderOfObjectL: () => (T.ImageProviderOfObjectL = dart.constFn(image_provider.ImageProvider$(T.ObjectL())))(),
    ImageProviderLOfObjectL: () => (T.ImageProviderLOfObjectL = dart.constFn(dart.legacy(T.ImageProviderOfObjectL())))(),
    DiagnosticsPropertyOfImageProviderLOfObjectL: () => (T.DiagnosticsPropertyOfImageProviderLOfObjectL = dart.constFn(diagnostics.DiagnosticsProperty$(T.ImageProviderLOfObjectL())))(),
    DiagnosticsPropertyOfAssetBundleImageKeyL: () => (T.DiagnosticsPropertyOfAssetBundleImageKeyL = dart.constFn(diagnostics.DiagnosticsProperty$(T.AssetBundleImageKeyL())))(),
    DiagnosticsNodeL: () => (T.DiagnosticsNodeL = dart.constFn(dart.legacy(diagnostics.DiagnosticsNode)))(),
    SyncIterableOfDiagnosticsNodeL: () => (T.SyncIterableOfDiagnosticsNodeL = dart.constFn(_js_helper.SyncIterable$(T.DiagnosticsNodeL())))(),
    IterableOfDiagnosticsNodeL: () => (T.IterableOfDiagnosticsNodeL = dart.constFn(core.Iterable$(T.DiagnosticsNodeL())))(),
    IterableLOfDiagnosticsNodeL: () => (T.IterableLOfDiagnosticsNodeL = dart.constFn(dart.legacy(T.IterableOfDiagnosticsNodeL())))(),
    VoidToIterableLOfDiagnosticsNodeL: () => (T.VoidToIterableLOfDiagnosticsNodeL = dart.constFn(dart.fnType(T.IterableLOfDiagnosticsNodeL(), [])))(),
    CodecL: () => (T.CodecL = dart.constFn(dart.legacy(ui.Codec)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var C = [];
  var I = [
    "package:extended_image_library/src/extended_asset_bundle_image_provider.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image_library-0.3.1/lib/src/extended_asset_bundle_image_provider.dart"
  ];
  var _extendedAssetBundleImageKey = dart.privateName(extended_asset_bundle_image_provider, "_extendedAssetBundleImageKey");
  var _loadAsync = dart.privateName(extended_asset_bundle_image_provider, "_loadAsync");
  const ExactAssetImage_ExtendedImageProvider$36 = class ExactAssetImage_ExtendedImageProvider extends image_provider.ExactAssetImage {};
  (ExactAssetImage_ExtendedImageProvider$36.new = function(assetName, opts) {
    extended_image_provider.ExtendedImageProvider.new.call(this);
    ExactAssetImage_ExtendedImageProvider$36.__proto__.new.call(this, assetName, opts);
  }).prototype = ExactAssetImage_ExtendedImageProvider$36.prototype;
  dart.applyMixin(ExactAssetImage_ExtendedImageProvider$36, extended_image_provider.ExtendedImageProvider);
  extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider = class ExtendedExactAssetImageProvider extends ExactAssetImage_ExtendedImageProvider$36 {
    obtainKey(configuration) {
      let completer = T.CompleterOfExtendedAssetBundleImageKeyL().new();
      super.obtainKey(configuration).then(core.Null, dart.fn(value => {
        if (value != null) {
          this[_extendedAssetBundleImageKey] = new extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.new({bundle: value.bundle, scale: value.scale, name: value.name});
        }
        completer.complete(this[_extendedAssetBundleImageKey]);
      }, T.AssetBundleImageKeyLToNull()));
      return completer.future;
    }
    load(key, decode) {
      T.AssetBundleImageKeyL().as(key);
      return new image_stream.MultiFrameImageStreamCompleter.new({codec: this[_loadAsync](key, decode), scale: key.scale, informationCollector: dart.fn(() => new (T.SyncIterableOfDiagnosticsNodeL()).new((function*() {
          yield new (T.DiagnosticsPropertyOfImageProviderLOfObjectL()).new("Image provider", this);
          yield new (T.DiagnosticsPropertyOfAssetBundleImageKeyL()).new("Image key", key);
        }).bind(this)), T.VoidToIterableLOfDiagnosticsNodeL())});
    }
    [_loadAsync](key, decode) {
      return async.async(T.CodecL(), (function* _loadAsync() {
        let data = (yield key.bundle.load(key.name));
        if (data == null) {
          dart.throw("Unable to read data");
        }
        let result = data[$buffer][$asUint8List]();
        this[_extendedAssetBundleImageKey].data.value = result;
        return yield this.instantiateImageCodec(result, decode);
      }).bind(this));
    }
    get rawImageData() {
      let t1, t1$, t0;
      t0 = super.rawImageData;
      return t0 == null ? (t1$ = (t1 = this[_extendedAssetBundleImageKey], t1 == null ? null : t1.data), t1$ == null ? null : t1$.value) : t0;
    }
  };
  (extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider.new = function(assetName, opts) {
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let $package = opts && 'package' in opts ? opts.package : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    this[_extendedAssetBundleImageKey] = null;
    extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider.__proto__.new.call(this, assetName, {bundle: bundle, package: $package, scale: scale});
    ;
  }).prototype = extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider.prototype;
  dart.addTypeTests(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider);
  dart.addTypeCaches(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider);
  dart.setMethodSignature(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider, () => ({
    __proto__: dart.getMethods(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider.__proto__),
    obtainKey: dart.fnType(dart.legacy(async.Future$(dart.legacy(image_provider.AssetBundleImageKey))), [dart.legacy(image_provider.ImageConfiguration)]),
    load: dart.fnType(dart.legacy(image_stream.ImageStreamCompleter), [dart.legacy(core.Object), dart.legacy(dart.fnType(dart.legacy(async.Future$(dart.legacy(ui.Codec))), [dart.legacy(typed_data.Uint8List)], {allowUpscaling: dart.legacy(core.bool), cacheHeight: dart.legacy(core.int), cacheWidth: dart.legacy(core.int)}, {}))]),
    [_loadAsync]: dart.fnType(dart.legacy(async.Future$(dart.legacy(ui.Codec))), [dart.legacy(image_provider.AssetBundleImageKey), dart.legacy(dart.fnType(dart.legacy(async.Future$(dart.legacy(ui.Codec))), [dart.legacy(typed_data.Uint8List)], {allowUpscaling: dart.legacy(core.bool), cacheHeight: dart.legacy(core.int), cacheWidth: dart.legacy(core.int)}, {}))])
  }));
  dart.setLibraryUri(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider, I[0]);
  dart.setFieldSignature(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider, () => ({
    __proto__: dart.getFields(extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider.__proto__),
    [_extendedAssetBundleImageKey]: dart.fieldType(dart.legacy(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey))
  }));
  const AssetImage_ExtendedImageProvider$36 = class AssetImage_ExtendedImageProvider extends image_resolution.AssetImage {};
  (AssetImage_ExtendedImageProvider$36.new = function(assetName, opts) {
    extended_image_provider.ExtendedImageProvider.new.call(this);
    AssetImage_ExtendedImageProvider$36.__proto__.new.call(this, assetName, opts);
  }).prototype = AssetImage_ExtendedImageProvider$36.prototype;
  dart.applyMixin(AssetImage_ExtendedImageProvider$36, extended_image_provider.ExtendedImageProvider);
  extended_asset_bundle_image_provider.ExtendedAssetImageProvider = class ExtendedAssetImageProvider extends AssetImage_ExtendedImageProvider$36 {
    obtainKey(configuration) {
      let completer = T.CompleterOfExtendedAssetBundleImageKeyL().new();
      super.obtainKey(configuration).then(core.Null, dart.fn(value => {
        if (value != null) {
          this[_extendedAssetBundleImageKey] = new extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.new({bundle: value.bundle, scale: value.scale, name: value.name});
        }
        completer.complete(this[_extendedAssetBundleImageKey]);
      }, T.AssetBundleImageKeyLToNull()));
      return completer.future;
    }
    load(key, decode) {
      T.AssetBundleImageKeyL().as(key);
      return new image_stream.MultiFrameImageStreamCompleter.new({codec: this[_loadAsync](key, decode), scale: key.scale, informationCollector: dart.fn(() => new (T.SyncIterableOfDiagnosticsNodeL()).new((function*() {
          yield new (T.DiagnosticsPropertyOfImageProviderLOfObjectL()).new("Image provider", this);
          yield new (T.DiagnosticsPropertyOfAssetBundleImageKeyL()).new("Image key", key);
        }).bind(this)), T.VoidToIterableLOfDiagnosticsNodeL())});
    }
    [_loadAsync](key, decode) {
      return async.async(T.CodecL(), (function* _loadAsync() {
        let data = (yield key.bundle.load(key.name));
        if (data == null) {
          dart.throw("Unable to read data");
        }
        let result = data[$buffer][$asUint8List]();
        this[_extendedAssetBundleImageKey].data.value = result;
        return yield this.instantiateImageCodec(result, decode);
      }).bind(this));
    }
    get rawImageData() {
      let t1, t1$, t0;
      t0 = super.rawImageData;
      return t0 == null ? (t1$ = (t1 = this[_extendedAssetBundleImageKey], t1 == null ? null : t1.data), t1$ == null ? null : t1$.value) : t0;
    }
  };
  (extended_asset_bundle_image_provider.ExtendedAssetImageProvider.new = function(assetName, opts) {
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let $package = opts && 'package' in opts ? opts.package : null;
    this[_extendedAssetBundleImageKey] = null;
    extended_asset_bundle_image_provider.ExtendedAssetImageProvider.__proto__.new.call(this, assetName, {bundle: bundle, package: $package});
    ;
  }).prototype = extended_asset_bundle_image_provider.ExtendedAssetImageProvider.prototype;
  dart.addTypeTests(extended_asset_bundle_image_provider.ExtendedAssetImageProvider);
  dart.addTypeCaches(extended_asset_bundle_image_provider.ExtendedAssetImageProvider);
  dart.setMethodSignature(extended_asset_bundle_image_provider.ExtendedAssetImageProvider, () => ({
    __proto__: dart.getMethods(extended_asset_bundle_image_provider.ExtendedAssetImageProvider.__proto__),
    obtainKey: dart.fnType(dart.legacy(async.Future$(dart.legacy(image_provider.AssetBundleImageKey))), [dart.legacy(image_provider.ImageConfiguration)]),
    load: dart.fnType(dart.legacy(image_stream.ImageStreamCompleter), [dart.legacy(core.Object), dart.legacy(dart.fnType(dart.legacy(async.Future$(dart.legacy(ui.Codec))), [dart.legacy(typed_data.Uint8List)], {allowUpscaling: dart.legacy(core.bool), cacheHeight: dart.legacy(core.int), cacheWidth: dart.legacy(core.int)}, {}))]),
    [_loadAsync]: dart.fnType(dart.legacy(async.Future$(dart.legacy(ui.Codec))), [dart.legacy(image_provider.AssetBundleImageKey), dart.legacy(dart.fnType(dart.legacy(async.Future$(dart.legacy(ui.Codec))), [dart.legacy(typed_data.Uint8List)], {allowUpscaling: dart.legacy(core.bool), cacheHeight: dart.legacy(core.int), cacheWidth: dart.legacy(core.int)}, {}))])
  }));
  dart.setLibraryUri(extended_asset_bundle_image_provider.ExtendedAssetImageProvider, I[0]);
  dart.setFieldSignature(extended_asset_bundle_image_provider.ExtendedAssetImageProvider, () => ({
    __proto__: dart.getFields(extended_asset_bundle_image_provider.ExtendedAssetImageProvider.__proto__),
    [_extendedAssetBundleImageKey]: dart.fieldType(dart.legacy(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey))
  }));
  var data = dart.privateName(extended_asset_bundle_image_provider, "ExtendedAssetBundleImageKey.data");
  extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey = class ExtendedAssetBundleImageKey extends image_provider.AssetBundleImageKey {
    get data() {
      return this[data];
    }
    set data(value) {
      super.data = value;
    }
    _equals(other) {
      let t0;
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) {
        return false;
      }
      if (T.ExtendedAssetBundleImageKeyL().is(other) && dart.equals(this.bundle, other.bundle) && this.name == other.name && this.scale == other.scale) {
        t0 = this.data;
        t0.value == null ? t0.value = other.data.value : null;
        return true;
      }
      return false;
    }
    get hashCode() {
      return ui.hashValues(this.bundle, this.name, this.scale);
    }
  };
  (extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.new = function(opts) {
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    this[data] = new extended_asset_bundle_image_provider._Data.new();
    if (!(bundle != null)) dart.assertFailed(null, I[1], 126, 16, "bundle != null");
    if (!(name != null)) dart.assertFailed(null, I[1], 127, 16, "name != null");
    if (!(scale != null)) dart.assertFailed(null, I[1], 128, 16, "scale != null");
    extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.__proto__.new.call(this, {bundle: bundle, name: name, scale: scale});
    ;
  }).prototype = extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.prototype;
  dart.addTypeTests(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey);
  dart.addTypeCaches(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey);
  dart.setMethodSignature(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey, () => ({
    __proto__: dart.getMethods(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.dynamic]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.dynamic])
  }));
  dart.setGetterSignature(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey, () => ({
    __proto__: dart.getGetters(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey, I[0]);
  dart.setFieldSignature(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey, () => ({
    __proto__: dart.getFields(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey.__proto__),
    data: dart.finalFieldType(dart.legacy(extended_asset_bundle_image_provider._Data))
  }));
  dart.defineExtensionMethods(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey, ['_equals']);
  dart.defineExtensionAccessors(extended_asset_bundle_image_provider.ExtendedAssetBundleImageKey, ['hashCode']);
  extended_asset_bundle_image_provider._Data = class _Data extends core.Object {};
  (extended_asset_bundle_image_provider._Data.new = function() {
    this.value = null;
    ;
  }).prototype = extended_asset_bundle_image_provider._Data.prototype;
  dart.addTypeTests(extended_asset_bundle_image_provider._Data);
  dart.addTypeCaches(extended_asset_bundle_image_provider._Data);
  dart.setLibraryUri(extended_asset_bundle_image_provider._Data, I[0]);
  dart.setFieldSignature(extended_asset_bundle_image_provider._Data, () => ({
    __proto__: dart.getFields(extended_asset_bundle_image_provider._Data.__proto__),
    value: dart.fieldType(dart.legacy(typed_data.Uint8List))
  }));
  dart.trackLibraries("packages/extended_image_library/src/extended_asset_bundle_image_provider.dart", {
    "package:extended_image_library/src/extended_asset_bundle_image_provider.dart": extended_asset_bundle_image_provider
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["../../../../../../packages/flutter/lib/src/painting/image_provider.dart","extended_asset_bundle_image_provider.dart","../../../../../../packages/flutter/lib/src/painting/image_resolution.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DAyiCS;;;;;;cCthCkD;AACV,sBACzC;AAOF,MANI,AAAyB,gBAAf,aAAa,kBAAO,QAAqB;AACvD,YAAI,AAAM,KAAD;AAEwD,UAD/D,qCAA+B,kFACnB,AAAM,KAAD,gBAAgB,AAAM,KAAD,cAAc,AAAM,KAAD;;AAEX,QAAhD,AAAU,SAAD,UAAU;;AAErB,YAAO,AAAU,UAAD;IAClB;SAG8C,KAAqB;kCAArB;AAC5C,YAAO,6DACE,iBAAW,GAAG,EAAE,MAAM,UACtB,AAAI,GAAD,8BACY;AACpB,gBAAM,2DAAmC,kBAAkB;AAC3D,gBAAM,wDAAyC,aAAa,GAAG;QAChE;IAEL;iBAQwB,KAAqB;AADlB;AAEV,oBAAO,MAAM,AAAI,AAAO,GAAR,aAAa,AAAI,GAAD;AAC/C,YAAI,AAAK,IAAD;AACqB,UAA3B,WAAM;;AAEQ,qBAAS,AAAK,AAAO,IAAR;AACmB,QAAhD,AAA6B,AAAK,gDAAQ,MAAM;AAChD,cAAO,OAAM,2BAAsB,MAAM,EAAE,MAAM;MACnD;;;;AAII,WAAM;wFAAgB,OAA8B,wBAA9B,OAAoC;IAAK;;uFAlD1D;QACK;QACL;QACA;IAEmB;AADvB,kGAAM,SAAS,WAAU,MAAM,WAAW,iBAAgB,KAAK;;EAAC;;;;;;;;;;;;;;;sDC0J9D;;;;;;cDjGkD;AACV,sBACzC;AAOF,MANI,AAAyB,gBAAf,aAAa,kBAAO,QAAqB;AACvD,YAAI,AAAM,KAAD;AAEwD,UAD/D,qCAA+B,kFACnB,AAAM,KAAD,gBAAgB,AAAM,KAAD,cAAc,AAAM,KAAD;;AAEX,QAAhD,AAAU,SAAD,UAAU;;AAErB,YAAO,AAAU,UAAD;IAClB;SAG8C,KAAqB;kCAArB;AAC5C,YAAO,6DACE,iBAAW,GAAG,EAAE,MAAM,UACtB,AAAI,GAAD,8BACY;AACpB,gBAAM,2DAAmC,kBAAkB;AAC3D,gBAAM,wDAAyC,aAAa,GAAG;QAChE;IAEL;iBAQwB,KAAqB;AADlB;AAEV,oBAAO,MAAM,AAAI,AAAO,GAAR,aAAa,AAAI,GAAD;AAC/C,YAAI,AAAK,IAAD;AACqB,UAA3B,WAAM;;AAEQ,qBAAS,AAAK,AAAO,IAAR;AACmB,QAAhD,AAA6B,AAAK,gDAAQ,MAAM;AAChD,cAAO,OAAM,2BAAsB,MAAM,EAAE,MAAM;MACnD;;;;AAII,WAAM;wFAAgB,OAA8B,wBAA9B,OAAoC;IAAK;;kFAjD1D;QACK;QACL;IAEmB;AADvB,6FAAM,SAAS,WAAU,MAAM,WAAW;;EAAQ;;;;;;;;;;;;;;;;IA2D3C;;;;;;YAEa;;;AACvB,UAAsB,aAAZ,iBAAN,KAAK,GAAgB;AACvB,cAAO;;AAET,UAAU,oCAAN,KAAK,KACE,YAAP,aAAU,AAAM,KAAD,YACf,AAAK,aAAG,AAAM,KAAD,SACb,AAAM,cAAG,AAAM,KAAD;AACe,aAA/B;QAAW,mBAAN,WAAU,AAAM,AAAK,KAAN,cAAT;AACX,cAAO;;AAGT,YAAO;IACT;;AAGoB,2BAAW,aAAQ,WAAM;IAAM;;;QA1B3B;QACL;QACA;IACR,aAAE;UACA,AAAO,MAAD;UACN,AAAK,IAAD;UACJ,AAAM,KAAD;AACZ,uGAAc,MAAM,QAAQ,IAAI,SAAS,KAAK;;EAAC;;;;;;;;;;;;;;;;;;;;;;IAwB3C;;EADH","file":"../../../../../../../packages/extended_image_library/src/extended_asset_bundle_image_provider.dart.lib.js"}');
  // Exports:
  return {
    src__extended_asset_bundle_image_provider: extended_asset_bundle_image_provider
  };
}));

//# sourceMappingURL=extended_asset_bundle_image_provider.dart.lib.js.map
