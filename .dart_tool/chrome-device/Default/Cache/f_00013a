define(['dart_sdk', 'packages/package_info/package_info.dart', 'packages/device_info/device_info.dart', 'packages/http/http.dart'], (function load__packages__ticketapp__services__bugsnag_wrapper_dart(dart_sdk, packages__package_info__package_info$46dart, packages__device_info__device_info$46dart, packages__http__http$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const io = dart_sdk.io;
  const _interceptors = dart_sdk._interceptors;
  const convert = dart_sdk.convert;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const package_info = packages__package_info__package_info$46dart.package_info;
  const device_info = packages__device_info__device_info$46dart.device_info;
  const http = packages__http__http$46dart.http;
  var bugsnag_wrapper = Object.create(dart.library);
  var $toString = dartx.toString;
  var $runtimeType = dartx.runtimeType;
  var $split = dartx.split;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $add = dartx.add;
  var $toLowerCase = dartx.toLowerCase;
  var $contains = dartx.contains;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    ErrorSeverityL: () => (T.ErrorSeverityL = dart.constFn(dart.legacy(bugsnag_wrapper.ErrorSeverity)))(),
    StringL: () => (T.StringL = dart.constFn(dart.legacy(core.String)))(),
    IdentityMapOfStringL$StringL: () => (T.IdentityMapOfStringL$StringL = dart.constFn(_js_helper.IdentityMap$(T.StringL(), T.StringL())))(),
    MapOfStringL$StringL: () => (T.MapOfStringL$StringL = dart.constFn(core.Map$(T.StringL(), T.StringL())))(),
    MapLOfStringL$StringL: () => (T.MapLOfStringL$StringL = dart.constFn(dart.legacy(T.MapOfStringL$StringL())))(),
    IdentityMapOfStringL$dynamic: () => (T.IdentityMapOfStringL$dynamic = dart.constFn(_js_helper.IdentityMap$(T.StringL(), dart.dynamic)))(),
    MapOfStringL$dynamic: () => (T.MapOfStringL$dynamic = dart.constFn(core.Map$(T.StringL(), dart.dynamic)))(),
    MapLOfStringL$dynamic: () => (T.MapLOfStringL$dynamic = dart.constFn(dart.legacy(T.MapOfStringL$dynamic())))(),
    JSArrayOfMapLOfStringL$dynamic: () => (T.JSArrayOfMapLOfStringL$dynamic = dart.constFn(_interceptors.JSArray$(T.MapLOfStringL$dynamic())))(),
    JSArrayOfMapLOfStringL$StringL: () => (T.JSArrayOfMapLOfStringL$StringL = dart.constFn(_interceptors.JSArray$(T.MapLOfStringL$StringL())))(),
    ObjectL: () => (T.ObjectL = dart.constFn(dart.legacy(core.Object)))(),
    IdentityMapOfStringL$ObjectL: () => (T.IdentityMapOfStringL$ObjectL = dart.constFn(_js_helper.IdentityMap$(T.StringL(), T.ObjectL())))(),
    MapOfStringL$ObjectL: () => (T.MapOfStringL$ObjectL = dart.constFn(core.Map$(T.StringL(), T.ObjectL())))(),
    MapLOfStringL$ObjectL: () => (T.MapLOfStringL$ObjectL = dart.constFn(dart.legacy(T.MapOfStringL$ObjectL())))(),
    JSArrayOfMapLOfStringL$ObjectL: () => (T.JSArrayOfMapLOfStringL$ObjectL = dart.constFn(_interceptors.JSArray$(T.MapLOfStringL$ObjectL())))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: bugsnag_wrapper.ErrorSeverity.prototype,
        [_name$]: "ErrorSeverity.error",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: bugsnag_wrapper.ErrorSeverity.prototype,
        [_name$]: "ErrorSeverity.warning",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: bugsnag_wrapper.ErrorSeverity.prototype,
        [_name$]: "ErrorSeverity.info",
        index: 2
      });
    },
    get C3() {
      return C[3] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2], T.ErrorSeverityL());
    }
  }, false);
  var C = Array(4).fill(void 0);
  var I = ["package:ticketapp/services/bugsnag_wrapper.dart"];
  var _name$ = dart.privateName(bugsnag_wrapper, "_name");
  bugsnag_wrapper.ErrorSeverity = class ErrorSeverity extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (bugsnag_wrapper.ErrorSeverity.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = bugsnag_wrapper.ErrorSeverity.prototype;
  dart.addTypeTests(bugsnag_wrapper.ErrorSeverity);
  dart.addTypeCaches(bugsnag_wrapper.ErrorSeverity);
  dart.setMethodSignature(bugsnag_wrapper.ErrorSeverity, () => ({
    __proto__: dart.getMethods(bugsnag_wrapper.ErrorSeverity.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(bugsnag_wrapper.ErrorSeverity, I[0]);
  dart.setFieldSignature(bugsnag_wrapper.ErrorSeverity, () => ({
    __proto__: dart.getFields(bugsnag_wrapper.ErrorSeverity.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(bugsnag_wrapper.ErrorSeverity, ['toString']);
  bugsnag_wrapper.ErrorSeverity.error = C[0] || CT.C0;
  bugsnag_wrapper.ErrorSeverity.warning = C[1] || CT.C1;
  bugsnag_wrapper.ErrorSeverity.info = C[2] || CT.C2;
  bugsnag_wrapper.ErrorSeverity.values = C[3] || CT.C3;
  var _apiKey = dart.privateName(bugsnag_wrapper, "_apiKey");
  var _releaseStage = dart.privateName(bugsnag_wrapper, "_releaseStage");
  var _user = dart.privateName(bugsnag_wrapper, "_user");
  var _innerPackageInfo = dart.privateName(bugsnag_wrapper, "_innerPackageInfo");
  var _innerDeviceInfo = dart.privateName(bugsnag_wrapper, "_innerDeviceInfo");
  var _packageInfo = dart.privateName(bugsnag_wrapper, "_packageInfo");
  var _deviceInfo = dart.privateName(bugsnag_wrapper, "_deviceInfo");
  var _parseStackTrace = dart.privateName(bugsnag_wrapper, "_parseStackTrace");
  var _sendError = dart.privateName(bugsnag_wrapper, "_sendError");
  bugsnag_wrapper.BugsnagNotifier = class BugsnagNotifier extends core.Object {
    get user() {
      return this[_user];
    }
    get [_packageInfo]() {
      return async.async(T.MapLOfStringL$StringL(), (function* _packageInfo() {
        if (this[_innerPackageInfo] != null) {
          return this[_innerPackageInfo];
        }
        if (true) {
          this[_innerPackageInfo] = new (T.IdentityMapOfStringL$StringL()).from(["version", "web-version"]);
        } else {
          let packageInfo = (yield package_info.PackageInfo.fromPlatform());
          this[_innerPackageInfo] = new (T.IdentityMapOfStringL$StringL()).from(["version", packageInfo.version]);
        }
        return this[_innerPackageInfo];
      }).bind(this));
    }
    get [_deviceInfo]() {
      return async.async(T.MapLOfStringL$StringL(), (function* _deviceInfo() {
        if (this[_innerDeviceInfo] != null) {
          return this[_innerDeviceInfo];
        }
        if (!true) {
          if (dart.test(io.Platform.isAndroid)) {
            let android = (yield new device_info.DeviceInfoPlugin.new().androidInfo);
            this[_innerDeviceInfo] = new (T.IdentityMapOfStringL$StringL()).from(["manufacturer", android.manufacturer, "model", android.model, "osName", "Android", "osVersion", android.version.release]);
          } else if (dart.test(io.Platform.isIOS)) {
            let ios = (yield new device_info.DeviceInfoPlugin.new().iosInfo);
            this[_innerDeviceInfo] = new (T.IdentityMapOfStringL$StringL()).from(["manufacturer", "Apple", "model", ios.model, "osName", "iOS", "osVersion", ios.systemVersion]);
          }
        }
        return this[_innerDeviceInfo];
      }).bind(this));
    }
    static get instance() {
      if (bugsnag_wrapper.BugsnagNotifier._instance == null) {
        bugsnag_wrapper.BugsnagNotifier._instance = new bugsnag_wrapper.BugsnagNotifier.__();
      }
      return bugsnag_wrapper.BugsnagNotifier._instance;
    }
    init(apiKey, opts) {
      let releaseStage = opts && 'releaseStage' in opts ? opts.releaseStage : "production";
      this[_apiKey] = T.StringL().as(apiKey);
      this[_releaseStage] = releaseStage;
    }
    addUser(opts) {
      let userId = opts && 'userId' in opts ? opts.userId : null;
      let userName = opts && 'userName' in opts ? opts.userName : null;
      let userEmail = opts && 'userEmail' in opts ? opts.userEmail : null;
      this[_user] = new (T.IdentityMapOfStringL$StringL()).from(["id", userId, "name", userName, "email", userEmail]);
    }
    notify(error, stackTrace, opts) {
      let severity = opts && 'severity' in opts ? opts.severity : C[0] || CT.C0;
      return async.async(dart.void, (function* notify() {
        let errors = new (T.IdentityMapOfStringL$dynamic()).from(["errorClass", dart.toString(dart.runtimeType(error)), "message", dart.toString(error), "stacktrace", this[_parseStackTrace](stackTrace)]);
        yield this[_sendError](T.JSArrayOfMapLOfStringL$dynamic().of([errors]), severity);
      }).bind(this));
    }
    [_parseStackTrace](stackTrace) {
      let stackTraceObjects = T.JSArrayOfMapLOfStringL$StringL().of([]);
      let ls = new convert.LineSplitter.new();
      let stackTraceLines = ls.convert(dart.toString(stackTrace));
      for (let line of stackTraceLines) {
        let splitStackTraceLine = line[$split](core.RegExp.new("(?!(?<=\\w)\\s(?=\\w))([\\s:)(]+)"));
        stackTraceObjects[$add](new (T.IdentityMapOfStringL$StringL()).from(["file", dart.notNull(splitStackTraceLine[$length]) >= 4 ? dart.toString(splitStackTraceLine[$_get](3)) : "", "lineNumber", dart.notNull(splitStackTraceLine[$length]) >= 5 ? dart.toString(splitStackTraceLine[$_get](4)) : "", "columnNumber", dart.notNull(splitStackTraceLine[$length]) >= 6 ? dart.toString(splitStackTraceLine[$_get](5)) : "", "method", dart.notNull(splitStackTraceLine[$length]) >= 2 ? dart.toString(splitStackTraceLine[$_get](1)) : dart.toString(splitStackTraceLine[$_get](0))]));
      }
      return stackTraceObjects;
    }
    [_sendError](errors, severity) {
      return async.async(dart.void, (function* _sendError() {
        try {
          let packageInfo = (yield this[_packageInfo]);
          let deviceInfo = (yield this[_deviceInfo]);
          let headers = new (T.IdentityMapOfStringL$StringL()).from(["Content-Type", "application/json", "Bugsnag-Api-Key", this[_apiKey], "Bugsnag-Payload-Version", "5", "Bugsnag-Sent-At", new core.DateTime.now().toUtc().toIso8601String()]);
          let requestBody = new (T.IdentityMapOfStringL$dynamic()).from(["apiKey", this[_apiKey], "payloadVersion", "5", "notifier", new (T.IdentityMapOfStringL$StringL()).from(["name", bugsnag_wrapper.notifierName, "version", bugsnag_wrapper.notifierVersion, "url", bugsnag_wrapper.notifierUrl]), "events", T.JSArrayOfMapLOfStringL$ObjectL().of([new (T.IdentityMapOfStringL$ObjectL()).from(["app", new (T.IdentityMapOfStringL$StringL()).from(["version", packageInfo[$_get]("version"), "releaseStage", this[_releaseStage]]), "device", deviceInfo, "exceptions", errors, "user", this[_user], "severity", dart.toString(severity)])])]);
          core.print("Reporting to bugsnag...");
          let response = (yield http.post("https://notify.bugsnag.com/", {headers: headers, body: convert.jsonEncode(requestBody)}));
          if (response.body != null && !response.body[$toLowerCase]()[$contains]("ok")) {
            dart.throw(core.Exception.new("Bugsnag did not accept error request format."));
          }
        } catch (e) {
          let error = dart.getThrown(e);
          let stackTrace = dart.stackTrace(e);
          core.print("-------------------------FLUTTER_BUGSNAG-------------------------");
          core.print("Errored while reporting to bugsnag:\nReport the issue here: https://github.com/pheedloop/flutter_bugsnag/issues/new?labels=bug&template=bug.md\n\n");
          core.print(error);
          core.print(stackTrace);
          core.print("-----------------------------------------------------------------");
        }
      }).bind(this));
    }
  };
  (bugsnag_wrapper.BugsnagNotifier.__ = function() {
    this[_apiKey] = null;
    this[_releaseStage] = null;
    this[_user] = null;
    this[_innerPackageInfo] = null;
    this[_innerDeviceInfo] = null;
    ;
  }).prototype = bugsnag_wrapper.BugsnagNotifier.prototype;
  dart.addTypeTests(bugsnag_wrapper.BugsnagNotifier);
  dart.addTypeCaches(bugsnag_wrapper.BugsnagNotifier);
  dart.setMethodSignature(bugsnag_wrapper.BugsnagNotifier, () => ({
    __proto__: dart.getMethods(bugsnag_wrapper.BugsnagNotifier.__proto__),
    init: dart.fnType(dart.dynamic, [dart.dynamic], {releaseStage: dart.legacy(core.String)}, {}),
    addUser: dart.fnType(dart.void, [], {userEmail: dart.legacy(core.String), userId: dart.legacy(core.String), userName: dart.legacy(core.String)}, {}),
    notify: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.dynamic, dart.legacy(core.StackTrace)], {severity: dart.legacy(bugsnag_wrapper.ErrorSeverity)}, {}),
    [_parseStackTrace]: dart.fnType(dart.legacy(core.List$(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String))))), [dart.legacy(core.StackTrace)]),
    [_sendError]: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.List$(dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic)))), dart.legacy(bugsnag_wrapper.ErrorSeverity)])
  }));
  dart.setGetterSignature(bugsnag_wrapper.BugsnagNotifier, () => ({
    __proto__: dart.getGetters(bugsnag_wrapper.BugsnagNotifier.__proto__),
    user: dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String))),
    [_packageInfo]: dart.legacy(async.Future$(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String))))),
    [_deviceInfo]: dart.legacy(async.Future$(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String)))))
  }));
  dart.setLibraryUri(bugsnag_wrapper.BugsnagNotifier, I[0]);
  dart.setFieldSignature(bugsnag_wrapper.BugsnagNotifier, () => ({
    __proto__: dart.getFields(bugsnag_wrapper.BugsnagNotifier.__proto__),
    [_apiKey]: dart.fieldType(dart.legacy(core.String)),
    [_releaseStage]: dart.fieldType(dart.legacy(core.String)),
    [_user]: dart.fieldType(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String)))),
    [_innerPackageInfo]: dart.fieldType(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String)))),
    [_innerDeviceInfo]: dart.fieldType(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.String))))
  }));
  dart.defineLazy(bugsnag_wrapper.BugsnagNotifier, {
    /*bugsnag_wrapper.BugsnagNotifier._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  }, true);
  dart.defineLazy(bugsnag_wrapper, {
    /*bugsnag_wrapper.notifierName*/get notifierName() {
      return "Appollo ticketing";
    },
    set notifierName(_) {},
    /*bugsnag_wrapper.notifierVersion*/get notifierVersion() {
      return "0.0.1";
    },
    set notifierVersion(_) {},
    /*bugsnag_wrapper.notifierUrl*/get notifierUrl() {
      return "https://appollo.io/dashboard";
    },
    set notifierUrl(_) {}
  }, true);
  dart.trackLibraries("packages/ticketapp/services/bugsnag_wrapper.dart", {
    "package:ticketapp/services/bugsnag_wrapper.dart": bugsnag_wrapper
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["bugsnag_wrapper.dart"],"names":[],"mappings":"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","file":"../../../../../../packages/ticketapp/services/bugsnag_wrapper.dart.lib.js"}');
  // Exports:
  return {
    services__bugsnag_wrapper: bugsnag_wrapper
  };
}));

//# sourceMappingURL=bugsnag_wrapper.dart.lib.js.map
