define(['dart_sdk', 'packages/flutter/src/material/page.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/painting/decoration_image.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/gestures/drag.dart', 'packages/flutter/src/gestures/scale.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/extended_image_library/src/_network_image_web.dart', 'packages/extended_image_library/src/extended_file_image_provider.dart', 'packages/extended_image_library/src/extended_asset_bundle_image_provider.dart', 'packages/extended_image_library/src/extended_memory_image_provider.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/semantics/binding.dart', 'packages/flutter/src/painting/image_stream.dart', 'packages/extended_image/src/extended_image_border_painter.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/cupertino/activity_indicator.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/extended_image_library/src/extended_image_provider.dart', 'packages/flutter/src/widgets/layout_builder.dart'], (function load__packages__extended_image__src__gesture__extended_image_slide_page_route_dart(dart_sdk, packages__flutter__src__material__page$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__painting__decoration_image$46dart, packages__flutter__src__rendering__layer$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__gestures__drag$46dart, packages__flutter__src__gestures__scale$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__extended_image_library__src___network_image_web$46dart, packages__extended_image_library__src__extended_file_image_provider$46dart, packages__extended_image_library__src__extended_asset_bundle_image_provider$46dart, packages__extended_image_library__src__extended_memory_image_provider$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__semantics__binding$46dart, packages__flutter__src__painting__image_stream$46dart, packages__extended_image__src__extended_image_border_painter$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__cupertino__activity_indicator$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__extended_image_library__src__extended_image_provider$46dart, packages__flutter__src__widgets__layout_builder$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const _engine = dart_sdk._engine;
  const _js_helper = dart_sdk._js_helper;
  const typed_data = dart_sdk.typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const page = packages__flutter__src__material__page$46dart.src__material__page;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const sliver = packages__flutter__src__widgets__widget_span$46dart.src__widgets__sliver;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const scroll_position = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position;
  const scroll_activity = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_activity;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const disposable_build_context = packages__flutter__src__widgets__widget_span$46dart.src__widgets__disposable_build_context;
  const scroll_aware_image_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_aware_image_provider;
  const image = packages__flutter__src__widgets__widget_span$46dart.src__widgets__image;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const decoration_image = packages__flutter__src__painting__decoration_image$46dart.src__painting__decoration_image;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const drag = packages__flutter__src__gestures__drag$46dart.src__gestures__drag;
  const scale$ = packages__flutter__src__gestures__scale$46dart.src__gestures__scale;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const _network_image_web = packages__extended_image_library__src___network_image_web$46dart.src___network_image_web;
  const extended_file_image_provider = packages__extended_image_library__src__extended_file_image_provider$46dart.src__extended_file_image_provider;
  const extended_asset_bundle_image_provider = packages__extended_image_library__src__extended_asset_bundle_image_provider$46dart.src__extended_asset_bundle_image_provider;
  const extended_memory_image_provider = packages__extended_image_library__src__extended_memory_image_provider$46dart.src__extended_memory_image_provider;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const binding$ = packages__flutter__src__semantics__binding$46dart.src__semantics__binding;
  const image_stream = packages__flutter__src__painting__image_stream$46dart.src__painting__image_stream;
  const extended_image_border_painter = packages__extended_image__src__extended_image_border_painter$46dart.src__extended_image_border_painter;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const activity_indicator = packages__flutter__src__cupertino__activity_indicator$46dart.src__cupertino__activity_indicator;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const extended_image_provider = packages__extended_image_library__src__extended_image_provider$46dart.src__extended_image_provider;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  var extended_image_slide_page_route = Object.create(dart.library);
  var extended_image_crop_layer = Object.create(dart.library);
  var extended_render_image = Object.create(dart.library);
  var extended_raw_image = Object.create(dart.library);
  var extended_image_gesture_page_view = Object.create(dart.library);
  var extended_image_slide_page_handler = Object.create(dart.library);
  var extended_image_slide_page = Object.create(dart.library);
  var extended_image_editor_utils = Object.create(dart.library);
  var extended_image_typedef = Object.create(dart.library);
  var extended_image_gesture_utils = Object.create(dart.library);
  var extended_image_gesture = Object.create(dart.library);
  var extended_image = Object.create(dart.library);
  var extended_image_utils = Object.create(dart.library);
  var extended_image_editor = Object.create(dart.library);
  var extended_image$ = Object.create(dart.library);
  var $abs = dartx.abs;
  var $floor = dartx.floor;
  var $toString = dartx.toString;
  var $runtimeType = dartx.runtimeType;
  var $toDouble = dartx.toDouble;
  var $ceil = dartx.ceil;
  var $round = dartx.round;
  var $truncate = dartx.truncate;
  var $modulo = dartx['%'];
  var $clamp = dartx.clamp;
  var $hashCode = dartx.hashCode;
  var $_equals = dartx._equals;
  var $roundToDouble = dartx.roundToDouble;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $clear = dartx.clear;
  var $isNaN = dartx.isNaN;
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    MaterialPageRouteL: () => (T$.MaterialPageRouteL = dart.constFn(dart.legacy(page.MaterialPageRoute)))(),
    CupertinoPageRouteL: () => (T$.CupertinoPageRouteL = dart.constFn(dart.legacy(route$.CupertinoPageRoute)))(),
    TransparentMaterialPageRouteL: () => (T$.TransparentMaterialPageRouteL = dart.constFn(dart.legacy(extended_image_slide_page_route.TransparentMaterialPageRoute)))(),
    TransparentCupertinoPageRouteL: () => (T$.TransparentCupertinoPageRouteL = dart.constFn(dart.legacy(extended_image_slide_page_route.TransparentCupertinoPageRoute)))(),
    boolL: () => (T$.boolL = dart.constFn(dart.legacy(core.bool)))(),
    VoidToboolL: () => (T$.VoidToboolL = dart.constFn(dart.fnType(T$.boolL(), [])))(),
    _LocationL: () => (T$._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    ValueNotifierOfStringL: () => (T$.ValueNotifierOfStringL = dart.constFn(change_notifier.ValueNotifier$(T$.StringL())))(),
    doubleL: () => (T$.doubleL = dart.constFn(dart.legacy(core.double)))(),
    WidgetL: () => (T$.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    JSArrayOfWidgetL: () => (T$.JSArrayOfWidgetL = dart.constFn(_interceptors.JSArray$(T$.WidgetL())))(),
    intL: () => (T$.intL = dart.constFn(dart.legacy(core.int)))(),
    ObjectL: () => (T$.ObjectL = dart.constFn(dart.legacy(core.Object)))(),
    AnimationStatusL: () => (T$.AnimationStatusL = dart.constFn(dart.legacy(animation.AnimationStatus)))(),
    AnimationStatusLToNull: () => (T$.AnimationStatusLToNull = dart.constFn(dart.fnType(core.Null, [T$.AnimationStatusL()])))(),
    OffsetL: () => (T$.OffsetL = dart.constFn(dart.legacy(ui.Offset)))(),
    TweenOfOffsetL: () => (T$.TweenOfOffsetL = dart.constFn(tween.Tween$(T$.OffsetL())))(),
    _moveTypeL: () => (T$._moveTypeL = dart.constFn(dart.legacy(extended_image_crop_layer._moveType)))(),
    ExtendedImageCropLayerL: () => (T$.ExtendedImageCropLayerL = dart.constFn(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayer)))(),
    ExtendedImageCropLayerPainterNinetyDegreesCornerL: () => (T$.ExtendedImageCropLayerPainterNinetyDegreesCornerL = dart.constFn(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner)))(),
    DragUpdateDetailsL: () => (T$.DragUpdateDetailsL = dart.constFn(dart.legacy(drag_details.DragUpdateDetails)))(),
    DragUpdateDetailsLToNull: () => (T$.DragUpdateDetailsLToNull = dart.constFn(dart.fnType(core.Null, [T$.DragUpdateDetailsL()])))(),
    DragEndDetailsL: () => (T$.DragEndDetailsL = dart.constFn(dart.legacy(drag_details.DragEndDetails)))(),
    DragEndDetailsLToNull: () => (T$.DragEndDetailsLToNull = dart.constFn(dart.fnType(core.Null, [T$.DragEndDetailsL()])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    RectL: () => (T$.RectL = dart.constFn(dart.legacy(ui.Rect)))(),
    TimerL: () => (T$.TimerL = dart.constFn(dart.legacy(async.Timer)))(),
    TimerLToNull: () => (T$.TimerLToNull = dart.constFn(dart.fnType(core.Null, [T$.TimerL()])))(),
    CustomPainterL: () => (T$.CustomPainterL = dart.constFn(dart.legacy(custom_paint.CustomPainter)))(),
    ExtendedImageCropLayerPainterL: () => (T$.ExtendedImageCropLayerPainterL = dart.constFn(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayerPainter)))(),
    ImageL: () => (T$.ImageL = dart.constFn(dart.legacy(ui.Image)))(),
    DiagnosticsPropertyOfImageL: () => (T$.DiagnosticsPropertyOfImageL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.ImageL())))(),
    ColorL: () => (T$.ColorL = dart.constFn(dart.legacy(ui.Color)))(),
    DiagnosticsPropertyOfColorL: () => (T$.DiagnosticsPropertyOfColorL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.ColorL())))(),
    BlendModeL: () => (T$.BlendModeL = dart.constFn(dart.legacy(ui.BlendMode)))(),
    EnumPropertyOfBlendModeL: () => (T$.EnumPropertyOfBlendModeL = dart.constFn(diagnostics.EnumProperty$(T$.BlendModeL())))(),
    BoxFitL: () => (T$.BoxFitL = dart.constFn(dart.legacy(box_fit.BoxFit)))(),
    EnumPropertyOfBoxFitL: () => (T$.EnumPropertyOfBoxFitL = dart.constFn(diagnostics.EnumProperty$(T$.BoxFitL())))(),
    AlignmentGeometryL: () => (T$.AlignmentGeometryL = dart.constFn(dart.legacy(alignment.AlignmentGeometry)))(),
    DiagnosticsPropertyOfAlignmentGeometryL: () => (T$.DiagnosticsPropertyOfAlignmentGeometryL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.AlignmentGeometryL())))(),
    ImageRepeatL: () => (T$.ImageRepeatL = dart.constFn(dart.legacy(decoration_image.ImageRepeat)))(),
    EnumPropertyOfImageRepeatL: () => (T$.EnumPropertyOfImageRepeatL = dart.constFn(diagnostics.EnumProperty$(T$.ImageRepeatL())))(),
    DiagnosticsPropertyOfRectL: () => (T$.DiagnosticsPropertyOfRectL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.RectL())))(),
    TextDirectionL: () => (T$.TextDirectionL = dart.constFn(dart.legacy(ui.TextDirection)))(),
    EnumPropertyOfTextDirectionL: () => (T$.EnumPropertyOfTextDirectionL = dart.constFn(diagnostics.EnumProperty$(T$.TextDirectionL())))(),
    DiagnosticsPropertyOfboolL: () => (T$.DiagnosticsPropertyOfboolL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.boolL())))(),
    FilterQualityL: () => (T$.FilterQualityL = dart.constFn(dart.legacy(ui.FilterQuality)))(),
    EnumPropertyOfFilterQualityL: () => (T$.EnumPropertyOfFilterQualityL = dart.constFn(diagnostics.EnumProperty$(T$.FilterQualityL())))(),
    SizeL: () => (T$.SizeL = dart.constFn(dart.legacy(ui.Size)))(),
    SyncIterableOfRectL: () => (T$.SyncIterableOfRectL = dart.constFn(_js_helper.SyncIterable$(T$.RectL())))(),
    AlignmentL: () => (T$.AlignmentL = dart.constFn(dart.legacy(alignment.Alignment)))(),
    ExtendedRenderImageL: () => (T$.ExtendedRenderImageL = dart.constFn(dart.legacy(extended_render_image.ExtendedRenderImage)))(),
    GestureDetailsL: () => (T$.GestureDetailsL = dart.constFn(dart.legacy(extended_image_gesture_utils.GestureDetails)))(),
    GestureDetailsLToboolL: () => (T$.GestureDetailsLToboolL = dart.constFn(dart.fnType(T$.boolL(), [T$.GestureDetailsL()])))(),
    TypeL: () => (T$.TypeL = dart.constFn(dart.legacy(core.Type)))(),
    GestureRecognizerL: () => (T$.GestureRecognizerL = dart.constFn(dart.legacy(recognizer.GestureRecognizer)))(),
    GestureRecognizerFactoryOfGestureRecognizerL: () => (T$.GestureRecognizerFactoryOfGestureRecognizerL = dart.constFn(gesture_detector.GestureRecognizerFactory$(T$.GestureRecognizerL())))(),
    GestureRecognizerFactoryLOfGestureRecognizerL: () => (T$.GestureRecognizerFactoryLOfGestureRecognizerL = dart.constFn(dart.legacy(T$.GestureRecognizerFactoryOfGestureRecognizerL())))(),
    OffsetLToNull: () => (T$.OffsetLToNull = dart.constFn(dart.fnType(core.Null, [T$.OffsetL()])))(),
    VerticalDragGestureRecognizerL: () => (T$.VerticalDragGestureRecognizerL = dart.constFn(dart.legacy(monodrag.VerticalDragGestureRecognizer)))(),
    GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizerL: () => (T$.GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizerL = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(T$.VerticalDragGestureRecognizerL())))(),
    VoidToVerticalDragGestureRecognizerL: () => (T$.VoidToVerticalDragGestureRecognizerL = dart.constFn(dart.fnType(T$.VerticalDragGestureRecognizerL(), [])))(),
    VerticalDragGestureRecognizerLToNull: () => (T$.VerticalDragGestureRecognizerLToNull = dart.constFn(dart.fnType(core.Null, [T$.VerticalDragGestureRecognizerL()])))(),
    LinkedMapOfTypeL$GestureRecognizerFactoryLOfGestureRecognizerL: () => (T$.LinkedMapOfTypeL$GestureRecognizerFactoryLOfGestureRecognizerL = dart.constFn(_js_helper.LinkedMap$(T$.TypeL(), T$.GestureRecognizerFactoryLOfGestureRecognizerL())))(),
    HorizontalDragGestureRecognizerL: () => (T$.HorizontalDragGestureRecognizerL = dart.constFn(dart.legacy(monodrag.HorizontalDragGestureRecognizer)))(),
    GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizerL: () => (T$.GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizerL = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(T$.HorizontalDragGestureRecognizerL())))(),
    VoidToHorizontalDragGestureRecognizerL: () => (T$.VoidToHorizontalDragGestureRecognizerL = dart.constFn(dart.fnType(T$.HorizontalDragGestureRecognizerL(), [])))(),
    HorizontalDragGestureRecognizerLToNull: () => (T$.HorizontalDragGestureRecognizerLToNull = dart.constFn(dart.fnType(core.Null, [T$.HorizontalDragGestureRecognizerL()])))(),
    ExtendedImageGesturePageViewL: () => (T$.ExtendedImageGesturePageViewL = dart.constFn(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageView)))(),
    ExtendedImageSlidePageStateL: () => (T$.ExtendedImageSlidePageStateL = dart.constFn(dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)))(),
    ExtendedImageSlidePageHandlerL: () => (T$.ExtendedImageSlidePageHandlerL = dart.constFn(dart.legacy(extended_image_slide_page_handler.ExtendedImageSlidePageHandler)))(),
    SlideAxisL: () => (T$.SlideAxisL = dart.constFn(dart.legacy(extended_image_slide_page.SlideAxis)))(),
    SlideTypeL: () => (T$.SlideTypeL = dart.constFn(dart.legacy(extended_image_slide_page.SlideType)))(),
    ExtendedImageSlidePageL: () => (T$.ExtendedImageSlidePageL = dart.constFn(dart.legacy(extended_image_slide_page.ExtendedImageSlidePage)))(),
    TweenOfdoubleL: () => (T$.TweenOfdoubleL = dart.constFn(tween.Tween$(T$.doubleL())))(),
    InitCropRectTypeL: () => (T$.InitCropRectTypeL = dart.constFn(dart.legacy(extended_image_editor_utils.InitCropRectType)))(),
    BoundaryL: () => (T$.BoundaryL = dart.constFn(dart.legacy(extended_image_gesture_utils.Boundary)))(),
    InitialAlignmentL: () => (T$.InitialAlignmentL = dart.constFn(dart.legacy(extended_image_gesture_utils.InitialAlignment)))(),
    ActionTypeL: () => (T$.ActionTypeL = dart.constFn(dart.legacy(extended_image_gesture_utils.ActionType)))(),
    doubleLToNull: () => (T$.doubleLToNull = dart.constFn(dart.fnType(core.Null, [T$.doubleL()])))(),
    ExtendedImageGesturePageViewStateL: () => (T$.ExtendedImageGesturePageViewStateL = dart.constFn(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageViewState)))(),
    ExtendedImageGestureL: () => (T$.ExtendedImageGestureL = dart.constFn(dart.legacy(extended_image_gesture.ExtendedImageGesture)))(),
    PointerScrollEventL: () => (T$.PointerScrollEventL = dart.constFn(dart.legacy(events.PointerScrollEvent)))(),
    LinkedMapOfObjectL$GestureDetailsL: () => (T$.LinkedMapOfObjectL$GestureDetailsL = dart.constFn(_js_helper.LinkedMap$(T$.ObjectL(), T$.GestureDetailsL())))(),
    ExtendedImageL: () => (T$.ExtendedImageL = dart.constFn(dart.legacy(extended_image.ExtendedImage)))(),
    StateOfExtendedImageL: () => (T$.StateOfExtendedImageL = dart.constFn(framework.State$(T$.ExtendedImageL())))(),
    StateLOfExtendedImageL: () => (T$.StateLOfExtendedImageL = dart.constFn(dart.legacy(T$.StateOfExtendedImageL())))(),
    DisposableBuildContextOfStateLOfExtendedImageL: () => (T$.DisposableBuildContextOfStateLOfExtendedImageL = dart.constFn(disposable_build_context.DisposableBuildContext$(T$.StateLOfExtendedImageL())))(),
    AlwaysStoppedAnimationOfColorL: () => (T$.AlwaysStoppedAnimationOfColorL = dart.constFn(animations.AlwaysStoppedAnimation$(T$.ColorL())))(),
    ImageStreamL: () => (T$.ImageStreamL = dart.constFn(dart.legacy(image_stream.ImageStream)))(),
    DiagnosticsPropertyOfImageStreamL: () => (T$.DiagnosticsPropertyOfImageStreamL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.ImageStreamL())))(),
    ImageInfoL: () => (T$.ImageInfoL = dart.constFn(dart.legacy(image_stream.ImageInfo)))(),
    DiagnosticsPropertyOfImageInfoL: () => (T$.DiagnosticsPropertyOfImageInfoL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.ImageInfoL())))(),
    ImageChunkEventL: () => (T$.ImageChunkEventL = dart.constFn(dart.legacy(image_stream.ImageChunkEvent)))(),
    DiagnosticsPropertyOfImageChunkEventL: () => (T$.DiagnosticsPropertyOfImageChunkEventL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.ImageChunkEventL())))(),
    DiagnosticsPropertyOfintL: () => (T$.DiagnosticsPropertyOfintL = dart.constFn(diagnostics.DiagnosticsProperty$(T$.intL())))(),
    LoadStateL: () => (T$.LoadStateL = dart.constFn(dart.legacy(extended_image_utils.LoadState)))(),
    ExtendedImageModeL: () => (T$.ExtendedImageModeL = dart.constFn(dart.legacy(extended_image_utils.ExtendedImageMode)))(),
    ExtendedImageProviderL: () => (T$.ExtendedImageProviderL = dart.constFn(dart.legacy(extended_image_provider.ExtendedImageProvider)))(),
    ExtendedImageCropLayerStateL: () => (T$.ExtendedImageCropLayerStateL = dart.constFn(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayerState)))(),
    GlobalKeyOfExtendedImageCropLayerStateL: () => (T$.GlobalKeyOfExtendedImageCropLayerStateL = dart.constFn(framework.GlobalKey$(T$.ExtendedImageCropLayerStateL())))(),
    ExtendedImageEditorL: () => (T$.ExtendedImageEditorL = dart.constFn(dart.legacy(extended_image_editor.ExtendedImageEditor)))(),
    BuildContextL: () => (T$.BuildContextL = dart.constFn(dart.legacy(framework.BuildContext)))(),
    BoxConstraintsL: () => (T$.BoxConstraintsL = dart.constFn(dart.legacy(box.BoxConstraints)))(),
    BuildContextLAndBoxConstraintsLToExtendedImageCropLayerL: () => (T$.BuildContextLAndBoxConstraintsLToExtendedImageCropLayerL = dart.constFn(dart.fnType(T$.ExtendedImageCropLayerL(), [T$.BuildContextL(), T$.BoxConstraintsL()])))(),
    PointerDownEventL: () => (T$.PointerDownEventL = dart.constFn(dart.legacy(events.PointerDownEvent)))(),
    PointerDownEventLToNull: () => (T$.PointerDownEventLToNull = dart.constFn(dart.fnType(core.Null, [T$.PointerDownEventL()])))(),
    PointerUpEventL: () => (T$.PointerUpEventL = dart.constFn(dart.legacy(events.PointerUpEvent)))(),
    PointerUpEventLToNull: () => (T$.PointerUpEventLToNull = dart.constFn(dart.fnType(core.Null, [T$.PointerUpEventL()])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T$);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5], T$._LocationL());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 107,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 400000
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.constList([C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11], T$._LocationL());
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[8] || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 294,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "primaryRouteAnimation",
        [_Location_column]: 9,
        [_Location_line]: 347,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "secondaryRouteAnimation",
        [_Location_column]: 9,
        [_Location_line]: 348,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 349,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "linearTransition",
        [_Location_column]: 9,
        [_Location_line]: 350,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.constList([C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17], T$._LocationL());
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[13] || CT.C13,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 346,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabledCallback",
        [_Location_column]: 11,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onStartPopGesture",
        [_Location_column]: 11,
        [_Location_line]: 359,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 360,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.constList([C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22], T$._LocationL());
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[19] || CT.C19,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 357,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "primaryRouteAnimation",
        [_Location_column]: 9,
        [_Location_line]: 354,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "secondaryRouteAnimation",
        [_Location_column]: 9,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "linearTransition",
        [_Location_column]: 9,
        [_Location_line]: 356,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.constList([C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27, C[28] || CT.C28], T$._LocationL());
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[24] || CT.C24,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 353,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.rtl",
        index: 0
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.ltr",
        index: 1
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 13,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 497,
        [_Location_file]: null
      });
    },
    get C32() {
      return C[32] = dart.constList([C[33] || CT.C33, C[34] || CT.C34], T$._LocationL());
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[32] || CT.C32,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 495,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "start",
        [_Location_column]: 11,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 11,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.constList([C[37] || CT.C37, C[38] || CT.C38, C[39] || CT.C39, C[40] || CT.C40, C[41] || CT.C41], T$._LocationL());
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[36] || CT.C36,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 490,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.constList([C[44] || CT.C44, C[45] || CT.C45], T$._LocationL());
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[43] || CT.C43,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 486,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.04,
        [Cubic_b]: 1,
        [Cubic_a]: 0.18
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 11,
        [_Location_line]: 679,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 11,
        [_Location_line]: 680,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 681,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.constList([C[49] || CT.C49, C[50] || CT.C50, C[51] || CT.C51], T$._LocationL());
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[48] || CT.C48,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 678,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 675,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 676,
        [_Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformHitTests",
        [_Location_column]: 7,
        [_Location_line]: 677,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 678,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.constList([C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57], T$._LocationL());
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[53] || CT.C53,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 674,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 1
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: -0.3333333333333333
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.topLeft",
        index: 0
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.topRight",
        index: 1
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.bottomRight",
        index: 2
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.bottomLeft",
        index: 3
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.top",
        index: 4
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.right",
        index: 5
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.bottom",
        index: 6
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: extended_image_crop_layer._moveType.prototype,
        [_name$]: "_moveType.left",
        index: 7
      });
    },
    get C68() {
      return C[68] = dart.constList([C[60] || CT.C60, C[61] || CT.C61, C[62] || CT.C62, C[63] || CT.C63, C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67], T$._moveTypeL());
    },
    get C70() {
      return C[70] = dart.constList([], T$._LocationL());
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[70] || CT.C70,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 91,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 144,
        [_Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 17,
        [_Location_line]: 145,
        [_Location_file]: null
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 17,
        [_Location_line]: 148,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.constList([C[73] || CT.C73, C[74] || CT.C74, C[75] || CT.C75], T$._LocationL());
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[72] || CT.C72,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 143,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 141,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 142,
        [_Location_file]: null
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C77() {
      return C[77] = dart.constList([C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80], T$._LocationL());
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[77] || CT.C77,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 140,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 139,
        [_Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 140,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.constList([C[83] || CT.C83, C[84] || CT.C84, C[85] || CT.C85], T$._LocationL());
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[82] || CT.C82,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 137,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 162,
        [_Location_file]: null
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 17,
        [_Location_line]: 163,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 17,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C87() {
      return C[87] = dart.constList([C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90], T$._LocationL());
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[87] || CT.C87,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 161,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 161,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.constList([C[93] || CT.C93, C[94] || CT.C94, C[95] || CT.C95], T$._LocationL());
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[92] || CT.C92,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 158,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.constList([C[98] || CT.C98, C[99] || CT.C99, C[100] || CT.C100], T$._LocationL());
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[97] || CT.C97,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 155,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 17,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 17,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C102() {
      return C[102] = dart.constList([C[103] || CT.C103, C[104] || CT.C104, C[105] || CT.C105], T$._LocationL());
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[102] || CT.C102,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 179,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.constList([C[108] || CT.C108, C[109] || CT.C109, C[110] || CT.C110], T$._LocationL());
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[107] || CT.C107,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 176,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.constList([C[113] || CT.C113, C[114] || CT.C114, C[115] || CT.C115], T$._LocationL());
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[112] || CT.C112,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 173,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 17,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 17,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.constList([C[118] || CT.C118, C[119] || CT.C119, C[120] || CT.C120], T$._LocationL());
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[117] || CT.C117,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 197,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.constList([C[123] || CT.C123, C[124] || CT.C124, C[125] || CT.C125], T$._LocationL());
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[122] || CT.C122,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 194,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C127() {
      return C[127] = dart.constList([C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130], T$._LocationL());
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[127] || CT.C127,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 191,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 17,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 17,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C132() {
      return C[132] = dart.constList([C[133] || CT.C133, C[134] || CT.C134, C[135] || CT.C135], T$._LocationL());
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[132] || CT.C132,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C137() {
      return C[137] = dart.constList([C[138] || CT.C138, C[139] || CT.C139, C[140] || CT.C140], T$._LocationL());
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[137] || CT.C137,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 212,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 211,
        [_Location_file]: null
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C142() {
      return C[142] = dart.constList([C[143] || CT.C143, C[144] || CT.C144, C[145] || CT.C145], T$._LocationL());
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[142] || CT.C142,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 209,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 17,
        [_Location_line]: 235,
        [_Location_file]: null
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 17,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C147() {
      return C[147] = dart.constList([C[148] || CT.C148, C[149] || CT.C149, C[150] || CT.C150], T$._LocationL());
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[147] || CT.C147,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 233,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C152() {
      return C[152] = dart.constList([C[153] || CT.C153, C[154] || CT.C154, C[155] || CT.C155], T$._LocationL());
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[152] || CT.C152,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 230,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C157() {
      return C[157] = dart.constList([C[158] || CT.C158, C[159] || CT.C159, C[160] || CT.C160], T$._LocationL());
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[157] || CT.C157,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 227,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 252,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 17,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 17,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C162() {
      return C[162] = dart.constList([C[163] || CT.C163, C[164] || CT.C164, C[165] || CT.C165], T$._LocationL());
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[162] || CT.C162,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 251,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 249,
        [_Location_file]: null
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C167() {
      return C[167] = dart.constList([C[168] || CT.C168, C[169] || CT.C169, C[170] || CT.C170], T$._LocationL());
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[167] || CT.C167,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 248,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 246,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 247,
        [_Location_file]: null
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 248,
        [_Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.constList([C[173] || CT.C173, C[174] || CT.C174, C[175] || CT.C175], T$._LocationL());
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[172] || CT.C172,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 245,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 17,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 17,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 17,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C177() {
      return C[177] = dart.constList([C[178] || CT.C178, C[179] || CT.C179, C[180] || CT.C180], T$._LocationL());
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[177] || CT.C177,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 269,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C182() {
      return C[182] = dart.constList([C[183] || CT.C183, C[184] || CT.C184, C[185] || CT.C185], T$._LocationL());
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[182] || CT.C182,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 266,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 13,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C187() {
      return C[187] = dart.constList([C[188] || CT.C188, C[189] || CT.C189, C[190] || CT.C190], T$._LocationL());
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[187] || CT.C187,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 263,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 135,
        [_Location_file]: null
      });
    },
    get C192() {
      return C[192] = dart.constList([C[193] || CT.C193], T$._LocationL());
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[192] || CT.C192,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 134,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 7,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 134,
        [_Location_file]: null
      });
    },
    get C195() {
      return C[195] = dart.constList([C[196] || CT.C196, C[197] || CT.C197], T$._LocationL());
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[195] || CT.C195,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 115,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_crop_layer.dart"
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: decoration_image.ImageRepeat.prototype,
        [_name$0]: "ImageRepeat.noRepeat",
        index: 3
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: ui.FilterQuality.prototype,
        [_name]: "FilterQuality.low",
        index: 1
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$1]: "Axis.horizontal",
        index: 0
      });
    },
    get C202() {
      return C[202] = dart.constList([], T$.WidgetL());
    },
    get C203() {
      return C[203] = dart.fn(extended_image_gesture_page_view._defaultCanMovePage, T$.GestureDetailsLToboolL());
    },
    get C204() {
      return C[204] = dart.fn(extended_image_gesture_page_view._defaultCanScrollPage, T$.GestureDetailsLToboolL());
    },
    get C205() {
      return C[205] = dart.constMap(T$.TypeL(), T$.GestureRecognizerFactoryLOfGestureRecognizerL(), []);
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$1]: "Axis.vertical",
        index: 1
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 7,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 7,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childrenDelegate",
        [_Location_column]: 7,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageSnapping",
        [_Location_column]: 7,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPageChanged",
        [_Location_column]: 7,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C208() {
      return C[208] = dart.constList([C[209] || CT.C209, C[210] || CT.C210, C[211] || CT.C211, C[212] || CT.C212, C[213] || CT.C213, C[214] || CT.C214, C[215] || CT.C215, C[216] || CT.C216], T$._LocationL());
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[208] || CT.C208,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 266,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture_page_view.dart"
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 9,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C218() {
      return C[218] = dart.constList([C[219] || CT.C219, C[220] || CT.C220, C[221] || CT.C221], T$._LocationL());
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[218] || CT.C218,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 279,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture_page_view.dart"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: scroll_physics.NeverScrollableScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleStart",
        [_Location_column]: 7,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleUpdate",
        [_Location_column]: 7,
        [_Location_line]: 50,
        [_Location_file]: null
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleEnd",
        [_Location_column]: 7,
        [_Location_line]: 51,
        [_Location_file]: null
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 52,
        [_Location_file]: null
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 53,
        [_Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.constList([C[225] || CT.C225, C[226] || CT.C226, C[227] || CT.C227, C[228] || CT.C228, C[229] || CT.C229], T$._LocationL());
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[224] || CT.C224,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 48,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_handler.dart"
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 11,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C231() {
      return C[231] = dart.constList([C[232] || CT.C232, C[233] || CT.C233], T$._LocationL());
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[231] || CT.C231,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 62,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_handler.dart"
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 9,
        [_Location_line]: 61,
        [_Location_file]: null
      });
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C235() {
      return C[235] = dart.constList([C[236] || CT.C236, C[237] || CT.C237], T$._LocationL());
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[235] || CT.C235,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 60,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_handler.dart"
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: extended_image_slide_page.SlideAxis.prototype,
        [_name$2]: "SlideAxis.both",
        index: 0
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: extended_image_slide_page.SlideAxis.prototype,
        [_name$2]: "SlideAxis.horizontal",
        index: 1
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: extended_image_slide_page.SlideAxis.prototype,
        [_name$2]: "SlideAxis.vertical",
        index: 2
      });
    },
    get C241() {
      return C[241] = dart.constList([C[238] || CT.C238, C[239] || CT.C239, C[240] || CT.C240], T$.SlideAxisL());
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: extended_image_slide_page.SlideType.prototype,
        [_name$2]: "SlideType.wholePage",
        index: 0
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: extended_image_slide_page.SlideType.prototype,
        [_name$2]: "SlideType.onlyImage",
        index: 1
      });
    },
    get C244() {
      return C[244] = dart.constList([C[242] || CT.C242, C[243] || CT.C243], T$.SlideTypeL());
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 11,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 235,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.constList([C[248] || CT.C248, C[249] || CT.C249], T$._LocationL());
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[247] || CT.C247,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 233,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page.dart"
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 9,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C251() {
      return C[251] = dart.constList([C[252] || CT.C252, C[253] || CT.C253], T$._LocationL());
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[251] || CT.C251,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 231,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page.dart"
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C255() {
      return C[255] = dart.constList([C[256] || CT.C256, C[257] || CT.C257], T$._LocationL());
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[255] || CT.C255,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 240,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page.dart"
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 5,
        [OffsetBase__dx]: 30
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: extended_image_editor_utils.InitCropRectType.prototype,
        [_name$3]: "InitCropRectType.imageRect",
        index: 0
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: proxy_box.HitTestBehavior.prototype,
        [_name$4]: "HitTestBehavior.deferToChild",
        index: 0
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: extended_image_editor_utils.InitCropRectType.prototype,
        [_name$3]: "InitCropRectType.layoutRect",
        index: 1
      });
    },
    get C264() {
      return C[264] = dart.constList([C[261] || CT.C261, C[263] || CT.C263], T$.InitCropRectTypeL());
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: extended_image_gesture_utils.ActionType.prototype,
        [_name$5]: "ActionType.pan",
        index: 1
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.topLeft",
        index: 0
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.topCenter",
        index: 1
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.topRight",
        index: 2
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.centerLeft",
        index: 3
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.center",
        index: 4
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.centerRight",
        index: 5
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.bottomLeft",
        index: 6
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.bottomCenter",
        index: 7
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: extended_image_gesture_utils.InitialAlignment.prototype,
        [_name$5]: "InitialAlignment.bottomRight",
        index: 8
      });
    },
    get C275() {
      return C[275] = dart.constList([C[266] || CT.C266, C[267] || CT.C267, C[268] || CT.C268, C[269] || CT.C269, C[270] || CT.C270, C[271] || CT.C271, C[272] || CT.C272, C[273] || CT.C273, C[274] || CT.C274], T$.InitialAlignmentL());
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: extended_image_gesture_utils.ActionType.prototype,
        [_name$5]: "ActionType.zoom",
        index: 0
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: extended_image_gesture_utils.ActionType.prototype,
        [_name$5]: "ActionType.edit",
        index: 2
      });
    },
    get C278() {
      return C[278] = dart.constList([C[276] || CT.C276, C[265] || CT.C265, C[277] || CT.C277], T$.ActionTypeL());
    },
    get C279() {
      return C[279] = dart.fn(extended_image_gesture._defaultCanScaleImage, T$.GestureDetailsLToboolL());
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 314,
        [_Location_file]: null
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 315,
        [_Location_file]: null
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 316,
        [_Location_file]: null
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 7,
        [_Location_line]: 317,
        [_Location_file]: null
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 318,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorBlendMode",
        [_Location_column]: 7,
        [_Location_line]: 319,
        [_Location_file]: null
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "repeat",
        [_Location_column]: 7,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerSlice",
        [_Location_column]: 7,
        [_Location_line]: 323,
        [_Location_file]: null
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 7,
        [_Location_line]: 324,
        [_Location_file]: null
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "invertColors",
        [_Location_column]: 7,
        [_Location_line]: 326,
        [_Location_file]: null
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filterQuality",
        [_Location_column]: 7,
        [_Location_line]: 327,
        [_Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "beforePaintImage",
        [_Location_column]: 7,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "afterPaintImage",
        [_Location_column]: 7,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureDetails",
        [_Location_column]: 7,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C281() {
      return C[281] = dart.constList([C[282] || CT.C282, C[283] || CT.C283, C[284] || CT.C284, C[285] || CT.C285, C[286] || CT.C286, C[287] || CT.C287, C[288] || CT.C288, C[289] || CT.C289, C[290] || CT.C290, C[291] || CT.C291, C[292] || CT.C292, C[293] || CT.C293, C[294] || CT.C294, C[295] || CT.C295, C[296] || CT.C296, C[297] || CT.C297], T$._LocationL());
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[281] || CT.C281,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 313,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture.dart"
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 13,
        [_Location_line]: 341,
        [_Location_file]: null
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 342,
        [_Location_file]: null
      });
    },
    get C299() {
      return C[299] = dart.constList([C[300] || CT.C300, C[301] || CT.C301], T$._LocationL());
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[299] || CT.C299,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 340,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture.dart"
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 11,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 340,
        [_Location_file]: null
      });
    },
    get C303() {
      return C[303] = dart.constList([C[304] || CT.C304, C[305] || CT.C305], T$._LocationL());
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[303] || CT.C303,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 338,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture.dart"
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleStart",
        [_Location_column]: 7,
        [_Location_line]: 351,
        [_Location_file]: null
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleUpdate",
        [_Location_column]: 7,
        [_Location_line]: 352,
        [_Location_file]: null
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleEnd",
        [_Location_column]: 7,
        [_Location_line]: 353,
        [_Location_file]: null
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 7,
        [_Location_line]: 354,
        [_Location_file]: null
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 356,
        [_Location_file]: null
      });
    },
    get C307() {
      return C[307] = dart.constList([C[308] || CT.C308, C[309] || CT.C309, C[310] || CT.C310, C[311] || CT.C311, C[312] || CT.C312, C[313] || CT.C313], T$._LocationL());
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[307] || CT.C307,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 350,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture.dart"
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 360,
        [_Location_file]: null
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 361,
        [_Location_file]: null
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 7,
        [_Location_line]: 362,
        [_Location_file]: null
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 363,
        [_Location_file]: null
      });
    },
    get C315() {
      return C[315] = dart.constList([C[316] || CT.C316, C[317] || CT.C317, C[318] || CT.C318, C[319] || CT.C319], T$._LocationL());
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[315] || CT.C315,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 359,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture.dart"
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.antiAlias",
        index: 2
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: extended_image_utils.ExtendedImageMode.prototype,
        [_name$6]: "ExtendedImageMode.none",
        index: 0
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 965,
        [_Location_file]: null
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 966,
        [_Location_file]: null
      });
    },
    get C324() {
      return C[324] = dart.constList([C[325] || CT.C325, C[326] || CT.C326], T$._LocationL());
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[324] || CT.C324,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 964,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: extended_image_utils.LoadState.prototype,
        [_name$6]: "LoadState.loading",
        index: 0
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: extended_image_utils.LoadState.prototype,
        [_name$6]: "LoadState.completed",
        index: 1
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 979,
        [_Location_file]: null
      });
    },
    get C331() {
      return C[331] = dart.constList([C[332] || CT.C332], T$._LocationL());
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[331] || CT.C331,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 979,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: text.Text.prototype,
        [Widget__location]: C[330] || CT.C330,
        [Widget_key]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Failed to load image"
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 17,
        [_Location_line]: 976,
        [_Location_file]: null
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 979,
        [_Location_file]: null
      });
    },
    get C334() {
      return C[334] = dart.constList([C[335] || CT.C335, C[336] || CT.C336], T$._LocationL());
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[334] || CT.C334,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 975,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 974,
        [_Location_file]: null
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 975,
        [_Location_file]: null
      });
    },
    get C338() {
      return C[338] = dart.constList([C[339] || CT.C339, C[340] || CT.C340], T$._LocationL());
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[338] || CT.C338,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 973,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: extended_image_utils.LoadState.prototype,
        [_name$6]: "LoadState.failed",
        index: 2
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 997,
        [_Location_file]: null
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 13,
        [_Location_line]: 998,
        [_Location_file]: null
      });
    },
    get C343() {
      return C[343] = dart.constList([C[344] || CT.C344, C[345] || CT.C345], T$._LocationL());
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[343] || CT.C343,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 996,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$7]: "BoxShape.circle",
        index: 1
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1004,
        [_Location_file]: null
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 15,
        [_Location_line]: 1005,
        [_Location_file]: null
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 15,
        [_Location_line]: 1006,
        [_Location_file]: null
      });
    },
    get C348() {
      return C[348] = dart.constList([C[349] || CT.C349, C[350] || CT.C350, C[351] || CT.C351], T$._LocationL());
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[348] || CT.C348,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1003,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$7]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 9,
        [_Location_line]: 1015,
        [_Location_file]: null
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1019,
        [_Location_file]: null
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 9,
        [_Location_line]: 1020,
        [_Location_file]: null
      });
    },
    get C354() {
      return C[354] = dart.constList([C[355] || CT.C355, C[356] || CT.C356, C[357] || CT.C357], T$._LocationL());
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[354] || CT.C354,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1014,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 32,
        [_Location_line]: 1027,
        [_Location_file]: null
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 65,
        [_Location_line]: 1027,
        [_Location_file]: null
      });
    },
    get C359() {
      return C[359] = dart.constList([C[360] || CT.C360, C[361] || CT.C361], T$._LocationL());
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[359] || CT.C359,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1027,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1035,
        [_Location_file]: null
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "extendedImageSlidePageState",
        [_Location_column]: 9,
        [_Location_line]: 1036,
        [_Location_file]: null
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heroBuilderForSlidingPage",
        [_Location_column]: 9,
        [_Location_line]: 1037,
        [_Location_file]: null
      });
    },
    get C363() {
      return C[363] = dart.constList([C[364] || CT.C364, C[365] || CT.C365, C[366] || CT.C366], T$._LocationL());
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[363] || CT.C363,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1034,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 1045,
        [_Location_file]: null
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 1046,
        [_Location_file]: null
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 7,
        [_Location_line]: 1047,
        [_Location_file]: null
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1048,
        [_Location_file]: null
      });
    },
    get C368() {
      return C[368] = dart.constList([C[369] || CT.C369, C[370] || CT.C370, C[371] || CT.C371, C[372] || CT.C372], T$._LocationL());
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[368] || CT.C368,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1044,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "extendedImageState",
        [_Location_column]: 9,
        [_Location_line]: 1056,
        [_Location_file]: null
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 1057,
        [_Location_file]: null
      });
    },
    get C374() {
      return C[374] = dart.constList([C[375] || CT.C375, C[376] || CT.C376], T$._LocationL());
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[374] || CT.C374,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1055,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "extendedImageState",
        [_Location_column]: 9,
        [_Location_line]: 1061,
        [_Location_file]: null
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 1062,
        [_Location_file]: null
      });
    },
    get C378() {
      return C[378] = dart.constList([C[379] || CT.C379, C[380] || CT.C380], T$._LocationL());
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[378] || CT.C378,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1060,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animating",
        [_Location_column]: 13,
        [_Location_line]: 1073,
        [_Location_file]: null
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 13,
        [_Location_line]: 1074,
        [_Location_file]: null
      });
    },
    get C383() {
      return C[383] = dart.constList([C[384] || CT.C384, C[385] || CT.C385], T$._LocationL());
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[383] || CT.C383,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1072,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: activity_indicator.CupertinoActivityIndicator.prototype,
        [Widget__location]: C[382] || CT.C382,
        [Widget_key]: null,
        [CupertinoActivityIndicator_progress]: 1,
        [CupertinoActivityIndicator_radius]: 16,
        [CupertinoActivityIndicator_animating]: true
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "strokeWidth",
        [_Location_column]: 13,
        [_Location_line]: 1077,
        [_Location_file]: null
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 13,
        [_Location_line]: 1078,
        [_Location_file]: null
      });
    },
    get C387() {
      return C[387] = dart.constList([C[388] || CT.C388, C[389] || CT.C389], T$._LocationL());
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[387] || CT.C387,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 1076,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 1085,
        [_Location_file]: null
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1086,
        [_Location_file]: null
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 1087,
        [_Location_file]: null
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 7,
        [_Location_line]: 1088,
        [_Location_file]: null
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 1089,
        [_Location_file]: null
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorBlendMode",
        [_Location_column]: 7,
        [_Location_line]: 1090,
        [_Location_file]: null
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 1091,
        [_Location_file]: null
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 1092,
        [_Location_file]: null
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "repeat",
        [_Location_column]: 7,
        [_Location_line]: 1093,
        [_Location_file]: null
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerSlice",
        [_Location_column]: 7,
        [_Location_line]: 1094,
        [_Location_file]: null
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 7,
        [_Location_line]: 1095,
        [_Location_file]: null
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "invertColors",
        [_Location_column]: 7,
        [_Location_line]: 1096,
        [_Location_file]: null
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAntiAlias",
        [_Location_column]: 7,
        [_Location_line]: 1097,
        [_Location_file]: null
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filterQuality",
        [_Location_column]: 7,
        [_Location_line]: 1098,
        [_Location_file]: null
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "beforePaintImage",
        [_Location_column]: 7,
        [_Location_line]: 1099,
        [_Location_file]: null
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "afterPaintImage",
        [_Location_column]: 7,
        [_Location_line]: 1100,
        [_Location_file]: null
      });
    },
    get C391() {
      return C[391] = dart.constList([C[392] || CT.C392, C[393] || CT.C393, C[394] || CT.C394, C[395] || CT.C395, C[396] || CT.C396, C[397] || CT.C397, C[398] || CT.C398, C[399] || CT.C399, C[400] || CT.C400, C[401] || CT.C401, C[402] || CT.C402, C[403] || CT.C403, C[404] || CT.C404, C[405] || CT.C405, C[406] || CT.C406, C[407] || CT.C407], T$._LocationL());
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[391] || CT.C391,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1084,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart"
      });
    },
    get C408() {
      return C[408] = dart.constList([C[327] || CT.C327, C[328] || CT.C328, C[341] || CT.C341], T$.LoadStateL());
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: extended_image_utils.ExtendedImageMode.prototype,
        [_name$6]: "ExtendedImageMode.gesture",
        index: 1
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: extended_image_utils.ExtendedImageMode.prototype,
        [_name$6]: "ExtendedImageMode.editor",
        index: 2
      });
    },
    get C411() {
      return C[411] = dart.constList([C[321] || CT.C321, C[409] || CT.C409, C[410] || CT.C410], T$.ExtendedImageModeL());
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 7,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorBlendMode",
        [_Location_column]: 7,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "repeat",
        [_Location_column]: 7,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerSlice",
        [_Location_column]: 7,
        [_Location_line]: 98,
        [_Location_file]: null
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 7,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "invertColors",
        [_Location_column]: 7,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filterQuality",
        [_Location_column]: 7,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "editActionDetails",
        [_Location_column]: 7,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C413() {
      return C[413] = dart.constList([C[414] || CT.C414, C[415] || CT.C415, C[416] || CT.C416, C[417] || CT.C417, C[418] || CT.C418, C[419] || CT.C419, C[420] || CT.C420, C[421] || CT.C421, C[422] || CT.C422, C[423] || CT.C423, C[424] || CT.C424, C[425] || CT.C425, C[426] || CT.C426, C[427] || CT.C427], T$._LocationL());
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[413] || CT.C413,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 88,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 114,
        [_Location_file]: null
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 15,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 15,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 15,
        [_Location_line]: 117,
        [_Location_file]: null
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 15,
        [_Location_line]: 118,
        [_Location_file]: null
      });
    },
    get C429() {
      return C[429] = dart.constList([C[430] || CT.C430, C[431] || CT.C431, C[432] || CT.C432, C[433] || CT.C433, C[434] || CT.C434], T$._LocationL());
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[429] || CT.C429,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 113,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 19,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "layoutRect",
        [_Location_column]: 19,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "editActionDetails",
        [_Location_column]: 19,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "editorConfig",
        [_Location_column]: 19,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 19,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C436() {
      return C[436] = dart.constList([C[437] || CT.C437, C[438] || CT.C438, C[439] || CT.C439, C[440] || CT.C440, C[441] || CT.C441], T$._LocationL());
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[436] || CT.C436,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 164,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 19,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C443() {
      return C[443] = dart.constList([C[444] || CT.C444], T$._LocationL());
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[443] || CT.C443,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 121,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 121,
        [_Location_file]: null
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 15,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 15,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 15,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 15,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C446() {
      return C[446] = dart.constList([C[447] || CT.C447, C[448] || CT.C448, C[449] || CT.C449, C[450] || CT.C450, C[451] || CT.C451], T$._LocationL());
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[446] || CT.C446,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 120,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C453() {
      return C[453] = dart.constList([C[454] || CT.C454], T$._LocationL());
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[453] || CT.C453,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 111,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleStart",
        [_Location_column]: 9,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScaleUpdate",
        [_Location_column]: 9,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C456() {
      return C[456] = dart.constList([C[457] || CT.C457, C[458] || CT.C458, C[459] || CT.C459, C[460] || CT.C460], T$._LocationL());
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[456] || CT.C456,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 107,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 7,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 7,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C462() {
      return C[462] = dart.constList([C[463] || CT.C463, C[464] || CT.C464, C[465] || CT.C465, C[466] || CT.C466, C[467] || CT.C467], T$._LocationL());
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[462] || CT.C462,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 179,
        [_Location_file]: "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart"
      });
    }
  }, false);
  var C = Array(468).fill(void 0);
  var I = [
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_slide_page_route.dart",
    "package:extended_image/src/gesture/extended_image_slide_page_route.dart",
    "package:extended_image/src/editor/extended_image_crop_layer.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/image/extended_render_image.dart",
    "package:extended_image/src/image/extended_render_image.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/image/extended_raw_image.dart",
    "package:extended_image/src/image/extended_raw_image.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture_page_view.dart",
    "package:extended_image/src/gesture/extended_image_gesture_page_view.dart",
    "package:extended_image/src/gesture/extended_image_slide_page_handler.dart",
    "package:extended_image/src/gesture/extended_image_slide_page.dart",
    "package:extended_image/src/editor/extended_image_editor_utils.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor_utils.dart",
    "package:extended_image/src/gesture/extended_image_gesture_utils.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/gesture/extended_image_gesture_utils.dart",
    "package:extended_image/src/gesture/extended_image_gesture.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/extended_image.dart",
    "package:extended_image/src/extended_image.dart",
    "package:extended_image/src/extended_image_utils.dart",
    "file:///C:/flutter/.pub-cache/hosted/pub.dartlang.org/extended_image-1.6.0/lib/src/editor/extended_image_editor.dart",
    "package:extended_image/src/editor/extended_image_editor.dart"
  ];
  var builder$ = dart.privateName(extended_image_slide_page_route, "TransparentMaterialPageRoute.builder");
  var maintainState$ = dart.privateName(extended_image_slide_page_route, "TransparentMaterialPageRoute.maintainState");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const _is_TransparentMaterialPageRoute_default = Symbol('_is_TransparentMaterialPageRoute_default');
  extended_image_slide_page_route.TransparentMaterialPageRoute$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    class TransparentMaterialPageRoute extends pages.PageRoute$(dart.legacy(T)) {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get opaque() {
        return false;
      }
      get transitionDuration() {
        return C[0] || CT.C0;
      }
      get barrierColor() {
        return null;
      }
      get barrierLabel() {
        return null;
      }
      canTransitionFrom(previousRoute) {
        return T$.MaterialPageRouteL().is(previousRoute) || T$.CupertinoPageRouteL().is(previousRoute) || T$.TransparentMaterialPageRouteL().is(previousRoute) || T$.TransparentCupertinoPageRouteL().is(previousRoute);
      }
      canTransitionTo(nextRoute) {
        return T$.MaterialPageRouteL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) || T$.CupertinoPageRouteL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) || T$.TransparentMaterialPageRouteL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) || T$.TransparentCupertinoPageRouteL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog);
      }
      buildPage(context, animation, secondaryAnimation) {
        let t0;
        let result = (t0 = context, this.builder(t0));
        if (!dart.test(dart.fn(() => {
          if (result == null) {
            dart.throw(assertions.FlutterError.new("The builder for route \"" + dart.str(this.settings.name) + "\" returned null.\n" + "Route builders must never return null."));
          }
          return true;
        }, T$.VoidToboolL())())) dart.assertFailed(null, I[0], 99, 12, "() {\n      if (result == null) {\n        throw FlutterError(\n            'The builder for route \"${settings.name}\" returned null.\\n'\n            'Route builders must never return null.');\n      }\n      return true;\n    }()");
        return new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: result, $creationLocationd_0dea112b090073317d4: C[1] || CT.C1});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        let theme = theme$.Theme.of(context).pageTransitionsTheme;
        return theme.buildTransitions(TL(), this, context, animation, secondaryAnimation, child);
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this.settings.name) + ")";
      }
    }
    (TransparentMaterialPageRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      this[builder$] = builder;
      this[maintainState$] = maintainState;
      if (!(builder != null)) dart.assertFailed(null, I[0], 48, 16, "builder != null");
      if (!(maintainState != null)) dart.assertFailed(null, I[0], 49, 16, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, I[0], 50, 16, "fullscreenDialog != null");
      TransparentMaterialPageRoute.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = TransparentMaterialPageRoute.prototype;
    dart.addTypeTests(TransparentMaterialPageRoute);
    TransparentMaterialPageRoute.prototype[_is_TransparentMaterialPageRoute_default] = true;
    dart.addTypeCaches(TransparentMaterialPageRoute);
    dart.setMethodSignature(TransparentMaterialPageRoute, () => ({
      __proto__: dart.getMethods(TransparentMaterialPageRoute.__proto__),
      canTransitionFrom: dart.fnType(dart.legacy(core.bool), [dart.legacy(routes.TransitionRoute)]),
      canTransitionTo: dart.fnType(dart.legacy(core.bool), [dart.legacy(routes.TransitionRoute)]),
      buildPage: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double)))]),
      buildTransitions: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)])
    }));
    dart.setGetterSignature(TransparentMaterialPageRoute, () => ({
      __proto__: dart.getGetters(TransparentMaterialPageRoute.__proto__),
      opaque: dart.legacy(core.bool),
      transitionDuration: dart.legacy(core.Duration),
      barrierColor: dart.legacy(ui.Color),
      barrierLabel: dart.legacy(core.String),
      debugLabel: dart.legacy(core.String)
    }));
    dart.setLibraryUri(TransparentMaterialPageRoute, I[1]);
    dart.setFieldSignature(TransparentMaterialPageRoute, () => ({
      __proto__: dart.getFields(TransparentMaterialPageRoute.__proto__),
      builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
      maintainState: dart.finalFieldType(dart.legacy(core.bool))
    }));
    return TransparentMaterialPageRoute;
  });
  extended_image_slide_page_route.TransparentMaterialPageRoute = extended_image_slide_page_route.TransparentMaterialPageRoute$();
  dart.addTypeTests(extended_image_slide_page_route.TransparentMaterialPageRoute, _is_TransparentMaterialPageRoute_default);
  var builder$0 = dart.privateName(extended_image_slide_page_route, "TransparentCupertinoPageRoute.builder");
  var title$ = dart.privateName(extended_image_slide_page_route, "TransparentCupertinoPageRoute.title");
  var maintainState$0 = dart.privateName(extended_image_slide_page_route, "TransparentCupertinoPageRoute.maintainState");
  var _previousTitle = dart.privateName(extended_image_slide_page_route, "_previousTitle");
  const _is_TransparentCupertinoPageRoute_default = Symbol('_is_TransparentCupertinoPageRoute_default');
  extended_image_slide_page_route.TransparentCupertinoPageRoute$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    class TransparentCupertinoPageRoute extends pages.PageRoute$(dart.legacy(T)) {
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      get title() {
        return this[title$];
      }
      set title(value) {
        super.title = value;
      }
      get maintainState() {
        return this[maintainState$0];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get opaque() {
        return false;
      }
      get previousTitle() {
        if (!(this[_previousTitle] != null)) dart.assertFailed("Cannot read the previousTitle for a route that has not yet been installed", I[0], 174, 7, "_previousTitle != null");
        return this[_previousTitle];
      }
      didChangePrevious(previousRoute) {
        let previousTitleString = T$.CupertinoPageRouteL().is(previousRoute) ? previousRoute.title : null;
        if (this[_previousTitle] == null) {
          this[_previousTitle] = new (T$.ValueNotifierOfStringL()).new(previousTitleString);
        } else {
          this[_previousTitle].value = previousTitleString;
        }
        super.didChangePrevious(previousRoute);
      }
      get transitionDuration() {
        return C[6] || CT.C6;
      }
      get barrierColor() {
        return null;
      }
      get barrierLabel() {
        return null;
      }
      canTransitionFrom(previousRoute) {
        return T$.CupertinoPageRouteL().is(previousRoute) || T$.TransparentCupertinoPageRouteL().is(previousRoute);
      }
      canTransitionTo(nextRoute) {
        return T$.CupertinoPageRouteL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) || T$.TransparentCupertinoPageRouteL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog);
      }
      static isPopGestureInProgress(route) {
        return route.navigator.userGestureInProgress;
      }
      get popGestureInProgress() {
        return extended_image_slide_page_route.TransparentCupertinoPageRoute.isPopGestureInProgress(this);
      }
      get popGestureEnabled() {
        return extended_image_slide_page_route.TransparentCupertinoPageRoute._isPopGestureEnabled(TL(), this);
      }
      static _isPopGestureEnabled(T, route) {
        if (dart.test(route.isFirst)) {
          return false;
        }
        if (dart.test(route.willHandlePopInternally)) {
          return false;
        }
        if (dart.test(route.hasScopedWillPopCallback)) {
          return false;
        }
        if (dart.test(route.fullscreenDialog)) {
          return false;
        }
        if (route.animation.status != animation.AnimationStatus.completed) {
          return false;
        }
        if (route.secondaryAnimation.status != animation.AnimationStatus.dismissed) {
          return false;
        }
        if (dart.test(extended_image_slide_page_route.TransparentCupertinoPageRoute.isPopGestureInProgress(route))) {
          return false;
        }
        return true;
      }
      buildPage(context, animation, secondaryAnimation) {
        let t0;
        let result = new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: (t0 = context, this.builder(t0)), $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
        if (!dart.test(dart.fn(() => {
          if (result === null) {
            dart.throw(assertions.FlutterError.new("The builder for route \"" + dart.str(this.settings.name) + "\" returned null.\n" + "Route builders must never return null."));
          }
          return true;
        }, T$.VoidToboolL())())) dart.assertFailed(null, I[0], 299, 12, "() {\n      if (result == null) {\n        throw FlutterError(\n            'The builder for route \"${settings.name}\" returned null.\\n'\n            'Route builders must never return null.');\n      }\n      return true;\n    }()");
        return result;
      }
      static _startPopGesture(T, route) {
        if (!dart.test(extended_image_slide_page_route.TransparentCupertinoPageRoute._isPopGestureEnabled(dart.legacy(T), route))) dart.assertFailed(null, I[0], 315, 12, "_isPopGestureEnabled(route)");
        return new (extended_image_slide_page_route._CupertinoBackGestureController$(dart.legacy(T))).new({navigator: route.navigator, controller: route.controller});
      }
      static buildPageTransitions(T, route, context, animation, secondaryAnimation, child) {
        let linearTransition = extended_image_slide_page_route.TransparentCupertinoPageRoute.isPopGestureInProgress(route);
        if (dart.test(route.fullscreenDialog)) {
          return new route$.CupertinoFullscreenDialogTransition.new({primaryRouteAnimation: animation, secondaryRouteAnimation: secondaryAnimation, child: child, linearTransition: linearTransition, $creationLocationd_0dea112b090073317d4: C[12] || CT.C12});
        } else {
          return new extended_image_slide_page_route.CupertinoPageTransition.new({primaryRouteAnimation: animation, secondaryRouteAnimation: secondaryAnimation, linearTransition: linearTransition, child: new (extended_image_slide_page_route._CupertinoBackGestureDetector$(dart.legacy(T))).new({enabledCallback: dart.fn(() => extended_image_slide_page_route.TransparentCupertinoPageRoute._isPopGestureEnabled(dart.legacy(T), route), T$.VoidToboolL()), onStartPopGesture: dart.fn(() => extended_image_slide_page_route.TransparentCupertinoPageRoute._startPopGesture(dart.legacy(T), route), dart.fnType(dart.legacy(extended_image_slide_page_route._CupertinoBackGestureController$(dart.legacy(T))), [])), child: child, $creationLocationd_0dea112b090073317d4: C[18] || CT.C18}), $creationLocationd_0dea112b090073317d4: C[23] || CT.C23});
        }
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        return extended_image_slide_page_route.TransparentCupertinoPageRoute.buildPageTransitions(TL(), this, context, animation, secondaryAnimation, child);
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this.settings.name) + ")";
      }
    }
    (TransparentCupertinoPageRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      this[_previousTitle] = null;
      this[builder$0] = builder;
      this[title$] = title;
      this[maintainState$0] = maintainState;
      if (!(builder != null)) dart.assertFailed(null, I[0], 137, 16, "builder != null");
      if (!(maintainState != null)) dart.assertFailed(null, I[0], 138, 16, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, I[0], 139, 16, "fullscreenDialog != null");
      TransparentCupertinoPageRoute.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = TransparentCupertinoPageRoute.prototype;
    dart.addTypeTests(TransparentCupertinoPageRoute);
    TransparentCupertinoPageRoute.prototype[_is_TransparentCupertinoPageRoute_default] = true;
    dart.addTypeCaches(TransparentCupertinoPageRoute);
    dart.setMethodSignature(TransparentCupertinoPageRoute, () => ({
      __proto__: dart.getMethods(TransparentCupertinoPageRoute.__proto__),
      didChangePrevious: dart.fnType(dart.void, [dart.legacy(navigator.Route)]),
      canTransitionFrom: dart.fnType(dart.legacy(core.bool), [dart.legacy(routes.TransitionRoute)]),
      canTransitionTo: dart.fnType(dart.legacy(core.bool), [dart.legacy(routes.TransitionRoute)]),
      buildPage: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double)))]),
      buildTransitions: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)])
    }));
    dart.setGetterSignature(TransparentCupertinoPageRoute, () => ({
      __proto__: dart.getGetters(TransparentCupertinoPageRoute.__proto__),
      opaque: dart.legacy(core.bool),
      previousTitle: dart.legacy(change_notifier.ValueListenable$(dart.legacy(core.String))),
      transitionDuration: dart.legacy(core.Duration),
      barrierColor: dart.legacy(ui.Color),
      barrierLabel: dart.legacy(core.String),
      popGestureInProgress: dart.legacy(core.bool),
      popGestureEnabled: dart.legacy(core.bool),
      debugLabel: dart.legacy(core.String)
    }));
    dart.setLibraryUri(TransparentCupertinoPageRoute, I[1]);
    dart.setFieldSignature(TransparentCupertinoPageRoute, () => ({
      __proto__: dart.getFields(TransparentCupertinoPageRoute.__proto__),
      builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
      title: dart.finalFieldType(dart.legacy(core.String)),
      [_previousTitle]: dart.fieldType(dart.legacy(change_notifier.ValueNotifier$(dart.legacy(core.String)))),
      maintainState: dart.finalFieldType(dart.legacy(core.bool))
    }));
    return TransparentCupertinoPageRoute;
  });
  extended_image_slide_page_route.TransparentCupertinoPageRoute = extended_image_slide_page_route.TransparentCupertinoPageRoute$();
  dart.addTypeTests(extended_image_slide_page_route.TransparentCupertinoPageRoute, _is_TransparentCupertinoPageRoute_default);
  var child$ = dart.privateName(extended_image_slide_page_route, "_CupertinoBackGestureDetector.child");
  var enabledCallback$ = dart.privateName(extended_image_slide_page_route, "_CupertinoBackGestureDetector.enabledCallback");
  var onStartPopGesture$ = dart.privateName(extended_image_slide_page_route, "_CupertinoBackGestureDetector.onStartPopGesture");
  const _is__CupertinoBackGestureDetector_default = Symbol('_is__CupertinoBackGestureDetector_default');
  extended_image_slide_page_route._CupertinoBackGestureDetector$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    var _CupertinoBackGestureDetectorStateOfTL = () => (_CupertinoBackGestureDetectorStateOfTL = dart.constFn(extended_image_slide_page_route._CupertinoBackGestureDetectorState$(TL())))();
    class _CupertinoBackGestureDetector extends framework.StatefulWidget {
      get child() {
        return this[child$];
      }
      set child(value) {
        super.child = value;
      }
      get enabledCallback() {
        return this[enabledCallback$];
      }
      set enabledCallback(value) {
        super.enabledCallback = value;
      }
      get onStartPopGesture() {
        return this[onStartPopGesture$];
      }
      set onStartPopGesture(value) {
        super.onStartPopGesture = value;
      }
      createState() {
        return new (_CupertinoBackGestureDetectorStateOfTL()).new();
      }
    }
    (_CupertinoBackGestureDetector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let enabledCallback = opts && 'enabledCallback' in opts ? opts.enabledCallback : null;
      let onStartPopGesture = opts && 'onStartPopGesture' in opts ? opts.onStartPopGesture : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[enabledCallback$] = enabledCallback;
      this[onStartPopGesture$] = onStartPopGesture;
      this[child$] = child;
      if (!(enabledCallback != null)) dart.assertFailed(null, I[0], 394, 16, "enabledCallback != null");
      if (!(onStartPopGesture != null)) dart.assertFailed(null, I[0], 395, 16, "onStartPopGesture != null");
      if (!(child != null)) dart.assertFailed(null, I[0], 396, 16, "child != null");
      _CupertinoBackGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _CupertinoBackGestureDetector.prototype;
    dart.addTypeTests(_CupertinoBackGestureDetector);
    _CupertinoBackGestureDetector.prototype[_is__CupertinoBackGestureDetector_default] = true;
    dart.addTypeCaches(_CupertinoBackGestureDetector);
    dart.setMethodSignature(_CupertinoBackGestureDetector, () => ({
      __proto__: dart.getMethods(_CupertinoBackGestureDetector.__proto__),
      createState: dart.fnType(dart.legacy(extended_image_slide_page_route._CupertinoBackGestureDetectorState$(dart.legacy(T))), [])
    }));
    dart.setLibraryUri(_CupertinoBackGestureDetector, I[1]);
    dart.setFieldSignature(_CupertinoBackGestureDetector, () => ({
      __proto__: dart.getFields(_CupertinoBackGestureDetector.__proto__),
      child: dart.finalFieldType(dart.legacy(framework.Widget)),
      enabledCallback: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), []))),
      onStartPopGesture: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(extended_image_slide_page_route._CupertinoBackGestureController$(dart.legacy(T))), [])))
    }));
    return _CupertinoBackGestureDetector;
  });
  extended_image_slide_page_route._CupertinoBackGestureDetector = extended_image_slide_page_route._CupertinoBackGestureDetector$();
  dart.addTypeTests(extended_image_slide_page_route._CupertinoBackGestureDetector, _is__CupertinoBackGestureDetector_default);
  var _backGestureController = dart.privateName(extended_image_slide_page_route, "_backGestureController");
  var _recognizer = dart.privateName(extended_image_slide_page_route, "_recognizer");
  var _handleDragStart = dart.privateName(extended_image_slide_page_route, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(extended_image_slide_page_route, "_handleDragUpdate");
  var _handleDragEnd = dart.privateName(extended_image_slide_page_route, "_handleDragEnd");
  var _handleDragCancel = dart.privateName(extended_image_slide_page_route, "_handleDragCancel");
  var _convertToLogical = dart.privateName(extended_image_slide_page_route, "_convertToLogical");
  var _handlePointerDown = dart.privateName(extended_image_slide_page_route, "_handlePointerDown");
  var _name = dart.privateName(ui, "_name");
  const _is__CupertinoBackGestureDetectorState_default = Symbol('_is__CupertinoBackGestureDetectorState_default');
  extended_image_slide_page_route._CupertinoBackGestureDetectorState$ = dart.generic(T => {
    class _CupertinoBackGestureDetectorState extends framework.State$(dart.legacy(extended_image_slide_page_route._CupertinoBackGestureDetector$(dart.legacy(T)))) {
      initState() {
        let t0;
        super.initState();
        this[_recognizer] = (t0 = new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this}), (() => {
          t0.onStart = dart.bind(this, _handleDragStart);
          t0.onUpdate = dart.bind(this, _handleDragUpdate);
          t0.onEnd = dart.bind(this, _handleDragEnd);
          t0.onCancel = dart.bind(this, _handleDragCancel);
          return t0;
        })());
      }
      dispose() {
        this[_recognizer].dispose();
        super.dispose();
      }
      [_handleDragStart](details) {
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[0], 433, 12, "mounted");
        if (!(this[_backGestureController] == null)) dart.assertFailed(null, I[0], 434, 12, "_backGestureController == null");
        this[_backGestureController] = this.widget.onStartPopGesture();
      }
      [_handleDragUpdate](details) {
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[0], 439, 12, "mounted");
        if (!(this[_backGestureController] != null)) dart.assertFailed(null, I[0], 440, 12, "_backGestureController != null");
        this[_backGestureController].dragUpdate(this[_convertToLogical](dart.notNull(details.primaryDelta) / dart.notNull(this.context.size.width)));
      }
      [_handleDragEnd](details) {
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[0], 446, 12, "mounted");
        if (!(this[_backGestureController] != null)) dart.assertFailed(null, I[0], 447, 12, "_backGestureController != null");
        this[_backGestureController].dragEnd(this[_convertToLogical](dart.notNull(details.velocity.pixelsPerSecond.dx) / dart.notNull(this.context.size.width)));
        this[_backGestureController] = null;
      }
      [_handleDragCancel]() {
        let t0;
        if (!dart.test(this.mounted)) dart.assertFailed(null, I[0], 454, 12, "mounted");
        t0 = this[_backGestureController];
        t0 == null ? null : t0.dragEnd(0.0);
        this[_backGestureController] = null;
      }
      [_handlePointerDown](event) {
        if (dart.test(this.widget.enabledCallback())) {
          this[_recognizer].addPointer(event);
        }
      }
      [_convertToLogical](value) {
        switch (basic.Directionality.of(this.context)) {
          case C[29] || CT.C29:
          {
            return -dart.notNull(value);
          }
          case C[30] || CT.C30:
          {
            return value;
          }
        }
        return null;
      }
      build(context) {
        if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[0], 479, 12, "debugCheckHasDirectionality(context)");
        let dragAreaWidth = basic.Directionality.of(context) == ui.TextDirection.ltr ? media_query.MediaQuery.of(context).padding.left : media_query.MediaQuery.of(context).padding.right;
        dragAreaWidth = math.max(T$.doubleL(), dragAreaWidth, 20);
        return new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidgetL().of([this.widget.child, new basic.PositionedDirectional.new({start: 0.0, width: dragAreaWidth, top: 0.0, bottom: 0.0, child: new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown), behavior: proxy_box.HitTestBehavior.translucent, $creationLocationd_0dea112b090073317d4: C[31] || CT.C31}), $creationLocationd_0dea112b090073317d4: C[35] || CT.C35})]), $creationLocationd_0dea112b090073317d4: C[42] || CT.C42});
      }
    }
    (_CupertinoBackGestureDetectorState.new = function() {
      this[_backGestureController] = null;
      this[_recognizer] = null;
      _CupertinoBackGestureDetectorState.__proto__.new.call(this);
      ;
    }).prototype = _CupertinoBackGestureDetectorState.prototype;
    dart.addTypeTests(_CupertinoBackGestureDetectorState);
    _CupertinoBackGestureDetectorState.prototype[_is__CupertinoBackGestureDetectorState_default] = true;
    dart.addTypeCaches(_CupertinoBackGestureDetectorState);
    dart.setMethodSignature(_CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getMethods(_CupertinoBackGestureDetectorState.__proto__),
      [_handleDragStart]: dart.fnType(dart.void, [dart.legacy(drag_details.DragStartDetails)]),
      [_handleDragUpdate]: dart.fnType(dart.void, [dart.legacy(drag_details.DragUpdateDetails)]),
      [_handleDragEnd]: dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)]),
      [_handleDragCancel]: dart.fnType(dart.void, []),
      [_handlePointerDown]: dart.fnType(dart.void, [dart.legacy(events.PointerDownEvent)]),
      [_convertToLogical]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double)]),
      build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
    }));
    dart.setLibraryUri(_CupertinoBackGestureDetectorState, I[1]);
    dart.setFieldSignature(_CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getFields(_CupertinoBackGestureDetectorState.__proto__),
      [_backGestureController]: dart.fieldType(dart.legacy(extended_image_slide_page_route._CupertinoBackGestureController$(dart.legacy(T)))),
      [_recognizer]: dart.fieldType(dart.legacy(monodrag.HorizontalDragGestureRecognizer))
    }));
    return _CupertinoBackGestureDetectorState;
  });
  extended_image_slide_page_route._CupertinoBackGestureDetectorState = extended_image_slide_page_route._CupertinoBackGestureDetectorState$();
  dart.addTypeTests(extended_image_slide_page_route._CupertinoBackGestureDetectorState, _is__CupertinoBackGestureDetectorState_default);
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  const _is__CupertinoBackGestureController_default = Symbol('_is__CupertinoBackGestureController_default');
  extended_image_slide_page_route._CupertinoBackGestureController$ = dart.generic(T => {
    class _CupertinoBackGestureController extends core.Object {
      dragUpdate(delta) {
        let t0;
        t0 = this.controller;
        t0.value = dart.notNull(t0.value) - dart.notNull(delta);
      }
      dragEnd(velocity) {
        let animationCurve = C[46] || CT.C46;
        let animateForward = null;
        if (dart.notNull(extended_image_utils.doubleCompare(velocity[$abs](), 1)) >= 0) {
          if (dart.notNull(velocity) > 0) {
            animateForward = false;
          } else {
            animateForward = true;
          }
        } else {
          if (dart.notNull(this.controller.value) > 0.5) {
            animateForward = true;
          } else {
            animateForward = false;
          }
        }
        if (dart.test(animateForward)) {
          let droppedPageForwardAnimationTime = math.min(T$.intL(), ui.lerpDouble(800, 0, this.controller.value)[$floor](), 300);
          this.controller.animateTo(1.0, {duration: new core.Duration.new({milliseconds: droppedPageForwardAnimationTime}), curve: animationCurve});
        } else {
          this.navigator.pop(T$.ObjectL());
          if (dart.test(this.controller.isAnimating)) {
            let droppedPageBackAnimationTime = ui.lerpDouble(0, 800, this.controller.value)[$floor]();
            this.controller.animateBack(0.0, {duration: new core.Duration.new({milliseconds: droppedPageBackAnimationTime}), curve: animationCurve});
          }
        }
        if (dart.test(this.controller.isAnimating)) {
          let animationStatusCallback = null;
          animationStatusCallback = dart.fn(status => {
            this.navigator.didStopUserGesture();
            this.controller.removeStatusListener(animationStatusCallback);
          }, T$.AnimationStatusLToNull());
          this.controller.addStatusListener(animationStatusCallback);
        } else {
          this.navigator.didStopUserGesture();
        }
      }
    }
    (_CupertinoBackGestureController.new = function(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      this.navigator = navigator;
      this.controller = controller;
      if (!(navigator != null)) dart.assertFailed(null, I[0], 524, 16, "navigator != null");
      if (!(controller != null)) dart.assertFailed(null, I[0], 525, 16, "controller != null");
      this.navigator.didStartUserGesture();
    }).prototype = _CupertinoBackGestureController.prototype;
    dart.addTypeTests(_CupertinoBackGestureController);
    _CupertinoBackGestureController.prototype[_is__CupertinoBackGestureController_default] = true;
    dart.addTypeCaches(_CupertinoBackGestureController);
    dart.setMethodSignature(_CupertinoBackGestureController, () => ({
      __proto__: dart.getMethods(_CupertinoBackGestureController.__proto__),
      dragUpdate: dart.fnType(dart.void, [dart.legacy(core.double)]),
      dragEnd: dart.fnType(dart.void, [dart.legacy(core.double)])
    }));
    dart.setLibraryUri(_CupertinoBackGestureController, I[1]);
    dart.setFieldSignature(_CupertinoBackGestureController, () => ({
      __proto__: dart.getFields(_CupertinoBackGestureController.__proto__),
      controller: dart.finalFieldType(dart.legacy(animation_controller.AnimationController)),
      navigator: dart.finalFieldType(dart.legacy(navigator.NavigatorState))
    }));
    return _CupertinoBackGestureController;
  });
  extended_image_slide_page_route._CupertinoBackGestureController = extended_image_slide_page_route._CupertinoBackGestureController$();
  dart.addTypeTests(extended_image_slide_page_route._CupertinoBackGestureController, _is__CupertinoBackGestureController_default);
  var child$0 = dart.privateName(extended_image_slide_page_route, "CupertinoPageTransition.child");
  var _primaryPositionAnimation = dart.privateName(extended_image_slide_page_route, "_primaryPositionAnimation");
  var _secondaryPositionAnimation = dart.privateName(extended_image_slide_page_route, "_secondaryPositionAnimation");
  extended_image_slide_page_route.CupertinoPageTransition = class CupertinoPageTransition extends framework.StatelessWidget {
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[0], 671, 12, "debugCheckHasDirectionality(context)");
      let textDirection = basic.Directionality.of(context);
      return new transitions.SlideTransition.new({position: this[_secondaryPositionAnimation], textDirection: textDirection, transformHitTests: false, child: new transitions.SlideTransition.new({position: this[_primaryPositionAnimation], textDirection: textDirection, child: this.child, $creationLocationd_0dea112b090073317d4: C[47] || CT.C47}), $creationLocationd_0dea112b090073317d4: C[52] || CT.C52});
    }
  };
  (extended_image_slide_page_route.CupertinoPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let primaryRouteAnimation = opts && 'primaryRouteAnimation' in opts ? opts.primaryRouteAnimation : null;
    let secondaryRouteAnimation = opts && 'secondaryRouteAnimation' in opts ? opts.secondaryRouteAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let linearTransition = opts && 'linearTransition' in opts ? opts.linearTransition : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$0] = child;
    if (!(linearTransition != null)) dart.assertFailed(null, I[0], 627, 16, "linearTransition != null");
    this[_primaryPositionAnimation] = (dart.test(linearTransition) ? primaryRouteAnimation : new animations.CurvedAnimation.new({parent: primaryRouteAnimation, curve: curves.Curves.linearToEaseOut, reverseCurve: curves.Curves.easeInToLinear})).drive(T$.OffsetL(), extended_image_slide_page_route._kRightMiddleTween);
    this[_secondaryPositionAnimation] = (dart.test(linearTransition) ? secondaryRouteAnimation : new animations.CurvedAnimation.new({parent: secondaryRouteAnimation, curve: curves.Curves.linearToEaseOut, reverseCurve: curves.Curves.easeInToLinear})).drive(T$.OffsetL(), extended_image_slide_page_route._kMiddleLeftTween);
    extended_image_slide_page_route.CupertinoPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_slide_page_route.CupertinoPageTransition.prototype;
  dart.addTypeTests(extended_image_slide_page_route.CupertinoPageTransition);
  dart.addTypeCaches(extended_image_slide_page_route.CupertinoPageTransition);
  dart.setMethodSignature(extended_image_slide_page_route.CupertinoPageTransition, () => ({
    __proto__: dart.getMethods(extended_image_slide_page_route.CupertinoPageTransition.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(extended_image_slide_page_route.CupertinoPageTransition, I[1]);
  dart.setFieldSignature(extended_image_slide_page_route.CupertinoPageTransition, () => ({
    __proto__: dart.getFields(extended_image_slide_page_route.CupertinoPageTransition.__proto__),
    [_primaryPositionAnimation]: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(ui.Offset)))),
    [_secondaryPositionAnimation]: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(ui.Offset)))),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  dart.defineLazy(extended_image_slide_page_route, {
    /*extended_image_slide_page_route._kBackGestureWidth*/get _kBackGestureWidth() {
      return 20;
    },
    /*extended_image_slide_page_route._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 1;
    },
    /*extended_image_slide_page_route._kMaxDroppedSwipePageForwardAnimationTime*/get _kMaxDroppedSwipePageForwardAnimationTime() {
      return 800;
    },
    /*extended_image_slide_page_route._kMaxPageBackAnimationTime*/get _kMaxPageBackAnimationTime() {
      return 300;
    },
    /*extended_image_slide_page_route._kRightMiddleTween*/get _kRightMiddleTween() {
      return new (T$.TweenOfOffsetL()).new({begin: C[58] || CT.C58, end: ui.Offset.zero});
    },
    /*extended_image_slide_page_route._kMiddleLeftTween*/get _kMiddleLeftTween() {
      return new (T$.TweenOfOffsetL()).new({begin: ui.Offset.zero, end: C[59] || CT.C59});
    }
  }, true);
  var _name$ = dart.privateName(extended_image_crop_layer, "_name");
  extended_image_crop_layer._moveType = class _moveType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (extended_image_crop_layer._moveType.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = extended_image_crop_layer._moveType.prototype;
  dart.addTypeTests(extended_image_crop_layer._moveType);
  dart.addTypeCaches(extended_image_crop_layer._moveType);
  dart.setMethodSignature(extended_image_crop_layer._moveType, () => ({
    __proto__: dart.getMethods(extended_image_crop_layer._moveType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_crop_layer._moveType, I[2]);
  dart.setFieldSignature(extended_image_crop_layer._moveType, () => ({
    __proto__: dart.getFields(extended_image_crop_layer._moveType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_crop_layer._moveType, ['toString']);
  extended_image_crop_layer._moveType.topLeft = C[60] || CT.C60;
  extended_image_crop_layer._moveType.topRight = C[61] || CT.C61;
  extended_image_crop_layer._moveType.bottomRight = C[62] || CT.C62;
  extended_image_crop_layer._moveType.bottomLeft = C[63] || CT.C63;
  extended_image_crop_layer._moveType.top = C[64] || CT.C64;
  extended_image_crop_layer._moveType.right = C[65] || CT.C65;
  extended_image_crop_layer._moveType.bottom = C[66] || CT.C66;
  extended_image_crop_layer._moveType.left = C[67] || CT.C67;
  extended_image_crop_layer._moveType.values = C[68] || CT.C68;
  var editActionDetails$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayer.editActionDetails");
  var editorConfig$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayer.editorConfig");
  var layoutRect$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayer.layoutRect");
  var fit$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayer.fit");
  var cornerPainter$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayer.cornerPainter");
  extended_image_crop_layer.ExtendedImageCropLayer = class ExtendedImageCropLayer extends framework.StatefulWidget {
    get editActionDetails() {
      return this[editActionDetails$];
    }
    set editActionDetails(value) {
      super.editActionDetails = value;
    }
    get editorConfig() {
      return this[editorConfig$];
    }
    set editorConfig(value) {
      super.editorConfig = value;
    }
    get layoutRect() {
      return this[layoutRect$];
    }
    set layoutRect(value) {
      super.layoutRect = value;
    }
    get fit() {
      return this[fit$];
    }
    set fit(value) {
      super.fit = value;
    }
    get cornerPainter() {
      return this[cornerPainter$];
    }
    set cornerPainter(value) {
      super.cornerPainter = value;
    }
    createState() {
      return new extended_image_crop_layer.ExtendedImageCropLayerState.new();
    }
  };
  (extended_image_crop_layer.ExtendedImageCropLayer.new = function(opts) {
    let editActionDetails = opts && 'editActionDetails' in opts ? opts.editActionDetails : null;
    let layoutRect = opts && 'layoutRect' in opts ? opts.layoutRect : null;
    let editorConfig = opts && 'editorConfig' in opts ? opts.editorConfig : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let cornerPainter = opts && 'cornerPainter' in opts ? opts.cornerPainter : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[editActionDetails$] = editActionDetails;
    this[layoutRect$] = layoutRect;
    this[editorConfig$] = editorConfig;
    this[fit$] = fit;
    this[cornerPainter$] = cornerPainter;
    extended_image_crop_layer.ExtendedImageCropLayer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_crop_layer.ExtendedImageCropLayer.prototype;
  dart.addTypeTests(extended_image_crop_layer.ExtendedImageCropLayer);
  dart.addTypeCaches(extended_image_crop_layer.ExtendedImageCropLayer);
  dart.setMethodSignature(extended_image_crop_layer.ExtendedImageCropLayer, () => ({
    __proto__: dart.getMethods(extended_image_crop_layer.ExtendedImageCropLayer.__proto__),
    createState: dart.fnType(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayerState), [])
  }));
  dart.setLibraryUri(extended_image_crop_layer.ExtendedImageCropLayer, I[2]);
  dart.setFieldSignature(extended_image_crop_layer.ExtendedImageCropLayer, () => ({
    __proto__: dart.getFields(extended_image_crop_layer.ExtendedImageCropLayer.__proto__),
    editActionDetails: dart.finalFieldType(dart.legacy(extended_image_editor_utils.EditActionDetails)),
    editorConfig: dart.finalFieldType(dart.legacy(extended_image_editor_utils.EditorConfig)),
    layoutRect: dart.finalFieldType(dart.legacy(ui.Rect)),
    fit: dart.finalFieldType(dart.legacy(box_fit.BoxFit)),
    cornerPainter: dart.finalFieldType(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter))
  }));
  var _timer = dart.privateName(extended_image_crop_layer, "_timer");
  var _pointerDown = dart.privateName(extended_image_crop_layer, "_pointerDown");
  var _rectTween = dart.privateName(extended_image_crop_layer, "_rectTween");
  var _rectAnimation = dart.privateName(extended_image_crop_layer, "_rectAnimation");
  var _rectTweenController = dart.privateName(extended_image_crop_layer, "_rectTweenController");
  var _currentMoveType = dart.privateName(extended_image_crop_layer, "_currentMoveType");
  var _doCropAutoCenterAnimation = dart.privateName(extended_image_crop_layer, "_doCropAutoCenterAnimation");
  var _moveEnd = dart.privateName(extended_image_crop_layer, "_moveEnd");
  var _handleAspectRatio = dart.privateName(extended_image_crop_layer, "_handleAspectRatio");
  var _doWithMaxScale = dart.privateName(extended_image_crop_layer, "_doWithMaxScale");
  var _doAspectRatioV = dart.privateName(extended_image_crop_layer, "_doAspectRatioV");
  var _doAspectRatioH = dart.privateName(extended_image_crop_layer, "_doAspectRatioH");
  var _startTimer = dart.privateName(extended_image_crop_layer, "_startTimer");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayer)) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayer))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayer)));
  extended_image_crop_layer.ExtendedImageCropLayerState = class ExtendedImageCropLayerState extends State_SingleTickerProviderStateMixin$36 {
    get layoutRect() {
      return this.widget.layoutRect;
    }
    get cropRect() {
      return this.widget.editActionDetails.cropRect;
    }
    set cropRect(value) {
      return this.widget.editActionDetails.cropRect = value;
    }
    get isAnimating() {
      let t0, t0$;
      t0$ = (t0 = this[_rectTweenController], t0 == null ? null : t0.isAnimating);
      return t0$ == null ? false : t0$;
    }
    get isMoving() {
      return this[_currentMoveType] != null;
    }
    initState() {
      let t0;
      this[_pointerDown] = false;
      this[_rectTweenController] = (t0 = new animation_controller.AnimationController.new({vsync: this, duration: this.widget.editorConfig.animationDuration}), (() => {
        t0.addListener(dart.bind(this, _doCropAutoCenterAnimation));
        return t0;
      })());
      super.initState();
    }
    dispose() {
      let t0, t0$;
      t0 = this[_timer];
      t0 == null ? null : t0.cancel();
      t0$ = this[_rectTweenController];
      t0$ == null ? null : t0$.dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t0, t0$, t0$0;
      T$.ExtendedImageCropLayerL().as(oldWidget);
      if (!dart.equals(this.widget.editorConfig.animationDuration, oldWidget.editorConfig.animationDuration)) {
        t0 = this[_rectTweenController];
        t0 == null ? null : t0.stop();
        t0$ = this[_rectTweenController];
        t0$ == null ? null : t0$.dispose();
        this[_rectTweenController] = (t0$0 = new animation_controller.AnimationController.new({vsync: this, duration: this.widget.editorConfig.animationDuration}), (() => {
          t0$0.addListener(dart.bind(this, _doCropAutoCenterAnimation));
          return t0$0;
        })());
      }
      super.didUpdateWidget(oldWidget);
    }
    build(context) {
      let t1, t0, t0$, t0$0, t0$1, t0$2, t0$3;
      if (this.cropRect == null) {
        return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[69] || CT.C69});
      }
      let editConfig = this.widget.editorConfig;
      let cornerPainter = null;
      if (this.widget.editorConfig.cornerPainter == null) {
        cornerPainter = new extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.new({color: theme$.Theme.of(context).primaryColor});
      } else {
        cornerPainter = this.widget.editorConfig.cornerPainter.cornerColor == null ? this.widget.editorConfig.cornerPainter.copyWith({color: theme$.Theme.of(context).primaryColor}) : this.widget.editorConfig.cornerPainter;
      }
      let cornerColor = (t0$ = (t0 = this.widget.editorConfig.cornerColor, t0 == null ? (t1 = this.widget.cornerPainter, t1 == null ? null : t1.cornerColor) : t0), t0$ == null ? theme$.Theme.of(context).primaryColor : t0$);
      let maskColor = (t0$1 = (t0$0 = this.widget.editorConfig.editorMaskColorHandler, t0$0 == null ? null : t0$0(context, this[_pointerDown])), t0$1 == null ? extended_image_editor_utils.defaultEditorMaskColorHandler(context, this[_pointerDown]) : t0$1);
      let gWidth = this.widget.editorConfig.hitTestSize;
      let result = new basic.CustomPaint.new({painter: new extended_image_crop_layer.ExtendedImageCropLayerPainter.new({cropRect: this.cropRect, cornerPainter: cornerPainter, cornerColor: cornerColor, cornerSize: (t0$2 = editConfig.cornerSize, t0$2 == null ? T$.ExtendedImageCropLayerPainterNinetyDegreesCornerL().is(cornerPainter) ? cornerPainter.cornerSize : null : t0$2), lineColor: (t0$3 = editConfig.lineColor, t0$3 == null ? theme$.Theme.of(context).scaffoldBackgroundColor.withOpacity(0.7) : t0$3), lineHeight: editConfig.lineHeight, maskColor: maskColor, pointerDown: this[_pointerDown]}), child: new basic.Stack.new({children: T$.JSArrayOfWidgetL().of([new basic.Positioned.new({top: dart.notNull(this.cropRect.top) - dart.notNull(gWidth), left: dart.notNull(this.cropRect.left) - dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(gWidth) * 2, width: dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onPanUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.topLeft, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onPanEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.topLeft);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[71] || CT.C71}), $creationLocationd_0dea112b090073317d4: C[76] || CT.C76}), $creationLocationd_0dea112b090073317d4: C[81] || CT.C81}), new basic.Positioned.new({top: dart.notNull(this.cropRect.top) - dart.notNull(gWidth), left: dart.notNull(this.cropRect.right) - dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(gWidth) * 2, width: dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onPanUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.topRight, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onPanEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.topRight);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[86] || CT.C86}), $creationLocationd_0dea112b090073317d4: C[91] || CT.C91}), $creationLocationd_0dea112b090073317d4: C[96] || CT.C96}), new basic.Positioned.new({top: dart.notNull(this.cropRect.bottom) - dart.notNull(gWidth), left: dart.notNull(this.cropRect.left) - dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(gWidth) * 2, width: dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onPanUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.bottomLeft, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onPanEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.bottomLeft);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[101] || CT.C101}), $creationLocationd_0dea112b090073317d4: C[106] || CT.C106}), $creationLocationd_0dea112b090073317d4: C[111] || CT.C111}), new basic.Positioned.new({top: dart.notNull(this.cropRect.bottom) - dart.notNull(gWidth), left: dart.notNull(this.cropRect.right) - dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(gWidth) * 2, width: dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onPanUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.bottomRight, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onPanEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.bottomRight);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[116] || CT.C116}), $creationLocationd_0dea112b090073317d4: C[121] || CT.C121}), $creationLocationd_0dea112b090073317d4: C[126] || CT.C126}), new basic.Positioned.new({top: dart.notNull(this.cropRect.top) - dart.notNull(gWidth), left: dart.notNull(this.cropRect.left) + dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(gWidth) * 2, width: dart.notNull(this.cropRect.width) - dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onVerticalDragUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.top, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onVerticalDragEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.top);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[131] || CT.C131}), $creationLocationd_0dea112b090073317d4: C[136] || CT.C136}), $creationLocationd_0dea112b090073317d4: C[141] || CT.C141}), new basic.Positioned.new({top: dart.notNull(this.cropRect.top) + dart.notNull(gWidth), left: dart.notNull(this.cropRect.left) - dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(this.cropRect.height) - dart.notNull(gWidth) * 2, width: dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onHorizontalDragUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.left, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onHorizontalDragEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.left);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[146] || CT.C146}), $creationLocationd_0dea112b090073317d4: C[151] || CT.C151}), $creationLocationd_0dea112b090073317d4: C[156] || CT.C156}), new basic.Positioned.new({top: dart.notNull(this.cropRect.bottom) - dart.notNull(gWidth), left: dart.notNull(this.cropRect.left) + dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(gWidth) * 2, width: dart.notNull(this.cropRect.width) - dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onVerticalDragUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.bottom, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onVerticalDragEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.bottom);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[161] || CT.C161}), $creationLocationd_0dea112b090073317d4: C[166] || CT.C166}), $creationLocationd_0dea112b090073317d4: C[171] || CT.C171}), new basic.Positioned.new({top: dart.notNull(this.cropRect.top) + dart.notNull(gWidth), left: dart.notNull(this.cropRect.right) - dart.notNull(gWidth), child: new container.Container.new({height: dart.notNull(this.cropRect.height) - dart.notNull(gWidth) * 2, width: dart.notNull(gWidth) * 2, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, onHorizontalDragUpdate: dart.fn(details => {
                    this.moveUpdate(extended_image_crop_layer._moveType.right, details.delta);
                  }, T$.DragUpdateDetailsLToNull()), onHorizontalDragEnd: dart.fn(_ => {
                    this[_moveEnd](extended_image_crop_layer._moveType.right);
                  }, T$.DragEndDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[176] || CT.C176}), $creationLocationd_0dea112b090073317d4: C[181] || CT.C181}), $creationLocationd_0dea112b090073317d4: C[186] || CT.C186})]), $creationLocationd_0dea112b090073317d4: C[191] || CT.C191}), $creationLocationd_0dea112b090073317d4: C[194] || CT.C194});
      return result;
    }
    pointerDown(down) {
      if (dart.test(this.mounted) && this[_pointerDown] != down) {
        this.setState(dart.fn(() => {
          this[_pointerDown] = down;
        }, T$.VoidToNull()));
      }
    }
    moveUpdate(moveType, delta) {
      if (dart.test(this.isAnimating)) {
        return;
      }
      if (this[_currentMoveType] != null && moveType != this[_currentMoveType]) {
        return;
      }
      this[_currentMoveType] = moveType;
      let layerDestinationRect = this.widget.editActionDetails.layerDestinationRect;
      let result = this.cropRect;
      let gWidth = this.widget.editorConfig.cornerSize.width;
      switch (moveType) {
        case C[60] || CT.C60:
        case C[64] || CT.C64:
        case C[67] || CT.C67:
        {
          let topLeft = result.topLeft['+'](delta);
          topLeft = new ui.Offset.new(math.min(T$.doubleL(), topLeft.dx, dart.notNull(result.right) - dart.notNull(gWidth) * 2), math.min(T$.doubleL(), topLeft.dy, dart.notNull(result.bottom) - dart.notNull(gWidth) * 2));
          result = new ui.Rect.fromPoints(topLeft, result.bottomRight);
          break;
        }
        case C[61] || CT.C61:
        {
          let topRight = result.topRight['+'](delta);
          topRight = new ui.Offset.new(math.max(T$.doubleL(), topRight.dx, dart.notNull(result.left) + dart.notNull(gWidth) * 2), math.min(T$.doubleL(), topRight.dy, dart.notNull(result.bottom) - dart.notNull(gWidth) * 2));
          result = new ui.Rect.fromPoints(topRight, result.bottomLeft);
          break;
        }
        case C[62] || CT.C62:
        case C[65] || CT.C65:
        case C[66] || CT.C66:
        {
          let bottomRight = result.bottomRight['+'](delta);
          bottomRight = new ui.Offset.new(math.max(T$.doubleL(), bottomRight.dx, dart.notNull(result.left) + dart.notNull(gWidth) * 2), math.max(T$.doubleL(), bottomRight.dy, dart.notNull(result.top) + dart.notNull(gWidth) * 2));
          result = new ui.Rect.fromPoints(result.topLeft, bottomRight);
          break;
        }
        case C[63] || CT.C63:
        {
          let bottomLeft = result.bottomLeft['+'](delta);
          bottomLeft = new ui.Offset.new(math.min(T$.doubleL(), bottomLeft.dx, dart.notNull(result.right) - dart.notNull(gWidth) * 2), math.max(T$.doubleL(), bottomLeft.dy, dart.notNull(result.top) + dart.notNull(gWidth) * 2));
          result = new ui.Rect.fromPoints(bottomLeft, result.topRight);
          break;
        }
        default:
      }
      result = new ui.Rect.fromPoints(new ui.Offset.new(math.max(T$.doubleL(), result.left, layerDestinationRect.left), math.max(T$.doubleL(), result.top, layerDestinationRect.top)), new ui.Offset.new(math.min(T$.doubleL(), result.right, layerDestinationRect.right), math.min(T$.doubleL(), result.bottom, layerDestinationRect.bottom)));
      result = this[_handleAspectRatio](gWidth, moveType, result, layerDestinationRect, delta);
      if (dart.notNull(extended_image_utils.doubleCompare(result.left, this.layoutRect.left)) < 0 || dart.notNull(extended_image_utils.doubleCompare(result.right, this.layoutRect.right)) > 0 || dart.notNull(extended_image_utils.doubleCompare(result.top, this.layoutRect.top)) < 0 || dart.notNull(extended_image_utils.doubleCompare(result.bottom, this.layoutRect.bottom)) > 0) {
        this.cropRect = result;
        let centerCropRect = extended_image_editor_utils.getDestinationRect({rect: this.layoutRect, inputSize: result.size, fit: this.widget.fit});
        let newScreenCropRect = centerCropRect.shift(this.widget.editActionDetails.layoutTopLeft);
        this[_doCropAutoCenterAnimation]({newScreenCropRect: newScreenCropRect});
      } else {
        result = this[_doWithMaxScale](result);
        if (result != null && !dart.equals(result, this.cropRect) && dart.test(this.mounted)) {
          this.setState(dart.fn(() => {
            this.cropRect = result;
          }, T$.VoidToNull()));
        }
      }
    }
    [_handleAspectRatio](gWidth, moveType, result, layerDestinationRect, delta) {
      let aspectRatio = this.widget.editActionDetails.cropAspectRatio;
      if (aspectRatio != null) {
        let minD = dart.notNull(gWidth) * 2;
        switch (moveType) {
          case C[64] || CT.C64:
          case C[66] || CT.C66:
          {
            let isTop = moveType == extended_image_crop_layer._moveType.top;
            result = this[_doAspectRatioV](minD, result, aspectRatio, layerDestinationRect, {isTop: isTop});
            break;
          }
          case C[67] || CT.C67:
          case C[65] || CT.C65:
          {
            let isLeft = moveType == extended_image_crop_layer._moveType.left;
            result = this[_doAspectRatioH](minD, result, aspectRatio, layerDestinationRect, {isLeft: isLeft});
            break;
          }
          case C[60] || CT.C60:
          case C[61] || CT.C61:
          case C[62] || CT.C62:
          case C[63] || CT.C63:
          {
            let dx = delta.dx[$abs]();
            let dy = delta.dy[$abs]();
            let width = result.width;
            let height = result.height;
            if (dart.notNull(extended_image_utils.doubleCompare(dx, dy)) >= 0) {
              height = math.max(T$.doubleL(), minD, math.min(T$.doubleL(), dart.notNull(result.width) / dart.notNull(aspectRatio), layerDestinationRect.height));
              width = dart.notNull(height) * dart.notNull(aspectRatio);
            } else {
              width = math.max(T$.doubleL(), minD, math.min(T$.doubleL(), dart.notNull(result.height) * dart.notNull(aspectRatio), layerDestinationRect.width));
              height = dart.notNull(width) / dart.notNull(aspectRatio);
            }
            let top = result.top;
            let left = result.left;
            switch (moveType) {
              case C[60] || CT.C60:
              {
                top = dart.notNull(result.bottom) - dart.notNull(height);
                left = dart.notNull(result.right) - dart.notNull(width);
                break;
              }
              case C[61] || CT.C61:
              {
                top = dart.notNull(result.bottom) - dart.notNull(height);
                left = result.left;
                break;
              }
              case C[62] || CT.C62:
              {
                top = result.top;
                left = result.left;
                break;
              }
              case C[63] || CT.C63:
              {
                top = result.top;
                left = dart.notNull(result.right) - dart.notNull(width);
                break;
              }
              default:
            }
            result = new ui.Rect.fromLTWH(left, top, width, height);
            break;
          }
          default:
        }
      }
      return result;
    }
    [_doAspectRatioH](minD, result, aspectRatio, layerDestinationRect, opts) {
      let isLeft = opts && 'isLeft' in opts ? opts.isLeft : null;
      let height = math.max(T$.doubleL(), minD, math.min(T$.doubleL(), dart.notNull(result.width) / dart.notNull(aspectRatio), layerDestinationRect.height));
      let width = height * dart.notNull(aspectRatio);
      let left = dart.test(isLeft) ? dart.notNull(result.right) - width : result.left;
      let top = dart.notNull(result.centerRight.dy) - height / 2.0;
      result = new ui.Rect.fromLTWH(left, top, width, height);
      return result;
    }
    [_doAspectRatioV](minD, result, aspectRatio, layerDestinationRect, opts) {
      let isTop = opts && 'isTop' in opts ? opts.isTop : null;
      let width = math.max(T$.doubleL(), minD, math.min(T$.doubleL(), dart.notNull(result.height) * dart.notNull(aspectRatio), layerDestinationRect.width));
      let height = width / dart.notNull(aspectRatio);
      let top = dart.test(isTop) ? dart.notNull(result.bottom) - height : result.top;
      let left = dart.notNull(result.topCenter.dx) - width / 2.0;
      result = new ui.Rect.fromLTWH(left, top, width, height);
      return result;
    }
    [_doWithMaxScale](rect) {
      let centerCropRect = extended_image_editor_utils.getDestinationRect({rect: this.layoutRect, inputSize: rect.size, fit: this.widget.fit});
      let newScreenCropRect = centerCropRect.shift(this.widget.editActionDetails.layoutTopLeft);
      let oldScreenCropRect = this.widget.editActionDetails.screenCropRect;
      let scale = dart.notNull(newScreenCropRect.width) / dart.notNull(oldScreenCropRect.width);
      let totalScale = dart.notNull(this.widget.editActionDetails.totalScale) * scale;
      if (dart.notNull(extended_image_utils.doubleCompare(totalScale, this.widget.editorConfig.maxScale)) > 0) {
        if (dart.notNull(extended_image_utils.doubleCompare(rect.width, this.cropRect.width)) > 0 || dart.notNull(extended_image_utils.doubleCompare(rect.height, this.cropRect.height)) > 0) {
          return rect;
        }
        return null;
      }
      return rect;
    }
    [_moveEnd](moveType) {
      if (this[_currentMoveType] != null && moveType == this[_currentMoveType]) {
        this[_currentMoveType] = null;
        this[_startTimer]();
      }
    }
    [_startTimer]() {
      let t0;
      t0 = this[_timer];
      t0 == null ? null : t0.cancel();
      if (dart.test(this.isAnimating)) {
        return;
      }
      this[_timer] = async.Timer.periodic(this.widget.editorConfig.tickerDuration, dart.fn(timer => {
        let t0, t0$, t0$0, t0$1;
        t0 = this[_timer];
        t0 == null ? null : t0.cancel();
        let oldScreenCropRect = this.widget.editActionDetails.screenCropRect;
        let centerCropRect = extended_image_editor_utils.getDestinationRect({rect: this.layoutRect, inputSize: this.cropRect.size, fit: this.widget.fit});
        let newScreenCropRect = centerCropRect.shift(this.widget.editActionDetails.layoutTopLeft);
        this[_rectTween] = new tween.RectTween.new({begin: oldScreenCropRect, end: newScreenCropRect});
        this[_rectAnimation] = (t0$ = this[_rectTweenController], t0$ == null ? null : t0$.drive(T$.RectL(), this[_rectTween]));
        t0$0 = this[_rectTweenController];
        t0$0 == null ? null : t0$0.reset();
        t0$1 = this[_rectTweenController];
        t0$1 == null ? null : t0$1.forward();
      }, T$.TimerLToNull()));
    }
    [_doCropAutoCenterAnimation](opts) {
      let newScreenCropRect = opts && 'newScreenCropRect' in opts ? opts.newScreenCropRect : null;
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          let oldScreenCropRect = this.widget.editActionDetails.screenCropRect;
          let oldScreenDestinationRect = this.widget.editActionDetails.screenDestinationRect;
          newScreenCropRect == null ? newScreenCropRect = this[_rectAnimation].value : null;
          let scale = dart.notNull(newScreenCropRect.width) / dart.notNull(oldScreenCropRect.width);
          let offset = newScreenCropRect.center['-'](oldScreenCropRect.center);
          let newImageCenter = oldScreenCropRect.center['+'](oldScreenDestinationRect.center['-'](oldScreenCropRect.center)['*'](scale));
          let newScreenDestinationRect = new ui.Rect.fromCenter({center: newImageCenter['+'](offset), width: dart.notNull(oldScreenDestinationRect.width) * scale, height: dart.notNull(oldScreenDestinationRect.height) * scale});
          let totalScale = dart.notNull(this.widget.editActionDetails.totalScale) * scale;
          this.cropRect = newScreenCropRect.shift(this.widget.editActionDetails.layoutTopLeft._negate());
          this.widget.editActionDetails.setScreenDestinationRect(newScreenDestinationRect);
          this.widget.editActionDetails.totalScale = totalScale;
          this.widget.editActionDetails.preTotalScale = totalScale;
        }, T$.VoidToNull()));
      }
    }
  };
  (extended_image_crop_layer.ExtendedImageCropLayerState.new = function() {
    this[_timer] = null;
    this[_pointerDown] = false;
    this[_rectTween] = null;
    this[_rectAnimation] = null;
    this[_rectTweenController] = null;
    this[_currentMoveType] = null;
    extended_image_crop_layer.ExtendedImageCropLayerState.__proto__.new.call(this);
    ;
  }).prototype = extended_image_crop_layer.ExtendedImageCropLayerState.prototype;
  dart.addTypeTests(extended_image_crop_layer.ExtendedImageCropLayerState);
  dart.addTypeCaches(extended_image_crop_layer.ExtendedImageCropLayerState);
  dart.setMethodSignature(extended_image_crop_layer.ExtendedImageCropLayerState, () => ({
    __proto__: dart.getMethods(extended_image_crop_layer.ExtendedImageCropLayerState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    pointerDown: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    moveUpdate: dart.fnType(dart.void, [dart.legacy(extended_image_crop_layer._moveType), dart.legacy(ui.Offset)]),
    [_handleAspectRatio]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(core.double), dart.legacy(extended_image_crop_layer._moveType), dart.legacy(ui.Rect), dart.legacy(ui.Rect), dart.legacy(ui.Offset)]),
    [_doAspectRatioH]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(core.double), dart.legacy(ui.Rect), dart.legacy(core.double), dart.legacy(ui.Rect)], {isLeft: dart.legacy(core.bool)}, {}),
    [_doAspectRatioV]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(core.double), dart.legacy(ui.Rect), dart.legacy(core.double), dart.legacy(ui.Rect)], {isTop: dart.legacy(core.bool)}, {}),
    [_doWithMaxScale]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect)]),
    [_moveEnd]: dart.fnType(dart.void, [dart.legacy(extended_image_crop_layer._moveType)]),
    [_startTimer]: dart.fnType(dart.void, []),
    [_doCropAutoCenterAnimation]: dart.fnType(dart.void, [], {newScreenCropRect: dart.legacy(ui.Rect)}, {})
  }));
  dart.setGetterSignature(extended_image_crop_layer.ExtendedImageCropLayerState, () => ({
    __proto__: dart.getGetters(extended_image_crop_layer.ExtendedImageCropLayerState.__proto__),
    layoutRect: dart.legacy(ui.Rect),
    cropRect: dart.legacy(ui.Rect),
    isAnimating: dart.legacy(core.bool),
    isMoving: dart.legacy(core.bool)
  }));
  dart.setSetterSignature(extended_image_crop_layer.ExtendedImageCropLayerState, () => ({
    __proto__: dart.getSetters(extended_image_crop_layer.ExtendedImageCropLayerState.__proto__),
    cropRect: dart.legacy(ui.Rect)
  }));
  dart.setLibraryUri(extended_image_crop_layer.ExtendedImageCropLayerState, I[2]);
  dart.setFieldSignature(extended_image_crop_layer.ExtendedImageCropLayerState, () => ({
    __proto__: dart.getFields(extended_image_crop_layer.ExtendedImageCropLayerState.__proto__),
    [_timer]: dart.fieldType(dart.legacy(async.Timer)),
    [_pointerDown]: dart.fieldType(dart.legacy(core.bool)),
    [_rectTween]: dart.fieldType(dart.legacy(tween.Tween$(dart.legacy(ui.Rect)))),
    [_rectAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(ui.Rect)))),
    [_rectTweenController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_currentMoveType]: dart.fieldType(dart.legacy(extended_image_crop_layer._moveType))
  }));
  var cropRect$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.cropRect");
  var cornerSize$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.cornerSize");
  var cornerColor$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.cornerColor");
  var lineColor$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.lineColor");
  var lineHeight$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.lineHeight");
  var maskColor$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.maskColor");
  var pointerDown$ = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.pointerDown");
  var cornerPainter$0 = dart.privateName(extended_image_crop_layer, "ExtendedImageCropLayerPainter.cornerPainter");
  extended_image_crop_layer.ExtendedImageCropLayerPainter = class ExtendedImageCropLayerPainter extends custom_paint.CustomPainter {
    get cropRect() {
      return this[cropRect$];
    }
    set cropRect(value) {
      super.cropRect = value;
    }
    get cornerSize() {
      return this[cornerSize$];
    }
    set cornerSize(value) {
      super.cornerSize = value;
    }
    get cornerColor() {
      return this[cornerColor$];
    }
    set cornerColor(value) {
      super.cornerColor = value;
    }
    get lineColor() {
      return this[lineColor$];
    }
    set lineColor(value) {
      super.lineColor = value;
    }
    get lineHeight() {
      return this[lineHeight$];
    }
    set lineHeight(value) {
      super.lineHeight = value;
    }
    get maskColor() {
      return this[maskColor$];
    }
    set maskColor(value) {
      super.maskColor = value;
    }
    get pointerDown() {
      return this[pointerDown$];
    }
    set pointerDown(value) {
      super.pointerDown = value;
    }
    get cornerPainter() {
      return this[cornerPainter$0];
    }
    set cornerPainter(value) {
      super.cornerPainter = value;
    }
    paint(canvas, size) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3;
      let rect = ui.Offset.zero['&'](size);
      let linePainter = (t0 = ui.Paint.new(), (() => {
        t0.color = this.lineColor;
        t0.strokeWidth = this.lineHeight;
        t0.style = ui.PaintingStyle.stroke;
        return t0;
      })());
      canvas.drawRect(ui.Offset.zero['&'](new ui.Size.new(this.cropRect.left, rect.height)), (t0$ = ui.Paint.new(), (() => {
        t0$.style = ui.PaintingStyle.fill;
        t0$.color = this.maskColor;
        return t0$;
      })()));
      canvas.drawRect(new ui.Offset.new(this.cropRect.left, 0.0)['&'](new ui.Size.new(this.cropRect.width, this.cropRect.top)), (t0$0 = ui.Paint.new(), (() => {
        t0$0.style = ui.PaintingStyle.fill;
        t0$0.color = this.maskColor;
        return t0$0;
      })()));
      canvas.drawRect(new ui.Offset.new(this.cropRect.right, 0.0)['&'](new ui.Size.new(dart.notNull(rect.width) - dart.notNull(this.cropRect.right), rect.height)), (t0$1 = ui.Paint.new(), (() => {
        t0$1.style = ui.PaintingStyle.fill;
        t0$1.color = this.maskColor;
        return t0$1;
      })()));
      canvas.drawRect(new ui.Offset.new(this.cropRect.left, this.cropRect.bottom)['&'](new ui.Size.new(this.cropRect.width, dart.notNull(rect.height) - dart.notNull(this.cropRect.bottom))), (t0$2 = ui.Paint.new(), (() => {
        t0$2.style = ui.PaintingStyle.fill;
        t0$2.color = this.maskColor;
        return t0$2;
      })()));
      canvas.drawRect(this.cropRect, linePainter);
      if (dart.test(this.pointerDown)) {
        canvas.drawLine(new ui.Offset.new((dart.notNull(this.cropRect.right) - dart.notNull(this.cropRect.left)) / 3.0 + dart.notNull(this.cropRect.left), this.cropRect.top), new ui.Offset.new((dart.notNull(this.cropRect.right) - dart.notNull(this.cropRect.left)) / 3.0 + dart.notNull(this.cropRect.left), this.cropRect.bottom), linePainter);
        canvas.drawLine(new ui.Offset.new((dart.notNull(this.cropRect.right) - dart.notNull(this.cropRect.left)) / 3.0 * 2.0 + dart.notNull(this.cropRect.left), this.cropRect.top), new ui.Offset.new((dart.notNull(this.cropRect.right) - dart.notNull(this.cropRect.left)) / 3.0 * 2.0 + dart.notNull(this.cropRect.left), this.cropRect.bottom), linePainter);
        canvas.drawLine(new ui.Offset.new(this.cropRect.left, (dart.notNull(this.cropRect.bottom) - dart.notNull(this.cropRect.top)) / 3.0 + dart.notNull(this.cropRect.top)), new ui.Offset.new(this.cropRect.right, (dart.notNull(this.cropRect.bottom) - dart.notNull(this.cropRect.top)) / 3.0 + dart.notNull(this.cropRect.top)), linePainter);
        canvas.drawLine(new ui.Offset.new(this.cropRect.left, (dart.notNull(this.cropRect.bottom) - dart.notNull(this.cropRect.top)) / 3.0 * 2.0 + dart.notNull(this.cropRect.top)), new ui.Offset.new(this.cropRect.right, (dart.notNull(this.cropRect.bottom) - dart.notNull(this.cropRect.top)) / 3.0 * 2.0 + dart.notNull(this.cropRect.top)), linePainter);
      }
      let defaultCornerPainter = (t0$3 = ui.Paint.new(), (() => {
        t0$3.color = this.cornerPainter.cornerColor;
        t0$3.style = ui.PaintingStyle.fill;
        return t0$3;
      })());
      this.cornerPainter.drawCorners(canvas, this.cropRect, defaultCornerPainter);
    }
    shouldRepaint(oldDelegate) {
      T$.CustomPainterL().as(oldDelegate);
      if (!dart.equals(dart.runtimeType(oldDelegate), this.runtimeType)) {
        return true;
      }
      let delegate = T$.ExtendedImageCropLayerPainterL().as(oldDelegate);
      return !dart.equals(this.cropRect, delegate.cropRect) || !dart.equals(this.cornerSize, delegate.cornerSize) || !dart.equals(this.lineColor, delegate.lineColor) || this.lineHeight != delegate.lineHeight || !dart.equals(this.maskColor, delegate.maskColor) || !dart.equals(this.cornerPainter, delegate.cornerPainter) || !dart.equals(this.cornerColor, delegate.cornerColor) || this.pointerDown != delegate.pointerDown;
    }
  };
  (extended_image_crop_layer.ExtendedImageCropLayerPainter.new = function(opts) {
    let cropRect = opts && 'cropRect' in opts ? opts.cropRect : null;
    let lineColor = opts && 'lineColor' in opts ? opts.lineColor : null;
    let cornerColor = opts && 'cornerColor' in opts ? opts.cornerColor : null;
    let cornerSize = opts && 'cornerSize' in opts ? opts.cornerSize : null;
    let lineHeight = opts && 'lineHeight' in opts ? opts.lineHeight : null;
    let maskColor = opts && 'maskColor' in opts ? opts.maskColor : null;
    let pointerDown = opts && 'pointerDown' in opts ? opts.pointerDown : null;
    let cornerPainter = opts && 'cornerPainter' in opts ? opts.cornerPainter : null;
    this[cropRect$] = cropRect;
    this[lineColor$] = lineColor;
    this[cornerColor$] = cornerColor;
    this[cornerSize$] = cornerSize;
    this[lineHeight$] = lineHeight;
    this[maskColor$] = maskColor;
    this[pointerDown$] = pointerDown;
    this[cornerPainter$0] = cornerPainter;
    extended_image_crop_layer.ExtendedImageCropLayerPainter.__proto__.new.call(this);
    ;
  }).prototype = extended_image_crop_layer.ExtendedImageCropLayerPainter.prototype;
  dart.addTypeTests(extended_image_crop_layer.ExtendedImageCropLayerPainter);
  dart.addTypeCaches(extended_image_crop_layer.ExtendedImageCropLayerPainter);
  dart.setMethodSignature(extended_image_crop_layer.ExtendedImageCropLayerPainter, () => ({
    __proto__: dart.getMethods(extended_image_crop_layer.ExtendedImageCropLayerPainter.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)]),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(extended_image_crop_layer.ExtendedImageCropLayerPainter, I[2]);
  dart.setFieldSignature(extended_image_crop_layer.ExtendedImageCropLayerPainter, () => ({
    __proto__: dart.getFields(extended_image_crop_layer.ExtendedImageCropLayerPainter.__proto__),
    cropRect: dart.finalFieldType(dart.legacy(ui.Rect)),
    cornerSize: dart.finalFieldType(dart.legacy(ui.Size)),
    cornerColor: dart.finalFieldType(dart.legacy(ui.Color)),
    lineColor: dart.finalFieldType(dart.legacy(ui.Color)),
    lineHeight: dart.finalFieldType(dart.legacy(core.double)),
    maskColor: dart.finalFieldType(dart.legacy(ui.Color)),
    pointerDown: dart.finalFieldType(dart.legacy(core.bool)),
    cornerPainter: dart.finalFieldType(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter))
  }));
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var _name$0 = dart.privateName(decoration_image, "_name");
  var _resolvedAlignment = dart.privateName(extended_render_image, "_resolvedAlignment");
  var _flipHorizontally = dart.privateName(extended_render_image, "_flipHorizontally");
  var _colorFilter = dart.privateName(extended_render_image, "_colorFilter");
  var _isAntiAlias = dart.privateName(extended_render_image, "_isAntiAlias");
  var _image = dart.privateName(extended_render_image, "_image");
  var _width = dart.privateName(extended_render_image, "_width");
  var _height = dart.privateName(extended_render_image, "_height");
  var _scale = dart.privateName(extended_render_image, "_scale");
  var _color = dart.privateName(extended_render_image, "_color");
  var _colorBlendMode = dart.privateName(extended_render_image, "_colorBlendMode");
  var _fit = dart.privateName(extended_render_image, "_fit");
  var _alignment = dart.privateName(extended_render_image, "_alignment");
  var _repeat = dart.privateName(extended_render_image, "_repeat");
  var _centerSlice = dart.privateName(extended_render_image, "_centerSlice");
  var _matchTextDirection = dart.privateName(extended_render_image, "_matchTextDirection");
  var _invertColors = dart.privateName(extended_render_image, "_invertColors");
  var _textDirection = dart.privateName(extended_render_image, "_textDirection");
  var _filterQuality = dart.privateName(extended_render_image, "_filterQuality");
  var _sourceRect = dart.privateName(extended_render_image, "_sourceRect");
  var _beforePaintImage = dart.privateName(extended_render_image, "_beforePaintImage");
  var _afterPaintImage = dart.privateName(extended_render_image, "_afterPaintImage");
  var _gestureDetails = dart.privateName(extended_render_image, "_gestureDetails");
  var _editActionDetails = dart.privateName(extended_render_image, "_editActionDetails");
  var _updateColorFilter = dart.privateName(extended_render_image, "_updateColorFilter");
  var _resolve = dart.privateName(extended_render_image, "_resolve");
  var _markNeedResolution = dart.privateName(extended_render_image, "_markNeedResolution");
  var _sizeForConstraints = dart.privateName(extended_render_image, "_sizeForConstraints");
  extended_render_image.ExtendedRenderImage = class ExtendedRenderImage extends box.RenderBox {
    get editActionDetails() {
      return this[_editActionDetails];
    }
    set editActionDetails(value) {
      if (dart.equals(value, this[_editActionDetails])) {
        return;
      }
      this[_editActionDetails] = value;
      this.markNeedsPaint();
    }
    get gestureDetails() {
      return this[_gestureDetails];
    }
    set gestureDetails(value) {
      if (dart.equals(value, this[_gestureDetails])) {
        return;
      }
      this[_gestureDetails] = value;
      this.markNeedsPaint();
    }
    get beforePaintImage() {
      return this[_beforePaintImage];
    }
    set beforePaintImage(value) {
      if (dart.equals(value, this[_beforePaintImage])) {
        return;
      }
      this[_beforePaintImage] = value;
      this.markNeedsPaint();
    }
    get afterPaintImage() {
      return this[_afterPaintImage];
    }
    set afterPaintImage(value) {
      if (dart.equals(value, this[_afterPaintImage])) {
        return;
      }
      this[_afterPaintImage] = value;
      this.markNeedsPaint();
    }
    get sourceRect() {
      return this[_sourceRect];
    }
    set sourceRect(value) {
      if (dart.equals(value, this[_sourceRect])) {
        return;
      }
      this[_sourceRect] = value;
      this.markNeedsPaint();
    }
    [_resolve]() {
      if (this[_resolvedAlignment] != null) {
        return;
      }
      this[_resolvedAlignment] = this.alignment.resolve(this.textDirection);
      this[_flipHorizontally] = dart.test(this.matchTextDirection) && this.textDirection == ui.TextDirection.rtl;
    }
    [_markNeedResolution]() {
      this[_resolvedAlignment] = null;
      this[_flipHorizontally] = null;
      this.markNeedsPaint();
    }
    get image() {
      return this[_image];
    }
    set image(value) {
      if (dart.equals(value, this[_image])) {
        return;
      }
      this[_image] = value;
      this.markNeedsPaint();
      if (this[_width] == null || this[_height] == null) {
        this.markNeedsLayout();
      }
    }
    get width() {
      return this[_width];
    }
    set width(value) {
      if (value == this[_width]) {
        return;
      }
      this[_width] = value;
      this.markNeedsLayout();
    }
    get height() {
      return this[_height];
    }
    set height(value) {
      if (value == this[_height]) {
        return;
      }
      this[_height] = value;
      this.markNeedsLayout();
    }
    get scale() {
      return this[_scale];
    }
    set scale(value) {
      if (!(value != null)) dart.assertFailed(null, I[3], 184, 12, "value != null");
      if (value == this[_scale]) {
        return;
      }
      this[_scale] = value;
      this.markNeedsLayout();
    }
    [_updateColorFilter]() {
      let t0;
      if (this[_color] == null) {
        this[_colorFilter] = null;
      } else {
        this[_colorFilter] = new _engine._CkBlendModeColorFilter.new(this[_color], (t0 = this[_colorBlendMode], t0 == null ? ui.BlendMode.srcIn : t0));
      }
    }
    get color() {
      return this[_color];
    }
    set color(value) {
      if (dart.equals(value, this[_color])) {
        return;
      }
      this[_color] = value;
      this[_updateColorFilter]();
      this.markNeedsPaint();
    }
    get filterQuality() {
      return this[_filterQuality];
    }
    set filterQuality(value) {
      if (!(value != null)) dart.assertFailed(null, I[3], 222, 12, "value != null");
      if (value == this[_filterQuality]) {
        return;
      }
      this[_filterQuality] = value;
      this.markNeedsPaint();
    }
    get colorBlendMode() {
      return this[_colorBlendMode];
    }
    set colorBlendMode(value) {
      if (value == this[_colorBlendMode]) {
        return;
      }
      this[_colorBlendMode] = value;
      this[_updateColorFilter]();
      this.markNeedsPaint();
    }
    get fit() {
      return this[_fit];
    }
    set fit(value) {
      if (value == this[_fit]) {
        return;
      }
      this[_fit] = value;
      this.markNeedsPaint();
    }
    get alignment() {
      return this[_alignment];
    }
    set alignment(value) {
      if (!(value != null)) dart.assertFailed(null, I[3], 270, 12, "value != null");
      if (dart.equals(value, this[_alignment])) {
        return;
      }
      this[_alignment] = value;
      this[_markNeedResolution]();
    }
    get repeat() {
      return this[_repeat];
    }
    set repeat(value) {
      if (!(value != null)) dart.assertFailed(null, I[3], 282, 12, "value != null");
      if (value == this[_repeat]) {
        return;
      }
      this[_repeat] = value;
      this.markNeedsPaint();
    }
    get centerSlice() {
      return this[_centerSlice];
    }
    set centerSlice(value) {
      if (dart.equals(value, this[_centerSlice])) {
        return;
      }
      this[_centerSlice] = value;
      this.markNeedsPaint();
    }
    get invertColors() {
      return this[_invertColors];
    }
    set invertColors(value) {
      if (value == this[_invertColors]) {
        return;
      }
      this[_invertColors] = value;
      this.markNeedsPaint();
    }
    get matchTextDirection() {
      return this[_matchTextDirection];
    }
    set matchTextDirection(value) {
      if (!(value != null)) dart.assertFailed(null, I[3], 339, 12, "value != null");
      if (value == this[_matchTextDirection]) {
        return;
      }
      this[_matchTextDirection] = value;
      this[_markNeedResolution]();
    }
    get textDirection() {
      return this[_textDirection];
    }
    set textDirection(value) {
      if (this[_textDirection] == value) {
        return;
      }
      this[_textDirection] = value;
      this[_markNeedResolution]();
    }
    get isAntiAlias() {
      return this[_isAntiAlias];
    }
    set isAntiAlias(value) {
      if (this[_isAntiAlias] == value) {
        return;
      }
      if (!(value != null)) dart.assertFailed(null, I[3], 371, 12, "value != null");
      this[_isAntiAlias] = value;
      this.markNeedsPaint();
    }
    [_sizeForConstraints](constraints) {
      constraints = new box.BoxConstraints.tightFor({width: this[_width], height: this[_height]}).enforce(constraints);
      if (this[_image] == null) {
        return constraints.smallest;
      }
      return constraints.constrainSizeAndAttemptToPreserveAspectRatio(new ui.Size.new(this[_image].width[$toDouble]() / dart.notNull(this[_scale]), this[_image].height[$toDouble]() / dart.notNull(this[_scale])));
    }
    computeMinIntrinsicWidth(height) {
      if (!(dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[3], 399, 12, "height >= 0.0");
      if (this[_width] == null && this[_height] == null) {
        return 0.0;
      }
      return this[_sizeForConstraints](new box.BoxConstraints.tightForFinite({height: height})).width;
    }
    computeMaxIntrinsicWidth(height) {
      if (!(dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[3], 409, 12, "height >= 0.0");
      return this[_sizeForConstraints](new box.BoxConstraints.tightForFinite({height: height})).width;
    }
    computeMinIntrinsicHeight(width) {
      if (!(dart.notNull(width) >= 0.0)) dart.assertFailed(null, I[3], 416, 12, "width >= 0.0");
      if (this[_width] == null && this[_height] == null) {
        return 0.0;
      }
      return this[_sizeForConstraints](new box.BoxConstraints.tightForFinite({width: width})).height;
    }
    computeMaxIntrinsicHeight(width) {
      if (!(dart.notNull(width) >= 0.0)) dart.assertFailed(null, I[3], 426, 12, "width >= 0.0");
      return this[_sizeForConstraints](new box.BoxConstraints.tightForFinite({width: width})).height;
    }
    hitTestSelf(position) {
      return true;
    }
    performLayout() {
      this.size = this[_sizeForConstraints](this.constraints);
    }
    paint(context, offset) {
      if (this[_image] == null) {
        return;
      }
      this[_resolve]();
      if (!(this[_resolvedAlignment] != null)) dart.assertFailed(null, I[3], 445, 12, "_resolvedAlignment != null");
      if (!(this[_flipHorizontally] != null)) dart.assertFailed(null, I[3], 446, 12, "_flipHorizontally != null");
      let rect = offset['&'](this.size);
      if (this.gestureDetails != null && this.gestureDetails.slidePageOffset != null) {
        rect = rect.shift(this.gestureDetails.slidePageOffset._negate());
      }
      extended_render_image.paintExtendedImage({canvas: context.canvas, rect: rect, image: this[_image], scale: this[_scale], colorFilter: this[_colorFilter], fit: this[_fit], alignment: this[_resolvedAlignment], centerSlice: this[_centerSlice], repeat: this[_repeat], flipHorizontally: this[_flipHorizontally], invertColors: this.invertColors, filterQuality: this[_filterQuality], customSourceRect: this[_sourceRect], beforePaintImage: this.beforePaintImage, afterPaintImage: this.afterPaintImage, gestureDetails: this.gestureDetails, editActionDetails: this.editActionDetails});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfImageL()).new("image", this.image));
      properties.add(new diagnostics.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("scale", this.scale, {defaultValue: 1.0}));
      properties.add(new (T$.DiagnosticsPropertyOfColorL()).new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfBlendModeL()).new("colorBlendMode", this.colorBlendMode, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfBoxFitL()).new("fit", this.fit, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometryL()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfImageRepeatL()).new("repeat", this.repeat, {defaultValue: decoration_image.ImageRepeat.noRepeat}));
      properties.add(new (T$.DiagnosticsPropertyOfRectL()).new("centerSlice", this.centerSlice, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("matchTextDirection", {value: this.matchTextDirection, ifTrue: "match text direction"}));
      properties.add(new (T$.EnumPropertyOfTextDirectionL()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfboolL()).new("invertColors", this.invertColors));
      properties.add(new (T$.EnumPropertyOfFilterQualityL()).new("filterQuality", this.filterQuality));
    }
  };
  (extended_render_image.ExtendedRenderImage.new = function(opts) {
    let image = opts && 'image' in opts ? opts.image : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let sourceRect = opts && 'sourceRect' in opts ? opts.sourceRect : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let gestureDetails = opts && 'gestureDetails' in opts ? opts.gestureDetails : null;
    let editActionDetails = opts && 'editActionDetails' in opts ? opts.editActionDetails : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    this[_resolvedAlignment] = null;
    this[_flipHorizontally] = null;
    this[_colorFilter] = null;
    this[_isAntiAlias] = null;
    if (!(scale != null)) dart.assertFailed(null, I[3], 37, 16, "scale != null");
    if (!(repeat != null)) dart.assertFailed(null, I[3], 38, 16, "repeat != null");
    if (!(alignment != null)) dart.assertFailed(null, I[3], 39, 16, "alignment != null");
    if (!(filterQuality != null)) dart.assertFailed(null, I[3], 40, 16, "filterQuality != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, I[3], 41, 16, "matchTextDirection != null");
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[3], 42, 16, "isAntiAlias != null");
    this[_image] = image;
    this[_width] = width;
    this[_height] = height;
    this[_scale] = scale;
    this[_color] = color;
    this[_colorBlendMode] = colorBlendMode;
    this[_fit] = fit;
    this[_alignment] = alignment;
    this[_repeat] = repeat;
    this[_centerSlice] = centerSlice;
    this[_matchTextDirection] = matchTextDirection;
    this[_invertColors] = invertColors;
    this[_textDirection] = textDirection;
    this[_filterQuality] = filterQuality;
    this[_sourceRect] = sourceRect;
    this[_beforePaintImage] = beforePaintImage;
    this[_afterPaintImage] = afterPaintImage;
    this[_gestureDetails] = gestureDetails;
    this[_editActionDetails] = editActionDetails;
    extended_render_image.ExtendedRenderImage.__proto__.new.call(this);
    this[_updateColorFilter]();
  }).prototype = extended_render_image.ExtendedRenderImage.prototype;
  dart.addTypeTests(extended_render_image.ExtendedRenderImage);
  dart.addTypeCaches(extended_render_image.ExtendedRenderImage);
  dart.setMethodSignature(extended_render_image.ExtendedRenderImage, () => ({
    __proto__: dart.getMethods(extended_render_image.ExtendedRenderImage.__proto__),
    [_resolve]: dart.fnType(dart.void, []),
    [_markNeedResolution]: dart.fnType(dart.void, []),
    [_updateColorFilter]: dart.fnType(dart.void, []),
    [_sizeForConstraints]: dart.fnType(dart.legacy(ui.Size), [dart.legacy(box.BoxConstraints)]),
    computeMinIntrinsicWidth: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double)]),
    computeMaxIntrinsicWidth: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double)]),
    computeMinIntrinsicHeight: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double)]),
    computeMaxIntrinsicHeight: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double)]),
    hitTestSelf: dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Offset)]),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(extended_render_image.ExtendedRenderImage, () => ({
    __proto__: dart.getGetters(extended_render_image.ExtendedRenderImage.__proto__),
    editActionDetails: dart.legacy(extended_image_editor_utils.EditActionDetails),
    gestureDetails: dart.legacy(extended_image_gesture_utils.GestureDetails),
    beforePaintImage: dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)])),
    afterPaintImage: dart.legacy(dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)])),
    sourceRect: dart.legacy(ui.Rect),
    image: dart.legacy(ui.Image),
    width: dart.legacy(core.double),
    height: dart.legacy(core.double),
    scale: dart.legacy(core.double),
    color: dart.legacy(ui.Color),
    filterQuality: dart.legacy(ui.FilterQuality),
    colorBlendMode: dart.legacy(ui.BlendMode),
    fit: dart.legacy(box_fit.BoxFit),
    alignment: dart.legacy(alignment.AlignmentGeometry),
    repeat: dart.legacy(decoration_image.ImageRepeat),
    centerSlice: dart.legacy(ui.Rect),
    invertColors: dart.legacy(core.bool),
    matchTextDirection: dart.legacy(core.bool),
    textDirection: dart.legacy(ui.TextDirection),
    isAntiAlias: dart.legacy(core.bool)
  }));
  dart.setSetterSignature(extended_render_image.ExtendedRenderImage, () => ({
    __proto__: dart.getSetters(extended_render_image.ExtendedRenderImage.__proto__),
    editActionDetails: dart.legacy(extended_image_editor_utils.EditActionDetails),
    gestureDetails: dart.legacy(extended_image_gesture_utils.GestureDetails),
    beforePaintImage: dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)])),
    afterPaintImage: dart.legacy(dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)])),
    sourceRect: dart.legacy(ui.Rect),
    image: dart.legacy(ui.Image),
    width: dart.legacy(core.double),
    height: dart.legacy(core.double),
    scale: dart.legacy(core.double),
    color: dart.legacy(ui.Color),
    filterQuality: dart.legacy(ui.FilterQuality),
    colorBlendMode: dart.legacy(ui.BlendMode),
    fit: dart.legacy(box_fit.BoxFit),
    alignment: dart.legacy(alignment.AlignmentGeometry),
    repeat: dart.legacy(decoration_image.ImageRepeat),
    centerSlice: dart.legacy(ui.Rect),
    invertColors: dart.legacy(core.bool),
    matchTextDirection: dart.legacy(core.bool),
    textDirection: dart.legacy(ui.TextDirection),
    isAntiAlias: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(extended_render_image.ExtendedRenderImage, I[4]);
  dart.setFieldSignature(extended_render_image.ExtendedRenderImage, () => ({
    __proto__: dart.getFields(extended_render_image.ExtendedRenderImage.__proto__),
    [_editActionDetails]: dart.fieldType(dart.legacy(extended_image_editor_utils.EditActionDetails)),
    [_gestureDetails]: dart.fieldType(dart.legacy(extended_image_gesture_utils.GestureDetails)),
    [_beforePaintImage]: dart.fieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)]))),
    [_afterPaintImage]: dart.fieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)]))),
    [_sourceRect]: dart.fieldType(dart.legacy(ui.Rect)),
    [_resolvedAlignment]: dart.fieldType(dart.legacy(alignment.Alignment)),
    [_flipHorizontally]: dart.fieldType(dart.legacy(core.bool)),
    [_image]: dart.fieldType(dart.legacy(ui.Image)),
    [_width]: dart.fieldType(dart.legacy(core.double)),
    [_height]: dart.fieldType(dart.legacy(core.double)),
    [_scale]: dart.fieldType(dart.legacy(core.double)),
    [_colorFilter]: dart.fieldType(dart.legacy(ui.ColorFilter)),
    [_color]: dart.fieldType(dart.legacy(ui.Color)),
    [_filterQuality]: dart.fieldType(dart.legacy(ui.FilterQuality)),
    [_colorBlendMode]: dart.fieldType(dart.legacy(ui.BlendMode)),
    [_fit]: dart.fieldType(dart.legacy(box_fit.BoxFit)),
    [_alignment]: dart.fieldType(dart.legacy(alignment.AlignmentGeometry)),
    [_repeat]: dart.fieldType(dart.legacy(decoration_image.ImageRepeat)),
    [_centerSlice]: dart.fieldType(dart.legacy(ui.Rect)),
    [_invertColors]: dart.fieldType(dart.legacy(core.bool)),
    [_matchTextDirection]: dart.fieldType(dart.legacy(core.bool)),
    [_textDirection]: dart.fieldType(dart.legacy(ui.TextDirection)),
    [_isAntiAlias]: dart.fieldType(dart.legacy(core.bool))
  }));
  extended_render_image.paintExtendedImage = function paintExtendedImage(opts) {
    let t0, t0$, t0$0, t0$1;
    let canvas = opts && 'canvas' in opts ? opts.canvas : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let flipHorizontally = opts && 'flipHorizontally' in opts ? opts.flipHorizontally : false;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let customSourceRect = opts && 'customSourceRect' in opts ? opts.customSourceRect : null;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let gestureDetails = opts && 'gestureDetails' in opts ? opts.gestureDetails : null;
    let editActionDetails = opts && 'editActionDetails' in opts ? opts.editActionDetails : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    if (!(canvas != null)) dart.assertFailed(null, I[3], 521, 10, "canvas != null");
    if (!(image != null)) dart.assertFailed(null, I[3], 522, 10, "image != null");
    if (!(alignment != null)) dart.assertFailed(null, I[3], 523, 10, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, I[3], 524, 10, "repeat != null");
    if (!(flipHorizontally != null)) dart.assertFailed(null, I[3], 525, 10, "flipHorizontally != null");
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[3], 526, 10, "isAntiAlias != null");
    if (dart.test(rect.isEmpty)) {
      return;
    }
    let outputSize = rect.size;
    let inputSize = new ui.Size.new(image.width[$toDouble](), image.height[$toDouble]());
    let topLeft = rect.topLeft;
    let sliceBorder = null;
    if (centerSlice != null) {
      sliceBorder = new ui.Offset.new(dart.notNull(centerSlice.left) + dart.notNull(inputSize.width) - dart.notNull(centerSlice.right), dart.notNull(centerSlice.top) + dart.notNull(inputSize.height) - dart.notNull(centerSlice.bottom));
      outputSize = T$.SizeL().as(outputSize['-'](sliceBorder));
      inputSize = T$.SizeL().as(inputSize['-'](sliceBorder));
    }
    fit == null ? fit = centerSlice == null ? box_fit.BoxFit.scaleDown : box_fit.BoxFit.fill : null;
    if (!(centerSlice == null || fit != box_fit.BoxFit.none && fit != box_fit.BoxFit.cover)) dart.assertFailed(null, I[3], 552, 10, "centerSlice == null || (fit != BoxFit.none && fit != BoxFit.cover)");
    let fittedSizes = box_fit.applyBoxFit(fit, inputSize['/'](scale), outputSize);
    let sourceSize = fittedSizes.source['*'](scale);
    let destinationSize = fittedSizes.destination;
    if (centerSlice != null) {
      outputSize = outputSize['+'](sliceBorder);
      destinationSize = destinationSize['+'](sliceBorder);
      if (!dart.equals(sourceSize, inputSize)) dart.assertFailed("centerSlice was used with a BoxFit that does not guarantee that the image is fully visible.", I[3], 562, 12, "sourceSize == inputSize");
    }
    if (repeat != decoration_image.ImageRepeat.noRepeat && dart.equals(destinationSize, outputSize)) {
      repeat = decoration_image.ImageRepeat.noRepeat;
    }
    let paint = (t0 = ui.Paint.new(), (() => {
      t0.isAntiAlias = isAntiAlias;
      return t0;
    })());
    if (colorFilter != null) {
      paint.colorFilter = colorFilter;
    }
    if (!dart.equals(sourceSize, destinationSize)) {
      paint.filterQuality = filterQuality;
    }
    paint.invertColors = invertColors;
    let halfWidthDelta = (dart.notNull(outputSize.width) - dart.notNull(destinationSize.width)) / 2.0;
    let halfHeightDelta = (dart.notNull(outputSize.height) - dart.notNull(destinationSize.height)) / 2.0;
    let dx = halfWidthDelta + dart.notNull(dart.test(flipHorizontally) ? -dart.notNull(alignment.x) : alignment.x) * halfWidthDelta;
    let dy = halfHeightDelta + dart.notNull(alignment.y) * halfHeightDelta;
    let destinationPosition = topLeft.translate(dx, dy);
    let destinationRect = destinationPosition['&'](destinationSize);
    let needClip = false;
    if (gestureDetails != null) {
      destinationRect = gestureDetails.calculateFinalDestinationRect(rect, destinationRect);
      needClip = extended_image_gesture_utils.outRect(rect, destinationRect);
      if (gestureDetails.slidePageOffset != null) {
        destinationRect = destinationRect.shift(gestureDetails.slidePageOffset);
        rect = rect.shift(gestureDetails.slidePageOffset);
      }
      if (dart.test(needClip)) {
        canvas.save();
        canvas.clipRect(rect);
      }
    }
    let hasEditAction = false;
    if (editActionDetails != null) {
      if (editActionDetails.cropRectPadding != null) {
        destinationRect = extended_image_editor_utils.getDestinationRect({inputSize: inputSize, rect: editActionDetails.cropRectPadding.deflateRect(rect), fit: fit, flipHorizontally: false, scale: scale, centerSlice: centerSlice, alignment: alignment});
      }
      editActionDetails.initRect(rect, destinationRect);
      destinationRect = editActionDetails.getFinalDestinationRect();
      needClip = extended_image_gesture_utils.outRect(rect, destinationRect);
      hasEditAction = editActionDetails.hasEditAction;
      if (dart.test(needClip) || dart.test(hasEditAction)) {
        canvas.save();
        if (dart.test(needClip)) {
          canvas.clipRect(rect);
        }
      }
      if (dart.test(hasEditAction)) {
        let origin = (t0$0 = (t0$ = editActionDetails.screenCropRect, t0$ == null ? null : t0$.center), t0$0 == null ? destinationRect.center : t0$0);
        let result = vector_math_64.Matrix4.identity();
        let editAction = editActionDetails;
        result.translate(origin.dx, origin.dy);
        if (dart.test(editAction.hasRotateAngle)) {
          result.multiply(vector_math_64.Matrix4.rotationZ(editAction.rotateRadian));
        }
        if (dart.test(editAction.flipY)) {
          result.multiply(vector_math_64.Matrix4.rotationY(3.141592653589793));
        }
        if (dart.test(editAction.flipX)) {
          result.multiply(vector_math_64.Matrix4.rotationX(3.141592653589793));
        }
        result.translate(-dart.notNull(origin.dx), -dart.notNull(origin.dy));
        canvas.transform(result.storage);
        destinationRect = editAction.paintRect(destinationRect);
      }
    }
    if (beforePaintImage != null) {
      let handle = beforePaintImage(canvas, destinationRect, image, paint);
      if (dart.test(handle)) {
        return;
      }
    }
    let needSave = repeat != decoration_image.ImageRepeat.noRepeat || dart.test(flipHorizontally);
    if (needSave) {
      canvas.save();
    }
    if (repeat != decoration_image.ImageRepeat.noRepeat) {
      canvas.clipRect(rect);
    }
    if (dart.test(flipHorizontally)) {
      let dx = -(dart.notNull(rect.left) + dart.notNull(rect.width) / 2.0);
      canvas.translate(-dx, 0.0);
      canvas.scale(-1.0, 1.0);
      canvas.translate(dx, 0.0);
    }
    if (centerSlice == null) {
      let sourceRect = (t0$1 = customSourceRect, t0$1 == null ? alignment.inscribe(sourceSize, ui.Offset.zero['&'](inputSize)) : t0$1);
      for (let tileRect of extended_render_image._generateImageTileRects(rect, destinationRect, repeat)) {
        canvas.drawImageRect(image, sourceRect, tileRect, paint);
      }
    } else {
      for (let tileRect of extended_render_image._generateImageTileRects(rect, destinationRect, repeat)) {
        canvas.drawImageNine(image, centerSlice, tileRect, paint);
      }
    }
    if (needSave) {
      canvas.restore();
    }
    if (dart.test(needClip) || dart.test(hasEditAction)) {
      canvas.restore();
    }
    if (afterPaintImage != null) {
      afterPaintImage(canvas, destinationRect, image, paint);
    }
  };
  extended_render_image._generateImageTileRects = function _generateImageTileRects(outputRect, fundamentalRect, repeat) {
    return new (T$.SyncIterableOfRectL()).new(function* _generateImageTileRects() {
      if (repeat == decoration_image.ImageRepeat.noRepeat) {
        yield fundamentalRect;
        return;
      }
      let startX = 0;
      let startY = 0;
      let stopX = 0;
      let stopY = 0;
      let strideX = fundamentalRect.width;
      let strideY = fundamentalRect.height;
      if (repeat == decoration_image.ImageRepeat.repeat || repeat == decoration_image.ImageRepeat.repeatX) {
        startX = ((dart.notNull(outputRect.left) - dart.notNull(fundamentalRect.left)) / dart.notNull(strideX))[$floor]();
        stopX = ((dart.notNull(outputRect.right) - dart.notNull(fundamentalRect.right)) / dart.notNull(strideX))[$ceil]();
      }
      if (repeat == decoration_image.ImageRepeat.repeat || repeat == decoration_image.ImageRepeat.repeatY) {
        startY = ((dart.notNull(outputRect.top) - dart.notNull(fundamentalRect.top)) / dart.notNull(strideY))[$floor]();
        stopY = ((dart.notNull(outputRect.bottom) - dart.notNull(fundamentalRect.bottom)) / dart.notNull(strideY))[$ceil]();
      }
      for (let i = startX; i <= stopX; i = i + 1) {
        for (let j = startY; j <= stopY; j = j + 1) {
          yield fundamentalRect.shift(new ui.Offset.new(i * dart.notNull(strideX), j * dart.notNull(strideY)));
        }
      }
    });
  };
  var isAntiAlias$ = dart.privateName(extended_raw_image, "ExtendedRawImage.isAntiAlias");
  var editActionDetails$0 = dart.privateName(extended_raw_image, "ExtendedRawImage.editActionDetails");
  var gestureDetails$ = dart.privateName(extended_raw_image, "ExtendedRawImage.gestureDetails");
  var beforePaintImage$ = dart.privateName(extended_raw_image, "ExtendedRawImage.beforePaintImage");
  var afterPaintImage$ = dart.privateName(extended_raw_image, "ExtendedRawImage.afterPaintImage");
  var image$ = dart.privateName(extended_raw_image, "ExtendedRawImage.image");
  var width$ = dart.privateName(extended_raw_image, "ExtendedRawImage.width");
  var height$ = dart.privateName(extended_raw_image, "ExtendedRawImage.height");
  var scale$0 = dart.privateName(extended_raw_image, "ExtendedRawImage.scale");
  var color$ = dart.privateName(extended_raw_image, "ExtendedRawImage.color");
  var filterQuality$ = dart.privateName(extended_raw_image, "ExtendedRawImage.filterQuality");
  var colorBlendMode$ = dart.privateName(extended_raw_image, "ExtendedRawImage.colorBlendMode");
  var fit$0 = dart.privateName(extended_raw_image, "ExtendedRawImage.fit");
  var alignment$ = dart.privateName(extended_raw_image, "ExtendedRawImage.alignment");
  var repeat$ = dart.privateName(extended_raw_image, "ExtendedRawImage.repeat");
  var centerSlice$ = dart.privateName(extended_raw_image, "ExtendedRawImage.centerSlice");
  var matchTextDirection$ = dart.privateName(extended_raw_image, "ExtendedRawImage.matchTextDirection");
  var invertColors$ = dart.privateName(extended_raw_image, "ExtendedRawImage.invertColors");
  var sourceRect$ = dart.privateName(extended_raw_image, "ExtendedRawImage.sourceRect");
  extended_raw_image.ExtendedRawImage = class ExtendedRawImage extends framework.LeafRenderObjectWidget {
    get isAntiAlias() {
      return this[isAntiAlias$];
    }
    set isAntiAlias(value) {
      super.isAntiAlias = value;
    }
    get editActionDetails() {
      return this[editActionDetails$0];
    }
    set editActionDetails(value) {
      super.editActionDetails = value;
    }
    get gestureDetails() {
      return this[gestureDetails$];
    }
    set gestureDetails(value) {
      super.gestureDetails = value;
    }
    get beforePaintImage() {
      return this[beforePaintImage$];
    }
    set beforePaintImage(value) {
      super.beforePaintImage = value;
    }
    get afterPaintImage() {
      return this[afterPaintImage$];
    }
    set afterPaintImage(value) {
      super.afterPaintImage = value;
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get scale() {
      return this[scale$0];
    }
    set scale(value) {
      super.scale = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get filterQuality() {
      return this[filterQuality$];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get colorBlendMode() {
      return this[colorBlendMode$];
    }
    set colorBlendMode(value) {
      super.colorBlendMode = value;
    }
    get fit() {
      return this[fit$0];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get centerSlice() {
      return this[centerSlice$];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get invertColors() {
      return this[invertColors$];
    }
    set invertColors(value) {
      super.invertColors = value;
    }
    get sourceRect() {
      return this[sourceRect$];
    }
    set sourceRect(value) {
      super.sourceRect = value;
    }
    createRenderObject(context) {
      if (!(!dart.test(this.matchTextDirection) && T$.AlignmentL().is(this.alignment) || dart.test(debug.debugCheckHasDirectionality(context)))) dart.assertFailed(null, I[5], 183, 12, "(!matchTextDirection && alignment is Alignment) ||\n        debugCheckHasDirectionality(context)");
      return new extended_render_image.ExtendedRenderImage.new({image: this.image, width: this.width, height: this.height, scale: this.scale, color: this.color, colorBlendMode: this.colorBlendMode, fit: this.fit, alignment: this.alignment, repeat: this.repeat, centerSlice: this.centerSlice, matchTextDirection: this.matchTextDirection, textDirection: dart.test(this.matchTextDirection) || !T$.AlignmentL().is(this.alignment) ? basic.Directionality.of(context) : null, invertColors: this.invertColors, filterQuality: this.filterQuality, sourceRect: this.sourceRect, beforePaintImage: this.beforePaintImage, afterPaintImage: this.afterPaintImage, gestureDetails: this.gestureDetails, editActionDetails: this.editActionDetails, isAntiAlias: this.isAntiAlias});
    }
    updateRenderObject(context, renderObject) {
      let t0;
      T$.ExtendedRenderImageL().as(renderObject);
      t0 = renderObject;
      (() => {
        t0.image = this.image;
        t0.width = this.width;
        t0.height = this.height;
        t0.scale = this.scale;
        t0.color = this.color;
        t0.colorBlendMode = this.colorBlendMode;
        t0.alignment = this.alignment;
        t0.fit = this.fit;
        t0.repeat = this.repeat;
        t0.centerSlice = this.centerSlice;
        t0.matchTextDirection = this.matchTextDirection;
        t0.textDirection = dart.test(this.matchTextDirection) || !T$.AlignmentL().is(this.alignment) ? basic.Directionality.of(context) : null;
        t0.invertColors = this.invertColors;
        t0.filterQuality = this.filterQuality;
        t0.afterPaintImage = this.afterPaintImage;
        t0.beforePaintImage = this.beforePaintImage;
        t0.sourceRect = this.sourceRect;
        t0.gestureDetails = this.gestureDetails;
        t0.editActionDetails = this.editActionDetails;
        t0.isAntiAlias = this.isAntiAlias;
        return t0;
      })();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfImageL()).new("image", this.image));
      properties.add(new diagnostics.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("scale", this.scale, {defaultValue: 1.0}));
      properties.add(new (T$.DiagnosticsPropertyOfColorL()).new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfBlendModeL()).new("colorBlendMode", this.colorBlendMode, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfBoxFitL()).new("fit", this.fit, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometryL()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfImageRepeatL()).new("repeat", this.repeat, {defaultValue: decoration_image.ImageRepeat.noRepeat}));
      properties.add(new (T$.DiagnosticsPropertyOfRectL()).new("centerSlice", this.centerSlice, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("matchTextDirection", {value: this.matchTextDirection, ifTrue: "match text direction"}));
      properties.add(new (T$.DiagnosticsPropertyOfboolL()).new("invertColors", this.invertColors));
      properties.add(new (T$.EnumPropertyOfFilterQualityL()).new("filterQuality", this.filterQuality));
    }
  };
  (extended_raw_image.ExtendedRawImage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let sourceRect = opts && 'sourceRect' in opts ? opts.sourceRect : null;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let gestureDetails = opts && 'gestureDetails' in opts ? opts.gestureDetails : null;
    let editActionDetails = opts && 'editActionDetails' in opts ? opts.editActionDetails : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$] = image;
    this[width$] = width;
    this[height$] = height;
    this[scale$0] = scale;
    this[color$] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$0] = fit;
    this[alignment$] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[invertColors$] = invertColors;
    this[filterQuality$] = filterQuality;
    this[sourceRect$] = sourceRect;
    this[beforePaintImage$] = beforePaintImage;
    this[afterPaintImage$] = afterPaintImage;
    this[gestureDetails$] = gestureDetails;
    this[editActionDetails$0] = editActionDetails;
    this[isAntiAlias$] = isAntiAlias;
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[5], 41, 16, "isAntiAlias != null");
    if (!(scale != null)) dart.assertFailed(null, I[5], 42, 16, "scale != null");
    if (!(alignment != null)) dart.assertFailed(null, I[5], 43, 16, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, I[5], 44, 16, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, I[5], 45, 16, "matchTextDirection != null");
    extended_raw_image.ExtendedRawImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_raw_image.ExtendedRawImage.prototype;
  dart.addTypeTests(extended_raw_image.ExtendedRawImage);
  dart.addTypeCaches(extended_raw_image.ExtendedRawImage);
  dart.setMethodSignature(extended_raw_image.ExtendedRawImage, () => ({
    __proto__: dart.getMethods(extended_raw_image.ExtendedRawImage.__proto__),
    createRenderObject: dart.fnType(dart.legacy(extended_render_image.ExtendedRenderImage), [dart.legacy(framework.BuildContext)]),
    updateRenderObject: dart.fnType(dart.void, [dart.legacy(framework.BuildContext), dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setLibraryUri(extended_raw_image.ExtendedRawImage, I[6]);
  dart.setFieldSignature(extended_raw_image.ExtendedRawImage, () => ({
    __proto__: dart.getFields(extended_raw_image.ExtendedRawImage.__proto__),
    isAntiAlias: dart.finalFieldType(dart.legacy(core.bool)),
    editActionDetails: dart.finalFieldType(dart.legacy(extended_image_editor_utils.EditActionDetails)),
    gestureDetails: dart.finalFieldType(dart.legacy(extended_image_gesture_utils.GestureDetails)),
    beforePaintImage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)]))),
    afterPaintImage: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)]))),
    image: dart.finalFieldType(dart.legacy(ui.Image)),
    width: dart.finalFieldType(dart.legacy(core.double)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    scale: dart.finalFieldType(dart.legacy(core.double)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    filterQuality: dart.finalFieldType(dart.legacy(ui.FilterQuality)),
    colorBlendMode: dart.finalFieldType(dart.legacy(ui.BlendMode)),
    fit: dart.finalFieldType(dart.legacy(box_fit.BoxFit)),
    alignment: dart.finalFieldType(dart.legacy(alignment.AlignmentGeometry)),
    repeat: dart.finalFieldType(dart.legacy(decoration_image.ImageRepeat)),
    centerSlice: dart.finalFieldType(dart.legacy(ui.Rect)),
    matchTextDirection: dart.finalFieldType(dart.legacy(core.bool)),
    invertColors: dart.finalFieldType(dart.legacy(core.bool)),
    sourceRect: dart.finalFieldType(dart.legacy(ui.Rect))
  }));
  var canScrollPage$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.canScrollPage");
  var canMovePage$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.canMovePage");
  var scrollDirection$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.scrollDirection");
  var reverse$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.reverse");
  var controller$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.controller");
  var physics$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.physics");
  var pageSnapping$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.pageSnapping");
  var onPageChanged$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.onPageChanged");
  var childrenDelegate$ = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageView.childrenDelegate");
  var _name$1 = dart.privateName(basic_types, "_name");
  extended_image_gesture_page_view.ExtendedImageGesturePageView = class ExtendedImageGesturePageView extends framework.StatefulWidget {
    get canScrollPage() {
      return this[canScrollPage$];
    }
    set canScrollPage(value) {
      super.canScrollPage = value;
    }
    get canMovePage() {
      return this[canMovePage$];
    }
    set canMovePage(value) {
      super.canMovePage = value;
    }
    get scrollDirection() {
      return this[scrollDirection$];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get physics() {
      return this[physics$];
    }
    set physics(value) {
      super.physics = value;
    }
    get pageSnapping() {
      return this[pageSnapping$];
    }
    set pageSnapping(value) {
      super.pageSnapping = value;
    }
    get onPageChanged() {
      return this[onPageChanged$];
    }
    set onPageChanged(value) {
      super.onPageChanged = value;
    }
    get childrenDelegate() {
      return this[childrenDelegate$];
    }
    set childrenDelegate(value) {
      super.childrenDelegate = value;
    }
    createState() {
      return new extended_image_gesture_page_view.ExtendedImageGesturePageViewState.new();
    }
  };
  (extended_image_gesture_page_view.ExtendedImageGesturePageView.new = function(opts) {
    let t0, t0$, t0$0;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[201] || CT.C201;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let pageSnapping = opts && 'pageSnapping' in opts ? opts.pageSnapping : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let children = opts && 'children' in opts ? opts.children : C[202] || CT.C202;
    let canMovePage = opts && 'canMovePage' in opts ? opts.canMovePage : null;
    let canScrollPage = opts && 'canScrollPage' in opts ? opts.canScrollPage : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$] = scrollDirection;
    this[reverse$] = reverse;
    this[pageSnapping$] = pageSnapping;
    this[onPageChanged$] = onPageChanged;
    this[controller$] = (t0 = controller, t0 == null ? extended_image_gesture_page_view._defaultPageController : t0);
    this[childrenDelegate$] = new sliver.SliverChildListDelegate.new(children);
    this[physics$] = physics != null ? extended_image_gesture_page_view._defaultScrollPhysics.applyTo(physics) : extended_image_gesture_page_view._defaultScrollPhysics;
    this[canMovePage$] = (t0$ = canMovePage, t0$ == null ? C[203] || CT.C203 : t0$);
    this[canScrollPage$] = (t0$0 = canScrollPage, t0$0 == null ? C[204] || CT.C204 : t0$0);
    extended_image_gesture_page_view.ExtendedImageGesturePageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_gesture_page_view.ExtendedImageGesturePageView.prototype;
  (extended_image_gesture_page_view.ExtendedImageGesturePageView.builder = function(opts) {
    let t0, t0$, t0$0;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[201] || CT.C201;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let pageSnapping = opts && 'pageSnapping' in opts ? opts.pageSnapping : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let canMovePage = opts && 'canMovePage' in opts ? opts.canMovePage : null;
    let canScrollPage = opts && 'canScrollPage' in opts ? opts.canScrollPage : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$] = scrollDirection;
    this[reverse$] = reverse;
    this[pageSnapping$] = pageSnapping;
    this[onPageChanged$] = onPageChanged;
    this[controller$] = (t0 = controller, t0 == null ? extended_image_gesture_page_view._defaultPageController : t0);
    this[childrenDelegate$] = new sliver.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount});
    this[physics$] = physics != null ? extended_image_gesture_page_view._defaultScrollPhysics.applyTo(physics) : extended_image_gesture_page_view._defaultScrollPhysics;
    this[canMovePage$] = (t0$ = canMovePage, t0$ == null ? C[203] || CT.C203 : t0$);
    this[canScrollPage$] = (t0$0 = canScrollPage, t0$0 == null ? C[204] || CT.C204 : t0$0);
    extended_image_gesture_page_view.ExtendedImageGesturePageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_gesture_page_view.ExtendedImageGesturePageView.prototype;
  (extended_image_gesture_page_view.ExtendedImageGesturePageView.custom = function(opts) {
    let t0, t0$, t0$0;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[201] || CT.C201;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let pageSnapping = opts && 'pageSnapping' in opts ? opts.pageSnapping : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let canMovePage = opts && 'canMovePage' in opts ? opts.canMovePage : null;
    let canScrollPage = opts && 'canScrollPage' in opts ? opts.canScrollPage : null;
    let childrenDelegate = opts && 'childrenDelegate' in opts ? opts.childrenDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$] = scrollDirection;
    this[reverse$] = reverse;
    this[pageSnapping$] = pageSnapping;
    this[onPageChanged$] = onPageChanged;
    this[childrenDelegate$] = childrenDelegate;
    if (!(childrenDelegate != null)) dart.assertFailed(null, I[7], 97, 16, "childrenDelegate != null");
    this[controller$] = (t0 = controller, t0 == null ? extended_image_gesture_page_view._defaultPageController : t0);
    this[physics$] = extended_image_gesture_page_view._defaultScrollPhysics;
    this[canMovePage$] = (t0$ = canMovePage, t0$ == null ? C[203] || CT.C203 : t0$);
    this[canScrollPage$] = (t0$0 = canScrollPage, t0$0 == null ? C[204] || CT.C204 : t0$0);
    extended_image_gesture_page_view.ExtendedImageGesturePageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_gesture_page_view.ExtendedImageGesturePageView.prototype;
  dart.addTypeTests(extended_image_gesture_page_view.ExtendedImageGesturePageView);
  dart.addTypeCaches(extended_image_gesture_page_view.ExtendedImageGesturePageView);
  dart.setMethodSignature(extended_image_gesture_page_view.ExtendedImageGesturePageView, () => ({
    __proto__: dart.getMethods(extended_image_gesture_page_view.ExtendedImageGesturePageView.__proto__),
    createState: dart.fnType(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageViewState), [])
  }));
  dart.setLibraryUri(extended_image_gesture_page_view.ExtendedImageGesturePageView, I[8]);
  dart.setFieldSignature(extended_image_gesture_page_view.ExtendedImageGesturePageView, () => ({
    __proto__: dart.getFields(extended_image_gesture_page_view.ExtendedImageGesturePageView.__proto__),
    canScrollPage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(extended_image_gesture_utils.GestureDetails)]))),
    canMovePage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(extended_image_gesture_utils.GestureDetails)]))),
    scrollDirection: dart.finalFieldType(dart.legacy(basic_types.Axis)),
    reverse: dart.finalFieldType(dart.legacy(core.bool)),
    controller: dart.finalFieldType(dart.legacy(page_view.PageController)),
    physics: dart.finalFieldType(dart.legacy(scroll_physics.ScrollPhysics)),
    pageSnapping: dart.finalFieldType(dart.legacy(core.bool)),
    onPageChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.int)]))),
    childrenDelegate: dart.finalFieldType(dart.legacy(sliver.SliverChildDelegate))
  }));
  var extendedImageGestureState = dart.privateName(extended_image_gesture_page_view, "ExtendedImageGesturePageViewState.extendedImageGestureState");
  var _gestureRecognizers = dart.privateName(extended_image_gesture_page_view, "_gestureRecognizers");
  var _gestureAnimation = dart.privateName(extended_image_gesture_page_view, "_gestureAnimation");
  var _drag = dart.privateName(extended_image_gesture_page_view, "_drag");
  var _hold = dart.privateName(extended_image_gesture_page_view, "_hold");
  var _initGestureRecognizers = dart.privateName(extended_image_gesture_page_view, "_initGestureRecognizers");
  var _handleDragDown = dart.privateName(extended_image_gesture_page_view, "_handleDragDown");
  var _handleDragStart$ = dart.privateName(extended_image_gesture_page_view, "_handleDragStart");
  var _handleDragUpdate$ = dart.privateName(extended_image_gesture_page_view, "_handleDragUpdate");
  var _handleDragEnd$ = dart.privateName(extended_image_gesture_page_view, "_handleDragEnd");
  var _handleDragCancel$ = dart.privateName(extended_image_gesture_page_view, "_handleDragCancel");
  var _disposeHold = dart.privateName(extended_image_gesture_page_view, "_disposeHold");
  var _disposeDrag = dart.privateName(extended_image_gesture_page_view, "_disposeDrag");
  const State_SingleTickerProviderStateMixin$36$ = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageView)) {};
  (State_SingleTickerProviderStateMixin$36$.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageView))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageView)));
  extended_image_gesture_page_view.ExtendedImageGesturePageViewState = class ExtendedImageGesturePageViewState extends State_SingleTickerProviderStateMixin$36$ {
    get extendedImageGestureState() {
      return this[extendedImageGestureState];
    }
    set extendedImageGestureState(value) {
      this[extendedImageGestureState] = value;
    }
    get position() {
      return this.pageController.position;
    }
    get pageController() {
      return this.widget.controller;
    }
    initState() {
      super.initState();
      this[_gestureAnimation] = new extended_image_gesture_utils.GestureAnimation.new(this, {offsetCallBack: dart.fn(value => {
          let t0, t0$;
          let gestureDetails = (t0 = this.extendedImageGestureState, t0 == null ? null : t0.gestureDetails);
          if (gestureDetails != null) {
            t0$ = this.extendedImageGestureState;
            t0$ == null ? null : t0$.gestureDetails = new extended_image_gesture_utils.GestureDetails.new({offset: value, totalScale: gestureDetails.totalScale, gestureDetails: gestureDetails});
          }
        }, T$.OffsetLToNull())});
      this[_initGestureRecognizers]();
    }
    [_initGestureRecognizers](opts) {
      let oldWidget = opts && 'oldWidget' in opts ? opts.oldWidget : null;
      if (oldWidget == null || oldWidget.scrollDirection != this.widget.scrollDirection || !dart.equals(oldWidget.physics.parent, this.widget.physics.parent)) {
        let canMove = true;
        if (this.widget.physics.parent != null) {
          canMove = this.widget.physics.parent.shouldAcceptUserOffset(extended_image_gesture_page_view._testPageMetrics);
        }
        if (dart.test(canMove)) {
          switch (this.widget.scrollDirection) {
            case C[206] || CT.C206:
            {
              this[_gestureRecognizers] = new (T$.LinkedMapOfTypeL$GestureRecognizerFactoryLOfGestureRecognizerL()).from([dart.wrapType(monodrag.VerticalDragGestureRecognizer), new (T$.GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizerL()).new(dart.fn(() => new monodrag.VerticalDragGestureRecognizer.new(), T$.VoidToVerticalDragGestureRecognizerL()), dart.fn(instance => {
                  let t1, t1$, t1$0, t0;
                  t0 = instance;
                  (() => {
                    t0.onDown = dart.bind(this, _handleDragDown);
                    t0.onStart = dart.bind(this, _handleDragStart$);
                    t0.onUpdate = dart.bind(this, _handleDragUpdate$);
                    t0.onEnd = dart.bind(this, _handleDragEnd$);
                    t0.onCancel = dart.bind(this, _handleDragCancel$);
                    t0.minFlingDistance = (t1 = this.widget.physics, t1 == null ? null : t1.minFlingDistance);
                    t0.minFlingVelocity = (t1$ = this.widget.physics, t1$ == null ? null : t1$.minFlingVelocity);
                    t0.maxFlingVelocity = (t1$0 = this.widget.physics, t1$0 == null ? null : t1$0.maxFlingVelocity);
                    return t0;
                  })();
                }, T$.VerticalDragGestureRecognizerLToNull()))]);
              break;
            }
            case C[201] || CT.C201:
            {
              this[_gestureRecognizers] = new (T$.LinkedMapOfTypeL$GestureRecognizerFactoryLOfGestureRecognizerL()).from([dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (T$.GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizerL()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new(), T$.VoidToHorizontalDragGestureRecognizerL()), dart.fn(instance => {
                  let t1, t1$, t1$0, t0;
                  t0 = instance;
                  (() => {
                    t0.onDown = dart.bind(this, _handleDragDown);
                    t0.onStart = dart.bind(this, _handleDragStart$);
                    t0.onUpdate = dart.bind(this, _handleDragUpdate$);
                    t0.onEnd = dart.bind(this, _handleDragEnd$);
                    t0.onCancel = dart.bind(this, _handleDragCancel$);
                    t0.minFlingDistance = (t1 = this.widget.physics, t1 == null ? null : t1.minFlingDistance);
                    t0.minFlingVelocity = (t1$ = this.widget.physics, t1$ == null ? null : t1$.minFlingVelocity);
                    t0.maxFlingVelocity = (t1$0 = this.widget.physics, t1$0 == null ? null : t1$0.maxFlingVelocity);
                    return t0;
                  })();
                }, T$.HorizontalDragGestureRecognizerLToNull()))]);
              break;
            }
          }
        }
      }
    }
    didUpdateWidget(oldWidget) {
      T$.ExtendedImageGesturePageViewL().as(oldWidget);
      this[_initGestureRecognizers]({oldWidget: oldWidget});
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      this[_gestureAnimation].dispose();
      super.dispose();
    }
    build(context) {
      let result = new page_view.PageView.custom({scrollDirection: this.widget.scrollDirection, reverse: this.widget.reverse, controller: this.widget.controller, childrenDelegate: this.widget.childrenDelegate, pageSnapping: this.widget.pageSnapping, physics: this.widget.physics, onPageChanged: this.widget.onPageChanged, key: this.widget.key, $creationLocationd_0dea112b090073317d4: C[207] || CT.C207});
      if (this.widget.physics.parent == null || dart.test(this.widget.physics.parent.shouldAcceptUserOffset(extended_image_gesture_page_view._testPageMetrics))) {
        result = new gesture_detector.RawGestureDetector.new({gestures: this[_gestureRecognizers], behavior: proxy_box.HitTestBehavior.opaque, child: result, $creationLocationd_0dea112b090073317d4: C[217] || CT.C217});
      }
      return result;
    }
    [_handleDragDown](details) {
      this[_gestureAnimation].stop();
      if (!(this[_drag] == null)) dart.assertFailed(null, I[7], 294, 12, "_drag == null");
      if (!(this[_hold] == null)) dart.assertFailed(null, I[7], 295, 12, "_hold == null");
      this[_hold] = this.position.hold(dart.bind(this, _disposeHold));
    }
    [_handleDragStart$](details) {
      if (!(this[_drag] == null)) dart.assertFailed(null, I[7], 303, 12, "_drag == null");
      this[_drag] = this.position.drag(details, dart.bind(this, _disposeDrag));
      if (!(this[_drag] != null)) dart.assertFailed(null, I[7], 305, 12, "_drag != null");
      if (!(this[_hold] == null)) dart.assertFailed(null, I[7], 306, 12, "_hold == null");
    }
    [_handleDragUpdate$](details) {
      let t0, t1, t0$, t1$, t0$0, t0$1, t0$2, t0$3;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, I[7], 311, 12, "_hold == null || _drag == null");
      let delta = details.delta;
      if (!dart.test((t0$ = this.widget, t1 = (t0 = this.extendedImageGestureState, t0 == null ? null : t0.gestureDetails), t0$.canScrollPage(t1)))) {
        return;
      }
      if (this.extendedImageGestureState != null) {
        let gestureDetails = this.extendedImageGestureState.gestureDetails;
        if (gestureDetails != null) {
          let currentPage = this.pageController.page[$round]();
          if ((dart.test(gestureDetails.movePage(delta)) || currentPage !== this.pageController.page) && dart.test((t0$0 = this.widget, t1$ = gestureDetails, t0$0.canMovePage(t1$)))) {
            t0$1 = this[_drag];
            t0$1 == null ? null : t0$1.update(details);
          } else {
            if (currentPage === this.pageController.page) {
              this.extendedImageGestureState.gestureDetails = new extended_image_gesture_utils.GestureDetails.new({offset: gestureDetails.offset['+'](delta['*'](this.extendedImageGestureState.imageGestureConfig.speed)), totalScale: gestureDetails.totalScale, gestureDetails: gestureDetails});
            }
          }
        } else {
          t0$2 = this[_drag];
          t0$2 == null ? null : t0$2.update(details);
        }
      } else {
        t0$3 = this[_drag];
        t0$3 == null ? null : t0$3.update(details);
      }
    }
    [_handleDragEnd$](details) {
      let t0, t1, t0$, t1$, t0$0;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, I[7], 365, 12, "_hold == null || _drag == null");
      if (!dart.test((t0$ = this.widget, t1 = (t0 = this.extendedImageGestureState, t0 == null ? null : t0.gestureDetails), t0$.canScrollPage(t1)))) {
        this[_drag].end(new drag_details.DragEndDetails.new({primaryVelocity: 0.0}));
        return;
      }
      let temp = details;
      if (this.extendedImageGestureState != null) {
        let gestureDetails = this.extendedImageGestureState.gestureDetails;
        let currentPage = this.pageController.page[$round]();
        let movePage = this.pageController.page !== currentPage;
        if (!dart.test((t0$0 = this.widget, t1$ = gestureDetails, t0$0.canMovePage(t1$)))) {
          temp = new drag_details.DragEndDetails.new({primaryVelocity: 0.0});
        }
        if (!movePage && gestureDetails != null && dart.notNull(gestureDetails.totalScale) > 1.0 && (dart.test(gestureDetails.computeHorizontalBoundary) || dart.test(gestureDetails.computeVerticalBoundary))) {
          temp = new drag_details.DragEndDetails.new({primaryVelocity: 0.0});
          let magnitude = details.velocity.pixelsPerSecond.distance;
          if (dart.notNull(extended_image_utils.doubleCompare(magnitude, 400)) >= 0) {
            let direction = details.velocity.pixelsPerSecond['/'](magnitude)['*'](this.extendedImageGestureState.imageGestureConfig.inertialSpeed);
            if (this.widget.scrollDirection == basic_types.Axis.horizontal) {
              direction = new ui.Offset.new(direction.dx, 0.0);
            } else {
              direction = new ui.Offset.new(0.0, direction.dy);
            }
            this[_gestureAnimation].animationOffset(gestureDetails.offset, gestureDetails.offset['+'](direction));
          }
        }
      }
      this[_drag].end(temp);
      if (!(this[_drag] == null)) dart.assertFailed(null, I[7], 414, 12, "_drag == null");
    }
    [_handleDragCancel$]() {
      let t0, t0$;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, I[7], 420, 12, "_hold == null || _drag == null");
      t0 = this[_hold];
      t0 == null ? null : t0.cancel();
      t0$ = this[_drag];
      t0$ == null ? null : t0$.cancel();
      if (!(this[_hold] == null)) dart.assertFailed(null, I[7], 423, 12, "_hold == null");
      if (!(this[_drag] == null)) dart.assertFailed(null, I[7], 424, 12, "_drag == null");
    }
    [_disposeHold]() {
      this[_hold] = null;
    }
    [_disposeDrag]() {
      this[_drag] = null;
    }
  };
  (extended_image_gesture_page_view.ExtendedImageGesturePageViewState.new = function() {
    this[_gestureRecognizers] = C[205] || CT.C205;
    this[_gestureAnimation] = null;
    this[extendedImageGestureState] = null;
    this[_drag] = null;
    this[_hold] = null;
    extended_image_gesture_page_view.ExtendedImageGesturePageViewState.__proto__.new.call(this);
    ;
  }).prototype = extended_image_gesture_page_view.ExtendedImageGesturePageViewState.prototype;
  dart.addTypeTests(extended_image_gesture_page_view.ExtendedImageGesturePageViewState);
  dart.addTypeCaches(extended_image_gesture_page_view.ExtendedImageGesturePageViewState);
  dart.setMethodSignature(extended_image_gesture_page_view.ExtendedImageGesturePageViewState, () => ({
    __proto__: dart.getMethods(extended_image_gesture_page_view.ExtendedImageGesturePageViewState.__proto__),
    [_initGestureRecognizers]: dart.fnType(dart.void, [], {oldWidget: dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageView)}, {}),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_handleDragDown]: dart.fnType(dart.void, [dart.legacy(drag_details.DragDownDetails)]),
    [_handleDragStart$]: dart.fnType(dart.void, [dart.legacy(drag_details.DragStartDetails)]),
    [_handleDragUpdate$]: dart.fnType(dart.void, [dart.legacy(drag_details.DragUpdateDetails)]),
    [_handleDragEnd$]: dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)]),
    [_handleDragCancel$]: dart.fnType(dart.void, []),
    [_disposeHold]: dart.fnType(dart.void, []),
    [_disposeDrag]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(extended_image_gesture_page_view.ExtendedImageGesturePageViewState, () => ({
    __proto__: dart.getGetters(extended_image_gesture_page_view.ExtendedImageGesturePageViewState.__proto__),
    position: dart.legacy(scroll_position.ScrollPosition),
    pageController: dart.legacy(page_view.PageController)
  }));
  dart.setLibraryUri(extended_image_gesture_page_view.ExtendedImageGesturePageViewState, I[8]);
  dart.setFieldSignature(extended_image_gesture_page_view.ExtendedImageGesturePageViewState, () => ({
    __proto__: dart.getFields(extended_image_gesture_page_view.ExtendedImageGesturePageViewState.__proto__),
    [_gestureRecognizers]: dart.fieldType(dart.legacy(core.Map$(dart.legacy(core.Type), dart.legacy(gesture_detector.GestureRecognizerFactory$(dart.legacy(recognizer.GestureRecognizer)))))),
    [_gestureAnimation]: dart.fieldType(dart.legacy(extended_image_gesture_utils.GestureAnimation)),
    extendedImageGestureState: dart.fieldType(dart.legacy(extended_image_gesture.ExtendedImageGestureState)),
    [_drag]: dart.fieldType(dart.legacy(drag.Drag)),
    [_hold]: dart.fieldType(dart.legacy(scroll_activity.ScrollHoldController))
  }));
  extended_image_gesture_page_view._defaultCanMovePage = function _defaultCanMovePage(gestureDetails) {
    return true;
  };
  extended_image_gesture_page_view._defaultCanScrollPage = function _defaultCanScrollPage(gestureDetails) {
    return true;
  };
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  dart.defineLazy(extended_image_gesture_page_view, {
    /*extended_image_gesture_page_view._defaultPageController*/get _defaultPageController() {
      return new page_view.PageController.new();
    },
    /*extended_image_gesture_page_view._defaultScrollPhysics*/get _defaultScrollPhysics() {
      return C[222] || CT.C222;
    },
    /*extended_image_gesture_page_view._testPageMetrics*/get _testPageMetrics() {
      return new page_view.PageMetrics.new({axisDirection: basic_types.AxisDirection.down, minScrollExtent: 0.0, maxScrollExtent: 10.0, pixels: 5.0, viewportDimension: 10.0, viewportFraction: 1.0});
    }
  }, true);
  var child$1 = dart.privateName(extended_image_slide_page_handler, "ExtendedImageSlidePageHandler.child");
  var extendedImageSlidePageState$ = dart.privateName(extended_image_slide_page_handler, "ExtendedImageSlidePageHandler.extendedImageSlidePageState");
  var heroBuilderForSlidingPage$ = dart.privateName(extended_image_slide_page_handler, "ExtendedImageSlidePageHandler.heroBuilderForSlidingPage");
  extended_image_slide_page_handler.ExtendedImageSlidePageHandler = class ExtendedImageSlidePageHandler extends framework.StatefulWidget {
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    get extendedImageSlidePageState() {
      return this[extendedImageSlidePageState$];
    }
    set extendedImageSlidePageState(value) {
      super.extendedImageSlidePageState = value;
    }
    get heroBuilderForSlidingPage() {
      return this[heroBuilderForSlidingPage$];
    }
    set heroBuilderForSlidingPage(value) {
      super.heroBuilderForSlidingPage = value;
    }
    createState() {
      return new extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState.new();
    }
  };
  (extended_image_slide_page_handler.ExtendedImageSlidePageHandler.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let extendedImageSlidePageState = opts && 'extendedImageSlidePageState' in opts ? opts.extendedImageSlidePageState : null;
    let heroBuilderForSlidingPage = opts && 'heroBuilderForSlidingPage' in opts ? opts.heroBuilderForSlidingPage : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$1] = child;
    this[extendedImageSlidePageState$] = extendedImageSlidePageState;
    this[heroBuilderForSlidingPage$] = heroBuilderForSlidingPage;
    extended_image_slide_page_handler.ExtendedImageSlidePageHandler.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_slide_page_handler.ExtendedImageSlidePageHandler.prototype;
  dart.addTypeTests(extended_image_slide_page_handler.ExtendedImageSlidePageHandler);
  dart.addTypeCaches(extended_image_slide_page_handler.ExtendedImageSlidePageHandler);
  dart.setMethodSignature(extended_image_slide_page_handler.ExtendedImageSlidePageHandler, () => ({
    __proto__: dart.getMethods(extended_image_slide_page_handler.ExtendedImageSlidePageHandler.__proto__),
    createState: dart.fnType(dart.legacy(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState), [])
  }));
  dart.setLibraryUri(extended_image_slide_page_handler.ExtendedImageSlidePageHandler, I[9]);
  dart.setFieldSignature(extended_image_slide_page_handler.ExtendedImageSlidePageHandler, () => ({
    __proto__: dart.getFields(extended_image_slide_page_handler.ExtendedImageSlidePageHandler.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    extendedImageSlidePageState: dart.finalFieldType(dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)),
    heroBuilderForSlidingPage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.Widget)])))
  }));
  var _startingOffset = dart.privateName(extended_image_slide_page_handler, "_startingOffset");
  var _extendedImageSlidePageState = dart.privateName(extended_image_slide_page_handler, "_extendedImageSlidePageState");
  var _updateSlidePagePreOffset = dart.privateName(extended_image_slide_page_handler, "_updateSlidePagePreOffset");
  var _handleScaleStart = dart.privateName(extended_image_slide_page_handler, "_handleScaleStart");
  var _handleScaleUpdate = dart.privateName(extended_image_slide_page_handler, "_handleScaleUpdate");
  var _handleScaleEnd = dart.privateName(extended_image_slide_page_handler, "_handleScaleEnd");
  extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState = class ExtendedImageSlidePageHandlerState extends framework.State$(dart.legacy(extended_image_slide_page_handler.ExtendedImageSlidePageHandler)) {
    didChangeDependencies() {
      let t0;
      this[_extendedImageSlidePageState] = (t0 = this.widget.extendedImageSlidePageState, t0 == null ? this.context.findAncestorStateOfType(T$.ExtendedImageSlidePageStateL()) : t0);
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      let t0;
      T$.ExtendedImageSlidePageHandlerL().as(oldWidget);
      this[_extendedImageSlidePageState] = (t0 = this.widget.extendedImageSlidePageState, t0 == null ? this.context.findAncestorStateOfType(T$.ExtendedImageSlidePageStateL()) : t0);
      super.didUpdateWidget(oldWidget);
    }
    build(context) {
      let t0, t0$;
      let result = new gesture_detector.GestureDetector.new({onScaleStart: dart.bind(this, _handleScaleStart), onScaleUpdate: dart.bind(this, _handleScaleUpdate), onScaleEnd: dart.bind(this, _handleScaleEnd), child: this.widget.child, behavior: proxy_box.HitTestBehavior.translucent, $creationLocationd_0dea112b090073317d4: C[223] || CT.C223});
      if (this[_extendedImageSlidePageState] != null) {
        result = (t0$ = (t0 = this.widget.heroBuilderForSlidingPage, t0 == null ? null : t0(result)), t0$ == null ? result : t0$);
      }
      if (this[_extendedImageSlidePageState] != null && this[_extendedImageSlidePageState].widget.slideType == extended_image_slide_page.SlideType.onlyImage) {
        result = new basic.Transform.translate({offset: this[_extendedImageSlidePageState].offset, child: new basic.Transform.scale({scale: this[_extendedImageSlidePageState].scale, child: result, $creationLocationd_0dea112b090073317d4: C[230] || CT.C230}), $creationLocationd_0dea112b090073317d4: C[234] || CT.C234});
      }
      return result;
    }
    [_handleScaleStart](details) {
      this[_startingOffset] = details.focalPoint;
    }
    [_handleScaleUpdate](details) {
      if (this[_extendedImageSlidePageState] != null && details.scale === 1.0) {
        let delta = details.focalPoint['-'](this[_startingOffset]).distance;
        if (dart.notNull(extended_image_utils.doubleCompare(delta, 5)) > 0) {
          this[_updateSlidePagePreOffset] == null ? this[_updateSlidePagePreOffset] = details.focalPoint : null;
          this[_extendedImageSlidePageState].slide(details.focalPoint['-'](this[_updateSlidePagePreOffset]), {extendedImageSlidePageHandlerState: this});
          this[_updateSlidePagePreOffset] = details.focalPoint;
        }
      }
    }
    [_handleScaleEnd](details) {
      if (this[_extendedImageSlidePageState] != null && dart.test(this[_extendedImageSlidePageState].isSliding)) {
        this[_updateSlidePagePreOffset] = null;
        this[_extendedImageSlidePageState].endSlide(details);
        return;
      }
    }
    slide() {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
        }, T$.VoidToNull()));
      }
    }
  };
  (extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState.new = function() {
    this[_startingOffset] = null;
    this[_extendedImageSlidePageState] = null;
    this[_updateSlidePagePreOffset] = null;
    extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState.__proto__.new.call(this);
    ;
  }).prototype = extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState.prototype;
  dart.addTypeTests(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState);
  dart.addTypeCaches(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState);
  dart.setMethodSignature(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState, () => ({
    __proto__: dart.getMethods(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_handleScaleStart]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleStartDetails)]),
    [_handleScaleUpdate]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleUpdateDetails)]),
    [_handleScaleEnd]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleEndDetails)]),
    slide: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState, I[9]);
  dart.setFieldSignature(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState, () => ({
    __proto__: dart.getFields(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState.__proto__),
    [_startingOffset]: dart.fieldType(dart.legacy(ui.Offset)),
    [_extendedImageSlidePageState]: dart.fieldType(dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)),
    [_updateSlidePagePreOffset]: dart.fieldType(dart.legacy(ui.Offset))
  }));
  var _name$2 = dart.privateName(extended_image_slide_page, "_name");
  extended_image_slide_page.SlideAxis = class SlideAxis extends core.Object {
    toString() {
      return this[_name$2];
    }
  };
  (extended_image_slide_page.SlideAxis.new = function(index, _name) {
    this.index = index;
    this[_name$2] = _name;
    ;
  }).prototype = extended_image_slide_page.SlideAxis.prototype;
  dart.addTypeTests(extended_image_slide_page.SlideAxis);
  dart.addTypeCaches(extended_image_slide_page.SlideAxis);
  dart.setMethodSignature(extended_image_slide_page.SlideAxis, () => ({
    __proto__: dart.getMethods(extended_image_slide_page.SlideAxis.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_slide_page.SlideAxis, I[10]);
  dart.setFieldSignature(extended_image_slide_page.SlideAxis, () => ({
    __proto__: dart.getFields(extended_image_slide_page.SlideAxis.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$2]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_slide_page.SlideAxis, ['toString']);
  extended_image_slide_page.SlideAxis.both = C[238] || CT.C238;
  extended_image_slide_page.SlideAxis.horizontal = C[239] || CT.C239;
  extended_image_slide_page.SlideAxis.vertical = C[240] || CT.C240;
  extended_image_slide_page.SlideAxis.values = C[241] || CT.C241;
  extended_image_slide_page.SlideType = class SlideType extends core.Object {
    toString() {
      return this[_name$2];
    }
  };
  (extended_image_slide_page.SlideType.new = function(index, _name) {
    this.index = index;
    this[_name$2] = _name;
    ;
  }).prototype = extended_image_slide_page.SlideType.prototype;
  dart.addTypeTests(extended_image_slide_page.SlideType);
  dart.addTypeCaches(extended_image_slide_page.SlideType);
  dart.setMethodSignature(extended_image_slide_page.SlideType, () => ({
    __proto__: dart.getMethods(extended_image_slide_page.SlideType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_slide_page.SlideType, I[10]);
  dart.setFieldSignature(extended_image_slide_page.SlideType, () => ({
    __proto__: dart.getFields(extended_image_slide_page.SlideType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$2]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_slide_page.SlideType, ['toString']);
  extended_image_slide_page.SlideType.wholePage = C[242] || CT.C242;
  extended_image_slide_page.SlideType.onlyImage = C[243] || CT.C243;
  extended_image_slide_page.SlideType.values = C[244] || CT.C244;
  var child$2 = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.child");
  var slidePageBackgroundHandler$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.slidePageBackgroundHandler");
  var slideScaleHandler$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.slideScaleHandler");
  var slideOffsetHandler$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.slideOffsetHandler");
  var slideEndHandler$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.slideEndHandler");
  var slideAxis$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.slideAxis");
  var resetPageDuration$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.resetPageDuration");
  var slideType$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.slideType");
  var onSlidingPage$ = dart.privateName(extended_image_slide_page, "ExtendedImageSlidePage.onSlidingPage");
  extended_image_slide_page.ExtendedImageSlidePage = class ExtendedImageSlidePage extends framework.StatefulWidget {
    get child() {
      return this[child$2];
    }
    set child(value) {
      super.child = value;
    }
    get slidePageBackgroundHandler() {
      return this[slidePageBackgroundHandler$];
    }
    set slidePageBackgroundHandler(value) {
      super.slidePageBackgroundHandler = value;
    }
    get slideScaleHandler() {
      return this[slideScaleHandler$];
    }
    set slideScaleHandler(value) {
      super.slideScaleHandler = value;
    }
    get slideOffsetHandler() {
      return this[slideOffsetHandler$];
    }
    set slideOffsetHandler(value) {
      super.slideOffsetHandler = value;
    }
    get slideEndHandler() {
      return this[slideEndHandler$];
    }
    set slideEndHandler(value) {
      super.slideEndHandler = value;
    }
    get slideAxis() {
      return this[slideAxis$];
    }
    set slideAxis(value) {
      super.slideAxis = value;
    }
    get resetPageDuration() {
      return this[resetPageDuration$];
    }
    set resetPageDuration(value) {
      super.resetPageDuration = value;
    }
    get slideType() {
      return this[slideType$];
    }
    set slideType(value) {
      super.slideType = value;
    }
    get onSlidingPage() {
      return this[onSlidingPage$];
    }
    set onSlidingPage(value) {
      super.onSlidingPage = value;
    }
    createState() {
      return new extended_image_slide_page.ExtendedImageSlidePageState.new();
    }
  };
  (extended_image_slide_page.ExtendedImageSlidePage.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let slidePageBackgroundHandler = opts && 'slidePageBackgroundHandler' in opts ? opts.slidePageBackgroundHandler : null;
    let slideScaleHandler = opts && 'slideScaleHandler' in opts ? opts.slideScaleHandler : null;
    let slideOffsetHandler = opts && 'slideOffsetHandler' in opts ? opts.slideOffsetHandler : null;
    let slideEndHandler = opts && 'slideEndHandler' in opts ? opts.slideEndHandler : null;
    let slideAxis = opts && 'slideAxis' in opts ? opts.slideAxis : C[238] || CT.C238;
    let resetPageDuration = opts && 'resetPageDuration' in opts ? opts.resetPageDuration : C[245] || CT.C245;
    let slideType = opts && 'slideType' in opts ? opts.slideType : C[243] || CT.C243;
    let onSlidingPage = opts && 'onSlidingPage' in opts ? opts.onSlidingPage : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$2] = child;
    this[slidePageBackgroundHandler$] = slidePageBackgroundHandler;
    this[slideScaleHandler$] = slideScaleHandler;
    this[slideOffsetHandler$] = slideOffsetHandler;
    this[slideEndHandler$] = slideEndHandler;
    this[slideAxis$] = slideAxis;
    this[resetPageDuration$] = resetPageDuration;
    this[slideType$] = slideType;
    this[onSlidingPage$] = onSlidingPage;
    extended_image_slide_page.ExtendedImageSlidePage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_slide_page.ExtendedImageSlidePage.prototype;
  dart.addTypeTests(extended_image_slide_page.ExtendedImageSlidePage);
  dart.addTypeCaches(extended_image_slide_page.ExtendedImageSlidePage);
  dart.setMethodSignature(extended_image_slide_page.ExtendedImageSlidePage, () => ({
    __proto__: dart.getMethods(extended_image_slide_page.ExtendedImageSlidePage.__proto__),
    createState: dart.fnType(dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState), [])
  }));
  dart.setLibraryUri(extended_image_slide_page.ExtendedImageSlidePage, I[10]);
  dart.setFieldSignature(extended_image_slide_page.ExtendedImageSlidePage, () => ({
    __proto__: dart.getFields(extended_image_slide_page.ExtendedImageSlidePage.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    slidePageBackgroundHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(ui.Color), [dart.legacy(ui.Offset), dart.legacy(ui.Size)]))),
    slideScaleHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.double), [dart.legacy(ui.Offset)], {state: dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)}, {}))),
    slideOffsetHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(ui.Offset), [dart.legacy(ui.Offset)], {state: dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)}, {}))),
    slideEndHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Offset)], {details: dart.legacy(scale$.ScaleEndDetails), state: dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)}, {}))),
    slideAxis: dart.finalFieldType(dart.legacy(extended_image_slide_page.SlideAxis)),
    resetPageDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    slideType: dart.finalFieldType(dart.legacy(extended_image_slide_page.SlideType)),
    onSlidingPage: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)])))
  }));
  var _isSliding = dart.privateName(extended_image_slide_page, "_isSliding");
  var _pageSize = dart.privateName(extended_image_slide_page, "_pageSize");
  var _backAnimationController = dart.privateName(extended_image_slide_page, "_backAnimationController");
  var _backOffsetAnimation = dart.privateName(extended_image_slide_page, "_backOffsetAnimation");
  var _backScaleAnimation = dart.privateName(extended_image_slide_page, "_backScaleAnimation");
  var _offset = dart.privateName(extended_image_slide_page, "_offset");
  var _scale$ = dart.privateName(extended_image_slide_page, "_scale");
  var _popping = dart.privateName(extended_image_slide_page, "_popping");
  var _extendedImageGestureState = dart.privateName(extended_image_slide_page, "_extendedImageGestureState");
  var _extendedImageSlidePageHandlerState = dart.privateName(extended_image_slide_page, "_extendedImageSlidePageHandlerState");
  var _backAnimation = dart.privateName(extended_image_slide_page, "_backAnimation");
  const State_SingleTickerProviderStateMixin$36$0 = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(extended_image_slide_page.ExtendedImageSlidePage)) {};
  (State_SingleTickerProviderStateMixin$36$0.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(extended_image_slide_page.ExtendedImageSlidePage))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$0, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(extended_image_slide_page.ExtendedImageSlidePage)));
  extended_image_slide_page.ExtendedImageSlidePageState = class ExtendedImageSlidePageState extends State_SingleTickerProviderStateMixin$36$0 {
    get isSliding() {
      return this[_isSliding];
    }
    get pageSize() {
      let t0;
      t0 = this[_pageSize];
      return t0 == null ? this.context.size : t0;
    }
    get backAnimationController() {
      return this[_backAnimationController];
    }
    get backOffsetAnimation() {
      return this[_backOffsetAnimation];
    }
    get backScaleAnimation() {
      return this[_backScaleAnimation];
    }
    get offset() {
      return dart.test(this[_backAnimationController].isAnimating) ? this[_backOffsetAnimation].value : this[_offset];
    }
    get scale() {
      return dart.test(this[_backAnimationController].isAnimating) ? this.backScaleAnimation.value : this[_scale$];
    }
    initState() {
      super.initState();
      this[_backAnimationController] = new animation_controller.AnimationController.new({vsync: this, duration: this.widget.resetPageDuration});
      this[_backAnimationController].addListener(dart.bind(this, _backAnimation));
    }
    didUpdateWidget(oldWidget) {
      T$.ExtendedImageSlidePageL().as(oldWidget);
      if (!dart.equals(oldWidget.resetPageDuration, this.widget.resetPageDuration)) {
        this[_backAnimationController].stop();
        this[_backAnimationController].dispose();
        this[_backAnimationController] = new animation_controller.AnimationController.new({vsync: this, duration: this.widget.resetPageDuration});
      }
      super.didUpdateWidget(oldWidget);
    }
    get imageGestureState() {
      return this[_extendedImageGestureState];
    }
    [_backAnimation]() {
      let t0, t0$, t0$0;
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          if (dart.test(this[_backAnimationController].isCompleted)) {
            this[_isSliding] = false;
          }
        }, T$.VoidToNull()));
      }
      if (this.widget.slideType == extended_image_slide_page.SlideType.onlyImage) {
        t0 = this[_extendedImageGestureState];
        t0 == null ? null : t0.slide();
        t0$ = this[_extendedImageSlidePageHandlerState];
        t0$ == null ? null : t0$.slide();
      }
      t0$0 = this.widget.onSlidingPage;
      t0$0 == null ? null : t0$0(this);
    }
    dispose() {
      super.dispose();
      this[_backAnimationController].removeListener(dart.bind(this, _backAnimation));
      this[_backAnimationController].dispose();
    }
    slide(value, opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4;
      let extendedImageGestureState = opts && 'extendedImageGestureState' in opts ? opts.extendedImageGestureState : null;
      let extendedImageSlidePageHandlerState = opts && 'extendedImageSlidePageHandlerState' in opts ? opts.extendedImageSlidePageHandlerState : null;
      if (dart.test(this[_backAnimationController].isAnimating)) {
        return;
      }
      this[_extendedImageGestureState] = extendedImageGestureState;
      this[_extendedImageSlidePageHandlerState] = extendedImageSlidePageHandlerState;
      if (this.widget.slideAxis == extended_image_slide_page.SlideAxis.horizontal) {
        this[_offset] = this[_offset]['+'](new ui.Offset.new(value.dx, 0.0));
      } else if (this.widget.slideAxis == extended_image_slide_page.SlideAxis.vertical) {
        this[_offset] = this[_offset]['+'](new ui.Offset.new(0.0, value.dy));
      } else {
        this[_offset] = this[_offset]['+'](value);
      }
      this[_offset] = (t0$ = (t0 = this.widget.slideOffsetHandler, t0 == null ? null : t0(this[_offset], {state: this})), t0$ == null ? this[_offset] : t0$);
      this[_scale$] = (t0$1 = (t0$0 = this.widget.slideScaleHandler, t0$0 == null ? null : t0$0(this[_offset], {state: this})), t0$1 == null ? extended_image_gesture_utils.defaultSlideScaleHandler({offset: this[_offset], pageSize: this.pageSize, pageGestureAxis: this.widget.slideAxis}) : t0$1);
      {
        this[_isSliding] = true;
        if (this.widget.slideType == extended_image_slide_page.SlideType.onlyImage) {
          t0$2 = this[_extendedImageGestureState];
          t0$2 == null ? null : t0$2.slide();
          t0$3 = this[_extendedImageSlidePageHandlerState];
          t0$3 == null ? null : t0$3.slide();
        }
        if (dart.test(this.mounted)) {
          this.setState(dart.fn(() => {
          }, T$.VoidToNull()));
        }
        t0$4 = this.widget.onSlidingPage;
        t0$4 == null ? null : t0$4(this);
      }
    }
    endSlide(details) {
      let t0, t0$;
      if (dart.test(this.mounted) && dart.test(this[_isSliding])) {
        let popPage = (t0$ = (t0 = this.widget.slideEndHandler, t0 == null ? null : t0(this[_offset], {state: this, details: details})), t0$ == null ? extended_image_gesture_utils.defaultSlideEndHandler({offset: this[_offset], pageSize: this[_pageSize], pageGestureAxis: this.widget.slideAxis}) : t0$);
        if (dart.test(popPage)) {
          this.setState(dart.fn(() => {
            this[_popping] = true;
            this[_isSliding] = false;
          }, T$.VoidToNull()));
          navigator.Navigator.pop(T$.ObjectL(), this.context);
        } else {
          if (!dart.equals(this[_offset], ui.Offset.zero) || this[_scale$] !== 1.0) {
            this[_backOffsetAnimation] = this[_backAnimationController].drive(T$.OffsetL(), new (T$.TweenOfOffsetL()).new({begin: this[_offset], end: ui.Offset.zero}));
            this[_backScaleAnimation] = this[_backAnimationController].drive(T$.doubleL(), new (T$.TweenOfdoubleL()).new({begin: this[_scale$], end: 1.0}));
            this[_offset] = ui.Offset.zero;
            this[_scale$] = 1.0;
            this[_backAnimationController].reset();
            this[_backAnimationController].forward();
          } else {
            this.setState(dart.fn(() => {
              this[_isSliding] = false;
            }, T$.VoidToNull()));
          }
        }
      }
    }
    build(context) {
      let t0, t0$;
      this[_pageSize] = media_query.MediaQuery.of(context).size;
      let pageColor = (t0$ = (t0 = this.widget.slidePageBackgroundHandler, t0 == null ? null : t0(this.offset, this.pageSize)), t0$ == null ? extended_image_gesture_utils.defaultSlidePageBackgroundHandler({offset: this.offset, pageSize: this.pageSize, color: theme$.Theme.of(context).dialogBackgroundColor, pageGestureAxis: this.widget.slideAxis}) : t0$);
      let result = this.widget.child;
      if (this.widget.slideType == extended_image_slide_page.SlideType.wholePage) {
        result = new basic.Transform.translate({offset: this.offset, child: new basic.Transform.scale({scale: this.scale, child: result, $creationLocationd_0dea112b090073317d4: C[246] || CT.C246}), $creationLocationd_0dea112b090073317d4: C[250] || CT.C250});
      }
      result = new container.Container.new({color: dart.test(this[_popping]) ? colors.Colors.transparent : pageColor, child: result, $creationLocationd_0dea112b090073317d4: C[254] || CT.C254});
      return result;
    }
    popPage() {
      this.setState(dart.fn(() => {
        this[_popping] = true;
      }, T$.VoidToNull()));
    }
  };
  (extended_image_slide_page.ExtendedImageSlidePageState.new = function() {
    this[_isSliding] = false;
    this[_pageSize] = null;
    this[_backAnimationController] = null;
    this[_backOffsetAnimation] = null;
    this[_backScaleAnimation] = null;
    this[_offset] = ui.Offset.zero;
    this[_scale$] = 1.0;
    this[_popping] = false;
    this[_extendedImageGestureState] = null;
    this[_extendedImageSlidePageHandlerState] = null;
    extended_image_slide_page.ExtendedImageSlidePageState.__proto__.new.call(this);
    ;
  }).prototype = extended_image_slide_page.ExtendedImageSlidePageState.prototype;
  dart.addTypeTests(extended_image_slide_page.ExtendedImageSlidePageState);
  dart.addTypeCaches(extended_image_slide_page.ExtendedImageSlidePageState);
  dart.setMethodSignature(extended_image_slide_page.ExtendedImageSlidePageState, () => ({
    __proto__: dart.getMethods(extended_image_slide_page.ExtendedImageSlidePageState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    [_backAnimation]: dart.fnType(dart.void, []),
    slide: dart.fnType(dart.void, [dart.legacy(ui.Offset)], {extendedImageGestureState: dart.legacy(extended_image_gesture.ExtendedImageGestureState), extendedImageSlidePageHandlerState: dart.legacy(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState)}, {}),
    endSlide: dart.fnType(dart.void, [dart.legacy(scale$.ScaleEndDetails)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    popPage: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(extended_image_slide_page.ExtendedImageSlidePageState, () => ({
    __proto__: dart.getGetters(extended_image_slide_page.ExtendedImageSlidePageState.__proto__),
    isSliding: dart.legacy(core.bool),
    pageSize: dart.legacy(ui.Size),
    backAnimationController: dart.legacy(animation_controller.AnimationController),
    backOffsetAnimation: dart.legacy(animation.Animation$(dart.legacy(ui.Offset))),
    backScaleAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))),
    offset: dart.legacy(ui.Offset),
    scale: dart.legacy(core.double),
    imageGestureState: dart.legacy(extended_image_gesture.ExtendedImageGestureState)
  }));
  dart.setLibraryUri(extended_image_slide_page.ExtendedImageSlidePageState, I[10]);
  dart.setFieldSignature(extended_image_slide_page.ExtendedImageSlidePageState, () => ({
    __proto__: dart.getFields(extended_image_slide_page.ExtendedImageSlidePageState.__proto__),
    [_isSliding]: dart.fieldType(dart.legacy(core.bool)),
    [_pageSize]: dart.fieldType(dart.legacy(ui.Size)),
    [_backAnimationController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_backOffsetAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(ui.Offset)))),
    [_backScaleAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_offset]: dart.fieldType(dart.legacy(ui.Offset)),
    [_scale$]: dart.fieldType(dart.legacy(core.double)),
    [_popping]: dart.fieldType(dart.legacy(core.bool)),
    [_extendedImageGestureState]: dart.fieldType(dart.legacy(extended_image_gesture.ExtendedImageGestureState)),
    [_extendedImageSlidePageHandlerState]: dart.fieldType(dart.legacy(extended_image_slide_page_handler.ExtendedImageSlidePageHandlerState))
  }));
  var totalScale = dart.privateName(extended_image_editor_utils, "EditActionDetails.totalScale");
  var preTotalScale = dart.privateName(extended_image_editor_utils, "EditActionDetails.preTotalScale");
  var delta = dart.privateName(extended_image_editor_utils, "EditActionDetails.delta");
  var screenFocalPoint = dart.privateName(extended_image_editor_utils, "EditActionDetails.screenFocalPoint");
  var cropRectPadding = dart.privateName(extended_image_editor_utils, "EditActionDetails.cropRectPadding");
  var cropRect = dart.privateName(extended_image_editor_utils, "EditActionDetails.cropRect");
  var originalAspectRatio = dart.privateName(extended_image_editor_utils, "EditActionDetails.originalAspectRatio");
  var _rotateRadian = dart.privateName(extended_image_editor_utils, "_rotateRadian");
  var _flipX = dart.privateName(extended_image_editor_utils, "_flipX");
  var _flipY = dart.privateName(extended_image_editor_utils, "_flipY");
  var _computeHorizontalBoundary = dart.privateName(extended_image_editor_utils, "_computeHorizontalBoundary");
  var _computeVerticalBoundary = dart.privateName(extended_image_editor_utils, "_computeVerticalBoundary");
  var _layoutRect = dart.privateName(extended_image_editor_utils, "_layoutRect");
  var _screenDestinationRect = dart.privateName(extended_image_editor_utils, "_screenDestinationRect");
  var _rawDestinationRect = dart.privateName(extended_image_editor_utils, "_rawDestinationRect");
  var _reachCropRectEdge = dart.privateName(extended_image_editor_utils, "_reachCropRectEdge");
  var _cropAspectRatio = dart.privateName(extended_image_editor_utils, "_cropAspectRatio");
  extended_image_editor_utils.EditActionDetails = class EditActionDetails extends core.Object {
    get totalScale() {
      return this[totalScale];
    }
    set totalScale(value) {
      this[totalScale] = value;
    }
    get preTotalScale() {
      return this[preTotalScale];
    }
    set preTotalScale(value) {
      this[preTotalScale] = value;
    }
    get delta() {
      return this[delta];
    }
    set delta(value) {
      this[delta] = value;
    }
    get screenFocalPoint() {
      return this[screenFocalPoint];
    }
    set screenFocalPoint(value) {
      this[screenFocalPoint] = value;
    }
    get cropRectPadding() {
      return this[cropRectPadding];
    }
    set cropRectPadding(value) {
      this[cropRectPadding] = value;
    }
    get cropRect() {
      return this[cropRect];
    }
    set cropRect(value) {
      this[cropRect] = value;
    }
    get originalAspectRatio() {
      return this[originalAspectRatio];
    }
    set originalAspectRatio(value) {
      this[originalAspectRatio] = value;
    }
    get cropAspectRatio() {
      if (this[_cropAspectRatio] != null) {
        return dart.test(this.isHalfPi) ? 1.0 / dart.notNull(this[_cropAspectRatio]) : this[_cropAspectRatio];
      }
      return null;
    }
    set cropAspectRatio(value) {
      this[_cropAspectRatio] = value;
    }
    get screenDestinationRect() {
      return this[_screenDestinationRect];
    }
    setScreenDestinationRect(value) {
      this[_screenDestinationRect] = value;
    }
    get flipX() {
      return this[_flipX];
    }
    get flipY() {
      return this[_flipY];
    }
    get rotateRadian() {
      return this[_rotateRadian];
    }
    get hasRotateAngle() {
      return !dart.test(this.isTwoPi);
    }
    get hasEditAction() {
      return dart.test(this.hasRotateAngle) || dart.test(this[_flipX]) || dart.test(this[_flipY]);
    }
    get needCrop() {
      return !dart.equals(this.screenCropRect, this.screenDestinationRect);
    }
    get rotateAngle() {
      return (dart.notNull(this.rotateRadian) / (3.141592653589793 / 2))[$truncate]() * 90.0;
    }
    get needFlip() {
      return dart.test(this[_flipX]) || dart.test(this[_flipY]);
    }
    get isHalfPi() {
      return this[_rotateRadian][$modulo](3.141592653589793) !== 0;
    }
    get isPi() {
      return !dart.test(this.isHalfPi) && !dart.test(this.isTwoPi);
    }
    get isTwoPi() {
      return this[_rotateRadian][$modulo](2 * 3.141592653589793) === 0;
    }
    get layerDestinationRect() {
      let t0;
      t0 = this.screenDestinationRect;
      return t0 == null ? null : t0.shift(this.layoutTopLeft._negate());
    }
    get layoutTopLeft() {
      let t0;
      t0 = this[_layoutRect];
      return t0 == null ? null : t0.topLeft;
    }
    get rawDestinationRect() {
      return this[_rawDestinationRect];
    }
    get screenCropRect() {
      let t0;
      t0 = this.cropRect;
      return t0 == null ? null : t0.shift(this.layoutTopLeft);
    }
    get reachCropRectEdge() {
      return this[_reachCropRectEdge];
    }
    rotate(angle, layoutRect, fit) {
      this[_rotateRadian] = dart.notNull(this[_rotateRadian]) + dart.notNull(angle);
      this[_rotateRadian] = this[_rotateRadian][$modulo](2 * 3.141592653589793);
      if (dart.test(this[_flipX]) && dart.test(this[_flipY]) && dart.test(this.isPi)) {
        this[_flipX] = this[_flipY] = false;
        this[_rotateRadian] = 0.0;
      }
      let newCropRect = extended_image_editor_utils.getDestinationRect({rect: layoutRect, inputSize: new ui.Size.new(this.cropRect.height, this.cropRect.width), fit: fit});
      let scale = dart.notNull(newCropRect.width) / dart.notNull(this.cropRect.height);
      let newScreenDestinationRect = extended_image_editor_utils.rotateRect(this.screenDestinationRect, this.screenCropRect.center, angle);
      let topLeft = this.screenCropRect.center['-'](this.screenCropRect.center['-'](newScreenDestinationRect.topLeft)['*'](scale));
      let bottomRight = this.screenCropRect.center['+'](this.screenCropRect.center['-'](newScreenDestinationRect.bottomRight)._negate()['*'](scale));
      newScreenDestinationRect = new ui.Rect.fromPoints(topLeft, bottomRight);
      this.cropRect = newCropRect;
      this[_screenDestinationRect] = newScreenDestinationRect;
      this.totalScale = dart.notNull(this.totalScale) * scale;
      this.preTotalScale = this.totalScale;
    }
    flip() {
      let t0;
      let flipOrigin = (t0 = this.screenCropRect, t0 == null ? null : t0.center);
      if (dart.test(this.isHalfPi)) {
        this[_flipX] = !dart.test(this[_flipX]);
      } else {
        this[_flipY] = !dart.test(this[_flipY]);
      }
      this[_screenDestinationRect] = new ui.Rect.fromLTRB(2 * dart.notNull(flipOrigin.dx) - dart.notNull(this.screenDestinationRect.right), this.screenDestinationRect.top, 2 * dart.notNull(flipOrigin.dx) - dart.notNull(this.screenDestinationRect.left), this.screenDestinationRect.bottom);
      if (dart.test(this[_flipX]) && dart.test(this[_flipY]) && dart.test(this.isPi)) {
        this[_flipX] = this[_flipY] = false;
        this[_rotateRadian] = 0.0;
      }
    }
    paintRect(rect) {
      let t0;
      if (!dart.test(this.hasEditAction)) {
        return rect;
      }
      let flipOrigin = (t0 = this.screenCropRect, t0 == null ? null : t0.center);
      if (dart.test(this.hasRotateAngle)) {
        rect = extended_image_editor_utils.rotateRect(rect, flipOrigin, -dart.notNull(this[_rotateRadian]));
      }
      if (flipOrigin != null) {
        if (dart.test(this.flipY)) {
          rect = new ui.Rect.fromLTRB(2 * dart.notNull(flipOrigin.dx) - dart.notNull(rect.right), rect.top, 2 * dart.notNull(flipOrigin.dx) - dart.notNull(rect.left), rect.bottom);
        }
        if (dart.test(this.flipX)) {
          rect = new ui.Rect.fromLTRB(rect.left, 2 * dart.notNull(flipOrigin.dy) - dart.notNull(rect.bottom), rect.right, 2 * dart.notNull(flipOrigin.dy) - dart.notNull(rect.top));
        }
      }
      return rect;
    }
    initRect(layoutRect, destinationRect) {
      if (!dart.equals(this[_layoutRect], layoutRect)) {
        this[_layoutRect] = layoutRect;
        this[_screenDestinationRect] = null;
      }
      if (!dart.equals(this[_rawDestinationRect], destinationRect)) {
        this[_rawDestinationRect] = destinationRect;
        this[_screenDestinationRect] = null;
      }
    }
    getFinalDestinationRect() {
      let t0;
      this[_reachCropRectEdge] = false;
      if (this.screenDestinationRect != null) {
        let scaleDelta = dart.notNull(this.totalScale) / dart.notNull(this.preTotalScale);
        if (scaleDelta !== 1.0) {
          let focalPoint = (t0 = this.screenFocalPoint, t0 == null ? this[_screenDestinationRect].center : t0);
          focalPoint = new ui.Offset.new(focalPoint.dx[$clamp](this[_screenDestinationRect].left, this[_screenDestinationRect].right)[$toDouble](), focalPoint.dy[$clamp](this[_screenDestinationRect].top, this[_screenDestinationRect].bottom)[$toDouble]());
          this[_screenDestinationRect] = new ui.Rect.fromLTWH(dart.notNull(focalPoint.dx) - (dart.notNull(focalPoint.dx) - dart.notNull(this[_screenDestinationRect].left)) * scaleDelta, dart.notNull(focalPoint.dy) - (dart.notNull(focalPoint.dy) - dart.notNull(this[_screenDestinationRect].top)) * scaleDelta, dart.notNull(this[_screenDestinationRect].width) * scaleDelta, dart.notNull(this[_screenDestinationRect].height) * scaleDelta);
          this.preTotalScale = this.totalScale;
          this.delta = ui.Offset.zero;
        } else {
          if (!dart.equals(this[_screenDestinationRect], this.screenCropRect)) {
            let topSame = extended_image_utils.doubleEqual(this[_screenDestinationRect].top, this.screenCropRect.top);
            let leftSame = extended_image_utils.doubleEqual(this[_screenDestinationRect].left, this.screenCropRect.left);
            let bottomSame = extended_image_utils.doubleEqual(this[_screenDestinationRect].bottom, this.screenCropRect.bottom);
            let rightSame = extended_image_utils.doubleEqual(this[_screenDestinationRect].right, this.screenCropRect.right);
            if (dart.test(topSame) && dart.test(bottomSame)) {
              this.delta = new ui.Offset.new(this.delta.dx, 0.0);
            } else if (dart.test(leftSame) && dart.test(rightSame)) {
              this.delta = new ui.Offset.new(0.0, this.delta.dy);
            }
            this[_screenDestinationRect] = this[_screenDestinationRect].shift(this.delta);
          }
          this.delta = ui.Offset.zero;
        }
        this[_screenDestinationRect] = this.computeBoundary(this[_screenDestinationRect], this.screenCropRect);
        if (this.screenCropRect != null) {
          let rect = this.screenCropRect.expandToInclude(this[_screenDestinationRect]);
          if (!dart.equals(rect, this[_screenDestinationRect])) {
            let topSame = extended_image_utils.doubleEqual(rect.top, this.screenCropRect.top);
            let leftSame = extended_image_utils.doubleEqual(rect.left, this.screenCropRect.left);
            let bottomSame = extended_image_utils.doubleEqual(rect.bottom, this.screenCropRect.bottom);
            let rightSame = extended_image_utils.doubleEqual(rect.right, this.screenCropRect.right);
            if (dart.test(topSame) && dart.test(bottomSame)) {
              rect = new ui.Rect.fromCenter({center: rect.center, width: dart.notNull(rect.height) / dart.notNull(this[_screenDestinationRect].height) * dart.notNull(this[_screenDestinationRect].width), height: rect.height});
              this[_reachCropRectEdge] = true;
            } else if (dart.test(leftSame) && dart.test(rightSame)) {
              rect = new ui.Rect.fromCenter({center: rect.center, width: rect.width, height: dart.notNull(rect.width) / dart.notNull(this[_screenDestinationRect].width) * dart.notNull(this[_screenDestinationRect].height)});
              this[_reachCropRectEdge] = true;
            }
            this.totalScale = dart.notNull(this.totalScale) / (dart.notNull(rect.width) / dart.notNull(this[_screenDestinationRect].width));
            this.preTotalScale = this.totalScale;
            this[_screenDestinationRect] = rect;
          }
        }
      } else {
        this[_screenDestinationRect] = this.getRectWithScale(this[_rawDestinationRect]);
        this[_screenDestinationRect] = this.computeBoundary(this[_screenDestinationRect], this.screenCropRect);
      }
      return this[_screenDestinationRect];
    }
    getRectWithScale(rect) {
      let width = dart.notNull(rect.width) * dart.notNull(this.totalScale);
      let height = dart.notNull(rect.height) * dart.notNull(this.totalScale);
      let center = rect.center;
      return new ui.Rect.fromLTWH(dart.notNull(center.dx) - width / 2.0, dart.notNull(center.dy) - height / 2.0, width, height);
    }
    computeBoundary(result, layoutRect) {
      if (dart.test(this[_computeHorizontalBoundary])) {
        if (dart.notNull(extended_image_utils.doubleCompare(result.left, layoutRect.left)) >= 0) {
          result = new ui.Rect.fromLTWH(layoutRect.left, result.top, result.width, result.height);
        }
        if (dart.notNull(extended_image_utils.doubleCompare(result.right, layoutRect.right)) <= 0) {
          result = new ui.Rect.fromLTWH(dart.notNull(layoutRect.right) - dart.notNull(result.width), result.top, result.width, result.height);
        }
      }
      if (dart.test(this[_computeVerticalBoundary])) {
        if (dart.notNull(extended_image_utils.doubleCompare(result.bottom, layoutRect.bottom)) <= 0) {
          result = new ui.Rect.fromLTWH(result.left, dart.notNull(layoutRect.bottom) - dart.notNull(result.height), result.width, result.height);
        }
        if (dart.notNull(extended_image_utils.doubleCompare(result.top, layoutRect.top)) >= 0) {
          result = new ui.Rect.fromLTWH(result.left, layoutRect.top, result.width, result.height);
        }
      }
      this[_computeHorizontalBoundary] = dart.notNull(extended_image_utils.doubleCompare(result.left, layoutRect.left)) <= 0 && dart.notNull(extended_image_utils.doubleCompare(result.right, layoutRect.right)) >= 0;
      this[_computeVerticalBoundary] = dart.notNull(extended_image_utils.doubleCompare(result.top, layoutRect.top)) <= 0 && dart.notNull(extended_image_utils.doubleCompare(result.bottom, layoutRect.bottom)) >= 0;
      return result;
    }
  };
  (extended_image_editor_utils.EditActionDetails.new = function() {
    this[_rotateRadian] = 0.0;
    this[_flipX] = false;
    this[_flipY] = false;
    this[_computeHorizontalBoundary] = false;
    this[_computeVerticalBoundary] = false;
    this[_layoutRect] = null;
    this[_screenDestinationRect] = null;
    this[_rawDestinationRect] = null;
    this[_reachCropRectEdge] = false;
    this[totalScale] = 1.0;
    this[preTotalScale] = 1.0;
    this[delta] = null;
    this[screenFocalPoint] = null;
    this[cropRectPadding] = null;
    this[cropRect] = null;
    this[originalAspectRatio] = null;
    this[_cropAspectRatio] = null;
    ;
  }).prototype = extended_image_editor_utils.EditActionDetails.prototype;
  dart.addTypeTests(extended_image_editor_utils.EditActionDetails);
  dart.addTypeCaches(extended_image_editor_utils.EditActionDetails);
  dart.setMethodSignature(extended_image_editor_utils.EditActionDetails, () => ({
    __proto__: dart.getMethods(extended_image_editor_utils.EditActionDetails.__proto__),
    setScreenDestinationRect: dart.fnType(dart.void, [dart.legacy(ui.Rect)]),
    rotate: dart.fnType(dart.void, [dart.legacy(core.double), dart.legacy(ui.Rect), dart.legacy(box_fit.BoxFit)]),
    flip: dart.fnType(dart.void, []),
    paintRect: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect)]),
    initRect: dart.fnType(dart.void, [dart.legacy(ui.Rect), dart.legacy(ui.Rect)]),
    getFinalDestinationRect: dart.fnType(dart.legacy(ui.Rect), []),
    getRectWithScale: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect)]),
    computeBoundary: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect), dart.legacy(ui.Rect)])
  }));
  dart.setGetterSignature(extended_image_editor_utils.EditActionDetails, () => ({
    __proto__: dart.getGetters(extended_image_editor_utils.EditActionDetails.__proto__),
    cropAspectRatio: dart.legacy(core.double),
    screenDestinationRect: dart.legacy(ui.Rect),
    flipX: dart.legacy(core.bool),
    flipY: dart.legacy(core.bool),
    rotateRadian: dart.legacy(core.double),
    hasRotateAngle: dart.legacy(core.bool),
    hasEditAction: dart.legacy(core.bool),
    needCrop: dart.legacy(core.bool),
    rotateAngle: dart.legacy(core.double),
    needFlip: dart.legacy(core.bool),
    isHalfPi: dart.legacy(core.bool),
    isPi: dart.legacy(core.bool),
    isTwoPi: dart.legacy(core.bool),
    layerDestinationRect: dart.legacy(ui.Rect),
    layoutTopLeft: dart.legacy(ui.Offset),
    rawDestinationRect: dart.legacy(ui.Rect),
    screenCropRect: dart.legacy(ui.Rect),
    reachCropRectEdge: dart.legacy(core.bool)
  }));
  dart.setSetterSignature(extended_image_editor_utils.EditActionDetails, () => ({
    __proto__: dart.getSetters(extended_image_editor_utils.EditActionDetails.__proto__),
    cropAspectRatio: dart.legacy(core.double)
  }));
  dart.setLibraryUri(extended_image_editor_utils.EditActionDetails, I[11]);
  dart.setFieldSignature(extended_image_editor_utils.EditActionDetails, () => ({
    __proto__: dart.getFields(extended_image_editor_utils.EditActionDetails.__proto__),
    [_rotateRadian]: dart.fieldType(dart.legacy(core.double)),
    [_flipX]: dart.fieldType(dart.legacy(core.bool)),
    [_flipY]: dart.fieldType(dart.legacy(core.bool)),
    [_computeHorizontalBoundary]: dart.fieldType(dart.legacy(core.bool)),
    [_computeVerticalBoundary]: dart.fieldType(dart.legacy(core.bool)),
    [_layoutRect]: dart.fieldType(dart.legacy(ui.Rect)),
    [_screenDestinationRect]: dart.fieldType(dart.legacy(ui.Rect)),
    [_rawDestinationRect]: dart.fieldType(dart.legacy(ui.Rect)),
    [_reachCropRectEdge]: dart.fieldType(dart.legacy(core.bool)),
    totalScale: dart.fieldType(dart.legacy(core.double)),
    preTotalScale: dart.fieldType(dart.legacy(core.double)),
    delta: dart.fieldType(dart.legacy(ui.Offset)),
    screenFocalPoint: dart.fieldType(dart.legacy(ui.Offset)),
    cropRectPadding: dart.fieldType(dart.legacy(edge_insets.EdgeInsets)),
    cropRect: dart.fieldType(dart.legacy(ui.Rect)),
    originalAspectRatio: dart.fieldType(dart.legacy(core.double)),
    [_cropAspectRatio]: dart.fieldType(dart.legacy(core.double))
  }));
  var hitTestBehavior$ = dart.privateName(extended_image_editor_utils, "EditorConfig.hitTestBehavior");
  var maxScale$ = dart.privateName(extended_image_editor_utils, "EditorConfig.maxScale");
  var initialScale = dart.privateName(extended_image_editor_utils, "EditorConfig.initialScale");
  var cropRectPadding$ = dart.privateName(extended_image_editor_utils, "EditorConfig.cropRectPadding");
  var cornerSize$0 = dart.privateName(extended_image_editor_utils, "EditorConfig.cornerSize");
  var cornerColor$0 = dart.privateName(extended_image_editor_utils, "EditorConfig.cornerColor");
  var lineColor$0 = dart.privateName(extended_image_editor_utils, "EditorConfig.lineColor");
  var lineHeight$0 = dart.privateName(extended_image_editor_utils, "EditorConfig.lineHeight");
  var editorMaskColorHandler$ = dart.privateName(extended_image_editor_utils, "EditorConfig.editorMaskColorHandler");
  var hitTestSize$ = dart.privateName(extended_image_editor_utils, "EditorConfig.hitTestSize");
  var animationDuration$ = dart.privateName(extended_image_editor_utils, "EditorConfig.animationDuration");
  var tickerDuration$ = dart.privateName(extended_image_editor_utils, "EditorConfig.tickerDuration");
  var cropAspectRatio$ = dart.privateName(extended_image_editor_utils, "EditorConfig.cropAspectRatio");
  var initCropRectType$ = dart.privateName(extended_image_editor_utils, "EditorConfig.initCropRectType");
  var cornerPainter$1 = dart.privateName(extended_image_editor_utils, "EditorConfig.cornerPainter");
  var speed$ = dart.privateName(extended_image_editor_utils, "EditorConfig.speed");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var _name$3 = dart.privateName(extended_image_editor_utils, "_name");
  var _name$4 = dart.privateName(proxy_box, "_name");
  extended_image_editor_utils.EditorConfig = class EditorConfig extends core.Object {
    get hitTestBehavior() {
      return this[hitTestBehavior$];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    get maxScale() {
      return this[maxScale$];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get initialScale() {
      return this[initialScale];
    }
    set initialScale(value) {
      super.initialScale = value;
    }
    get cropRectPadding() {
      return this[cropRectPadding$];
    }
    set cropRectPadding(value) {
      super.cropRectPadding = value;
    }
    get cornerSize() {
      return this[cornerSize$0];
    }
    set cornerSize(value) {
      super.cornerSize = value;
    }
    get cornerColor() {
      return this[cornerColor$0];
    }
    set cornerColor(value) {
      super.cornerColor = value;
    }
    get lineColor() {
      return this[lineColor$0];
    }
    set lineColor(value) {
      super.lineColor = value;
    }
    get lineHeight() {
      return this[lineHeight$0];
    }
    set lineHeight(value) {
      super.lineHeight = value;
    }
    get editorMaskColorHandler() {
      return this[editorMaskColorHandler$];
    }
    set editorMaskColorHandler(value) {
      super.editorMaskColorHandler = value;
    }
    get hitTestSize() {
      return this[hitTestSize$];
    }
    set hitTestSize(value) {
      super.hitTestSize = value;
    }
    get animationDuration() {
      return this[animationDuration$];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get tickerDuration() {
      return this[tickerDuration$];
    }
    set tickerDuration(value) {
      super.tickerDuration = value;
    }
    get cropAspectRatio() {
      return this[cropAspectRatio$];
    }
    set cropAspectRatio(value) {
      super.cropAspectRatio = value;
    }
    get initCropRectType() {
      return this[initCropRectType$];
    }
    set initCropRectType(value) {
      super.initCropRectType = value;
    }
    get cornerPainter() {
      return this[cornerPainter$1];
    }
    set cornerPainter(value) {
      super.cornerPainter = value;
    }
    get speed() {
      return this[speed$];
    }
    set speed(value) {
      super.speed = value;
    }
  };
  (extended_image_editor_utils.EditorConfig.new = function(opts) {
    let t0, t0$;
    let maxScale = opts && 'maxScale' in opts ? opts.maxScale : null;
    let cropRectPadding = opts && 'cropRectPadding' in opts ? opts.cropRectPadding : C[258] || CT.C258;
    let cornerSize = opts && 'cornerSize' in opts ? opts.cornerSize : C[259] || CT.C259;
    let cornerColor = opts && 'cornerColor' in opts ? opts.cornerColor : null;
    let lineColor = opts && 'lineColor' in opts ? opts.lineColor : null;
    let lineHeight = opts && 'lineHeight' in opts ? opts.lineHeight : 0.6;
    let editorMaskColorHandler = opts && 'editorMaskColorHandler' in opts ? opts.editorMaskColorHandler : null;
    let hitTestSize = opts && 'hitTestSize' in opts ? opts.hitTestSize : 20;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[260] || CT.C260;
    let tickerDuration = opts && 'tickerDuration' in opts ? opts.tickerDuration : C[6] || CT.C6;
    let cropAspectRatio = opts && 'cropAspectRatio' in opts ? opts.cropAspectRatio : null;
    let initCropRectType = opts && 'initCropRectType' in opts ? opts.initCropRectType : C[261] || CT.C261;
    let cornerPainter = opts && 'cornerPainter' in opts ? opts.cornerPainter : null;
    let speed = opts && 'speed' in opts ? opts.speed : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : C[262] || CT.C262;
    this[initialScale] = 1.0;
    this[cropRectPadding$] = cropRectPadding;
    this[cornerSize$0] = cornerSize;
    this[cornerColor$0] = cornerColor;
    this[lineColor$0] = lineColor;
    this[lineHeight$0] = lineHeight;
    this[editorMaskColorHandler$] = editorMaskColorHandler;
    this[hitTestSize$] = hitTestSize;
    this[animationDuration$] = animationDuration;
    this[tickerDuration$] = tickerDuration;
    this[cropAspectRatio$] = cropAspectRatio;
    this[initCropRectType$] = initCropRectType;
    this[cornerPainter$1] = cornerPainter;
    this[hitTestBehavior$] = hitTestBehavior;
    this[maxScale$] = (t0 = maxScale, t0 == null ? maxScale = 5.0 : t0);
    this[speed$] = (t0$ = speed, t0$ == null ? 1.0 : t0$);
    if (!(dart.notNull(lineHeight) > 0.0)) dart.assertFailed(null, I[12], 374, 16, "lineHeight > 0.0");
    if (!(dart.notNull(hitTestSize) >= 0.0)) dart.assertFailed(null, I[12], 375, 16, "hitTestSize >= 0.0");
    if (!(animationDuration != null)) dart.assertFailed(null, I[12], 376, 16, "animationDuration != null");
    if (!(tickerDuration != null)) dart.assertFailed(null, I[12], 377, 16, "tickerDuration != null");
    ;
  }).prototype = extended_image_editor_utils.EditorConfig.prototype;
  dart.addTypeTests(extended_image_editor_utils.EditorConfig);
  dart.addTypeCaches(extended_image_editor_utils.EditorConfig);
  dart.setLibraryUri(extended_image_editor_utils.EditorConfig, I[11]);
  dart.setFieldSignature(extended_image_editor_utils.EditorConfig, () => ({
    __proto__: dart.getFields(extended_image_editor_utils.EditorConfig.__proto__),
    hitTestBehavior: dart.finalFieldType(dart.legacy(proxy_box.HitTestBehavior)),
    maxScale: dart.finalFieldType(dart.legacy(core.double)),
    initialScale: dart.finalFieldType(dart.legacy(core.double)),
    cropRectPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    cornerSize: dart.finalFieldType(dart.legacy(ui.Size)),
    cornerColor: dart.finalFieldType(dart.legacy(ui.Color)),
    lineColor: dart.finalFieldType(dart.legacy(ui.Color)),
    lineHeight: dart.finalFieldType(dart.legacy(core.double)),
    editorMaskColorHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(ui.Color), [dart.legacy(framework.BuildContext), dart.legacy(core.bool)]))),
    hitTestSize: dart.finalFieldType(dart.legacy(core.double)),
    animationDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    tickerDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    cropAspectRatio: dart.finalFieldType(dart.legacy(core.double)),
    initCropRectType: dart.finalFieldType(dart.legacy(extended_image_editor_utils.InitCropRectType)),
    cornerPainter: dart.finalFieldType(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter)),
    speed: dart.finalFieldType(dart.legacy(core.double))
  }));
  extended_image_editor_utils.CropAspectRatios = class CropAspectRatios extends core.Object {};
  (extended_image_editor_utils.CropAspectRatios.new = function() {
    ;
  }).prototype = extended_image_editor_utils.CropAspectRatios.prototype;
  dart.addTypeTests(extended_image_editor_utils.CropAspectRatios);
  dart.addTypeCaches(extended_image_editor_utils.CropAspectRatios);
  dart.setLibraryUri(extended_image_editor_utils.CropAspectRatios, I[11]);
  dart.defineLazy(extended_image_editor_utils.CropAspectRatios, {
    /*extended_image_editor_utils.CropAspectRatios.custom*/get custom() {
      return null;
    },
    /*extended_image_editor_utils.CropAspectRatios.original*/get original() {
      return 0;
    },
    /*extended_image_editor_utils.CropAspectRatios.ratio1_1*/get ratio1_1() {
      return 1;
    },
    /*extended_image_editor_utils.CropAspectRatios.ratio3_4*/get ratio3_4() {
      return 0.75;
    },
    /*extended_image_editor_utils.CropAspectRatios.ratio4_3*/get ratio4_3() {
      return 1.3333333333333333;
    },
    /*extended_image_editor_utils.CropAspectRatios.ratio9_16*/get ratio9_16() {
      return 0.5625;
    },
    /*extended_image_editor_utils.CropAspectRatios.ratio16_9*/get ratio16_9() {
      return 1.7777777777777777;
    }
  }, true);
  extended_image_editor_utils.InitCropRectType = class InitCropRectType extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (extended_image_editor_utils.InitCropRectType.new = function(index, _name) {
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = extended_image_editor_utils.InitCropRectType.prototype;
  dart.addTypeTests(extended_image_editor_utils.InitCropRectType);
  dart.addTypeCaches(extended_image_editor_utils.InitCropRectType);
  dart.setMethodSignature(extended_image_editor_utils.InitCropRectType, () => ({
    __proto__: dart.getMethods(extended_image_editor_utils.InitCropRectType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_editor_utils.InitCropRectType, I[11]);
  dart.setFieldSignature(extended_image_editor_utils.InitCropRectType, () => ({
    __proto__: dart.getFields(extended_image_editor_utils.InitCropRectType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$3]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_editor_utils.InitCropRectType, ['toString']);
  extended_image_editor_utils.InitCropRectType.imageRect = C[261] || CT.C261;
  extended_image_editor_utils.InitCropRectType.layoutRect = C[263] || CT.C263;
  extended_image_editor_utils.InitCropRectType.values = C[264] || CT.C264;
  var cornerColor$1 = dart.privateName(extended_image_editor_utils, "ExtendedImageCropLayerCornerPainter.cornerColor");
  extended_image_editor_utils.ExtendedImageCropLayerCornerPainter = class ExtendedImageCropLayerCornerPainter extends core.Object {
    get cornerColor() {
      return this[cornerColor$1];
    }
    set cornerColor(value) {
      super.cornerColor = value;
    }
    copyWith(opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      return null;
    }
  };
  (extended_image_editor_utils.ExtendedImageCropLayerCornerPainter.new = function(cornerColor) {
    this[cornerColor$1] = cornerColor;
    ;
  }).prototype = extended_image_editor_utils.ExtendedImageCropLayerCornerPainter.prototype;
  dart.addTypeTests(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter);
  dart.addTypeCaches(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter);
  dart.setMethodSignature(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter, () => ({
    __proto__: dart.getMethods(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter.__proto__),
    copyWith: dart.fnType(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter), [], {color: dart.legacy(ui.Color)}, {})
  }));
  dart.setLibraryUri(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter, I[11]);
  dart.setFieldSignature(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter, () => ({
    __proto__: dart.getFields(extended_image_editor_utils.ExtendedImageCropLayerCornerPainter.__proto__),
    cornerColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var color$0 = dart.privateName(extended_image_editor_utils, "ExtendedImageCropLayerPainterCircleCorner.color");
  var radius$ = dart.privateName(extended_image_editor_utils, "ExtendedImageCropLayerPainterCircleCorner.radius");
  extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner = class ExtendedImageCropLayerPainterCircleCorner extends extended_image_editor_utils.ExtendedImageCropLayerCornerPainter {
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    copyWith(opts) {
      let t0, t0$;
      let color = opts && 'color' in opts ? opts.color : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      return new extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner.new({color: (t0 = color, t0 == null ? this.color : t0), radius: (t0$ = radius, t0$ == null ? this.radius : t0$)});
    }
    drawCorners(canvas, cropRect, defautlPainter) {
      defautlPainter.color = this.color;
      canvas.drawCircle(new ui.Offset.new(cropRect.left, cropRect.top), this.radius, defautlPainter);
      canvas.drawCircle(new ui.Offset.new(cropRect.right, cropRect.top), this.radius, defautlPainter);
      canvas.drawCircle(new ui.Offset.new(cropRect.left, cropRect.bottom), this.radius, defautlPainter);
      canvas.drawCircle(new ui.Offset.new(cropRect.right, cropRect.bottom), this.radius, defautlPainter);
    }
  };
  (extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let radius = opts && 'radius' in opts ? opts.radius : 5;
    this[color$0] = color;
    this[radius$] = radius;
    extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner.__proto__.new.call(this, color);
    ;
  }).prototype = extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner.prototype;
  dart.addTypeTests(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner);
  dart.addTypeCaches(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner);
  dart.setMethodSignature(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner, () => ({
    __proto__: dart.getMethods(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner.__proto__),
    copyWith: dart.fnType(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner), [], {color: dart.legacy(ui.Color), radius: dart.legacy(core.double)}, {}),
    drawCorners: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Paint)])
  }));
  dart.setLibraryUri(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner, I[11]);
  dart.setFieldSignature(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner, () => ({
    __proto__: dart.getFields(extended_image_editor_utils.ExtendedImageCropLayerPainterCircleCorner.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    radius: dart.finalFieldType(dart.legacy(core.double))
  }));
  var color$1 = dart.privateName(extended_image_editor_utils, "ExtendedImageCropLayerPainterNinetyDegreesCorner.color");
  var cornerSize$1 = dart.privateName(extended_image_editor_utils, "ExtendedImageCropLayerPainterNinetyDegreesCorner.cornerSize");
  extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner = class ExtendedImageCropLayerPainterNinetyDegreesCorner extends extended_image_editor_utils.ExtendedImageCropLayerCornerPainter {
    get color() {
      return this[color$1];
    }
    set color(value) {
      super.color = value;
    }
    get cornerSize() {
      return this[cornerSize$1];
    }
    set cornerSize(value) {
      super.cornerSize = value;
    }
    copyWith(opts) {
      let t0, t0$;
      let color = opts && 'color' in opts ? opts.color : null;
      let cornerSize = opts && 'cornerSize' in opts ? opts.cornerSize : null;
      return new extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.new({color: (t0 = color, t0 == null ? this.color : t0), cornerSize: (t0$ = cornerSize, t0$ == null ? this.cornerSize : t0$)});
    }
    drawCorners(canvas, cropRect, defautlPainter) {
      let t0, t0$, t0$0, t0$1;
      let cornerWidth = this.cornerSize.width;
      let cornerHeight = this.cornerSize.height;
      defautlPainter.color = this.color;
      canvas.drawPath((t0 = ui.Path.new(), (() => {
        t0.moveTo(cropRect.left, cropRect.top);
        t0.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerWidth), cropRect.top);
        t0.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerWidth), dart.notNull(cropRect.top) + dart.notNull(cornerHeight));
        t0.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerHeight), dart.notNull(cropRect.top) + dart.notNull(cornerHeight));
        t0.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerHeight), dart.notNull(cropRect.top) + dart.notNull(cornerWidth));
        t0.lineTo(cropRect.left, dart.notNull(cropRect.top) + dart.notNull(cornerWidth));
        return t0;
      })()), defautlPainter);
      canvas.drawPath((t0$ = ui.Path.new(), (() => {
        t0$.moveTo(cropRect.left, cropRect.bottom);
        t0$.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerWidth), cropRect.bottom);
        t0$.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerWidth), dart.notNull(cropRect.bottom) - dart.notNull(cornerHeight));
        t0$.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerHeight), dart.notNull(cropRect.bottom) - dart.notNull(cornerHeight));
        t0$.lineTo(dart.notNull(cropRect.left) + dart.notNull(cornerHeight), dart.notNull(cropRect.bottom) - dart.notNull(cornerWidth));
        t0$.lineTo(cropRect.left, dart.notNull(cropRect.bottom) - dart.notNull(cornerWidth));
        return t0$;
      })()), defautlPainter);
      canvas.drawPath((t0$0 = ui.Path.new(), (() => {
        t0$0.moveTo(cropRect.right, cropRect.top);
        t0$0.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerWidth), cropRect.top);
        t0$0.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerWidth), dart.notNull(cropRect.top) + dart.notNull(cornerHeight));
        t0$0.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerHeight), dart.notNull(cropRect.top) + dart.notNull(cornerHeight));
        t0$0.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerHeight), dart.notNull(cropRect.top) + dart.notNull(cornerWidth));
        t0$0.lineTo(cropRect.right, dart.notNull(cropRect.top) + dart.notNull(cornerWidth));
        return t0$0;
      })()), defautlPainter);
      canvas.drawPath((t0$1 = ui.Path.new(), (() => {
        t0$1.moveTo(cropRect.right, cropRect.bottom);
        t0$1.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerWidth), cropRect.bottom);
        t0$1.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerWidth), dart.notNull(cropRect.bottom) - dart.notNull(cornerHeight));
        t0$1.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerHeight), dart.notNull(cropRect.bottom) - dart.notNull(cornerHeight));
        t0$1.lineTo(dart.notNull(cropRect.right) - dart.notNull(cornerHeight), dart.notNull(cropRect.bottom) - dart.notNull(cornerWidth));
        t0$1.lineTo(cropRect.right, dart.notNull(cropRect.bottom) - dart.notNull(cornerWidth));
        return t0$1;
      })()), defautlPainter);
    }
  };
  (extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let cornerSize = opts && 'cornerSize' in opts ? opts.cornerSize : C[259] || CT.C259;
    this[color$1] = color;
    this[cornerSize$1] = cornerSize;
    extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.__proto__.new.call(this, color);
    ;
  }).prototype = extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.prototype;
  dart.addTypeTests(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner);
  dart.addTypeCaches(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner);
  dart.setMethodSignature(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner, () => ({
    __proto__: dart.getMethods(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.__proto__),
    copyWith: dart.fnType(dart.legacy(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner), [], {color: dart.legacy(ui.Color), cornerSize: dart.legacy(ui.Size)}, {}),
    drawCorners: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Paint)])
  }));
  dart.setLibraryUri(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner, I[11]);
  dart.setFieldSignature(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner, () => ({
    __proto__: dart.getFields(extended_image_editor_utils.ExtendedImageCropLayerPainterNinetyDegreesCorner.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    cornerSize: dart.finalFieldType(dart.legacy(ui.Size))
  }));
  extended_image_editor_utils.getDestinationRect = function getDestinationRect(opts) {
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let inputSize = opts && 'inputSize' in opts ? opts.inputSize : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let flipHorizontally = opts && 'flipHorizontally' in opts ? opts.flipHorizontally : false;
    let outputSize = rect.size;
    let sliceBorder = null;
    if (centerSlice != null) {
      sliceBorder = new ui.Offset.new(dart.notNull(centerSlice.left) + dart.notNull(inputSize.width) - dart.notNull(centerSlice.right), dart.notNull(centerSlice.top) + dart.notNull(inputSize.height) - dart.notNull(centerSlice.bottom));
      outputSize = T$.SizeL().as(outputSize['-'](sliceBorder));
      inputSize = T$.SizeL().as(inputSize['-'](sliceBorder));
    }
    fit == null ? fit = centerSlice == null ? box_fit.BoxFit.scaleDown : box_fit.BoxFit.fill : null;
    if (!(centerSlice == null || fit != box_fit.BoxFit.none && fit != box_fit.BoxFit.cover)) dart.assertFailed(null, I[12], 481, 10, "centerSlice == null || (fit != BoxFit.none && fit != BoxFit.cover)");
    let fittedSizes = box_fit.applyBoxFit(fit, inputSize['/'](scale), outputSize);
    let sourceSize = fittedSizes.source['*'](scale);
    let destinationSize = fittedSizes.destination;
    if (centerSlice != null) {
      outputSize = outputSize['+'](sliceBorder);
      destinationSize = destinationSize['+'](sliceBorder);
      if (!dart.equals(sourceSize, inputSize)) dart.assertFailed("centerSlice was used with a BoxFit that does not guarantee that the image is fully visible.", I[12], 491, 12, "sourceSize == inputSize");
    }
    let halfWidthDelta = (dart.notNull(outputSize.width) - dart.notNull(destinationSize.width)) / 2.0;
    let halfHeightDelta = (dart.notNull(outputSize.height) - dart.notNull(destinationSize.height)) / 2.0;
    let dx = halfWidthDelta + dart.notNull(dart.test(flipHorizontally) ? -dart.notNull(alignment.x) : alignment.x) * halfWidthDelta;
    let dy = halfHeightDelta + dart.notNull(alignment.y) * halfHeightDelta;
    let destinationPosition = rect.topLeft.translate(dx, dy);
    let destinationRect = destinationPosition['&'](destinationSize);
    return destinationRect;
  };
  extended_image_editor_utils.defaultEditorMaskColorHandler = function defaultEditorMaskColorHandler(context, pointerDown) {
    return theme$.Theme.of(context).scaffoldBackgroundColor.withOpacity(dart.test(pointerDown) ? 0.4 : 0.8);
  };
  extended_image_editor_utils.rotateOffset = function rotateOffset(input, center, angle) {
    let x = input.dx;
    let y = input.dy;
    let rx0 = center.dx;
    let ry0 = center.dy;
    let x0 = (dart.notNull(x) - dart.notNull(rx0)) * math.cos(angle) - (dart.notNull(y) - dart.notNull(ry0)) * math.sin(angle) + dart.notNull(rx0);
    let y0 = (dart.notNull(x) - dart.notNull(rx0)) * math.sin(angle) + (dart.notNull(y) - dart.notNull(ry0)) * math.cos(angle) + dart.notNull(ry0);
    return new ui.Offset.new(x0, y0);
  };
  extended_image_editor_utils.rotateRect = function rotateRect(rect, center, angle) {
    let leftTop = extended_image_editor_utils.rotateOffset(rect.topLeft, center, angle);
    let bottomRight = extended_image_editor_utils.rotateOffset(rect.bottomRight, center, angle);
    return new ui.Rect.fromPoints(leftTop, bottomRight);
  };
  var left$ = dart.privateName(extended_image_gesture_utils, "Boundary.left");
  var right$ = dart.privateName(extended_image_gesture_utils, "Boundary.right");
  var bottom$ = dart.privateName(extended_image_gesture_utils, "Boundary.bottom");
  var top$ = dart.privateName(extended_image_gesture_utils, "Boundary.top");
  extended_image_gesture_utils.Boundary = class Boundary extends core.Object {
    get left() {
      return this[left$];
    }
    set left(value) {
      this[left$] = value;
    }
    get right() {
      return this[right$];
    }
    set right(value) {
      this[right$] = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      this[bottom$] = value;
    }
    get top() {
      return this[top$];
    }
    set top(value) {
      this[top$] = value;
    }
    toString() {
      return "left:" + dart.str(this.left) + ",right:" + dart.str(this.right) + ",top:" + dart.str(this.top) + ",bottom:" + dart.str(this.bottom);
    }
    get hashCode() {
      return ui.hashValues(this.left, this.right, this.top, this.bottom);
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) {
        return false;
      }
      return T$.BoundaryL().is(other) && this.left == other.left && this.right == other.right && this.top == other.top && this.bottom == other.bottom;
    }
  };
  (extended_image_gesture_utils.Boundary.new = function(opts) {
    let left = opts && 'left' in opts ? opts.left : false;
    let right = opts && 'right' in opts ? opts.right : false;
    let top = opts && 'top' in opts ? opts.top : false;
    let bottom = opts && 'bottom' in opts ? opts.bottom : false;
    this[left$] = left;
    this[right$] = right;
    this[top$] = top;
    this[bottom$] = bottom;
    ;
  }).prototype = extended_image_gesture_utils.Boundary.prototype;
  dart.addTypeTests(extended_image_gesture_utils.Boundary);
  dart.addTypeCaches(extended_image_gesture_utils.Boundary);
  dart.setMethodSignature(extended_image_gesture_utils.Boundary, () => ({
    __proto__: dart.getMethods(extended_image_gesture_utils.Boundary.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), []),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.dynamic]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.dynamic])
  }));
  dart.setGetterSignature(extended_image_gesture_utils.Boundary, () => ({
    __proto__: dart.getGetters(extended_image_gesture_utils.Boundary.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(extended_image_gesture_utils.Boundary, I[13]);
  dart.setFieldSignature(extended_image_gesture_utils.Boundary, () => ({
    __proto__: dart.getFields(extended_image_gesture_utils.Boundary.__proto__),
    left: dart.fieldType(dart.legacy(core.bool)),
    right: dart.fieldType(dart.legacy(core.bool)),
    bottom: dart.fieldType(dart.legacy(core.bool)),
    top: dart.fieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(extended_image_gesture_utils.Boundary, ['toString', '_equals']);
  dart.defineExtensionAccessors(extended_image_gesture_utils.Boundary, ['hashCode']);
  var offset$ = dart.privateName(extended_image_gesture_utils, "GestureDetails.offset");
  var totalScale$ = dart.privateName(extended_image_gesture_utils, "GestureDetails.totalScale");
  var actionType$ = dart.privateName(extended_image_gesture_utils, "GestureDetails.actionType");
  var userOffset$ = dart.privateName(extended_image_gesture_utils, "GestureDetails.userOffset");
  var layoutRect = dart.privateName(extended_image_gesture_utils, "GestureDetails.layoutRect");
  var destinationRect = dart.privateName(extended_image_gesture_utils, "GestureDetails.destinationRect");
  var rawDestinationRect = dart.privateName(extended_image_gesture_utils, "GestureDetails.rawDestinationRect");
  var initialAlignment = dart.privateName(extended_image_gesture_utils, "GestureDetails.initialAlignment");
  var slidePageOffset = dart.privateName(extended_image_gesture_utils, "GestureDetails.slidePageOffset");
  var _name$5 = dart.privateName(extended_image_gesture_utils, "_name");
  var _computeVerticalBoundary$ = dart.privateName(extended_image_gesture_utils, "_computeVerticalBoundary");
  var _computeHorizontalBoundary$ = dart.privateName(extended_image_gesture_utils, "_computeHorizontalBoundary");
  var _boundary = dart.privateName(extended_image_gesture_utils, "_boundary");
  var _center = dart.privateName(extended_image_gesture_utils, "_center");
  var _getCenter = dart.privateName(extended_image_gesture_utils, "_getCenter");
  var _getFixedOffset = dart.privateName(extended_image_gesture_utils, "_getFixedOffset");
  var _getDestinationRect = dart.privateName(extended_image_gesture_utils, "_getDestinationRect");
  var _innerCalculateFinalDestinationRect = dart.privateName(extended_image_gesture_utils, "_innerCalculateFinalDestinationRect");
  var _getCenterDif = dart.privateName(extended_image_gesture_utils, "_getCenterDif");
  extended_image_gesture_utils.GestureDetails = class GestureDetails extends core.Object {
    get offset() {
      return this[offset$];
    }
    set offset(value) {
      this[offset$] = value;
    }
    get totalScale() {
      return this[totalScale$];
    }
    set totalScale(value) {
      super.totalScale = value;
    }
    get actionType() {
      return this[actionType$];
    }
    set actionType(value) {
      super.actionType = value;
    }
    get userOffset() {
      return this[userOffset$];
    }
    set userOffset(value) {
      super.userOffset = value;
    }
    get layoutRect() {
      return this[layoutRect];
    }
    set layoutRect(value) {
      this[layoutRect] = value;
    }
    get destinationRect() {
      return this[destinationRect];
    }
    set destinationRect(value) {
      this[destinationRect] = value;
    }
    get rawDestinationRect() {
      return this[rawDestinationRect];
    }
    set rawDestinationRect(value) {
      this[rawDestinationRect] = value;
    }
    get initialAlignment() {
      return this[initialAlignment];
    }
    set initialAlignment(value) {
      this[initialAlignment] = value;
    }
    get slidePageOffset() {
      return this[slidePageOffset];
    }
    set slidePageOffset(value) {
      this[slidePageOffset] = value;
    }
    get computeVerticalBoundary() {
      return this[_computeVerticalBoundary$];
    }
    get computeHorizontalBoundary() {
      return this[_computeHorizontalBoundary$];
    }
    get boundary() {
      return this[_boundary];
    }
    get hashCode() {
      return ui.hashValues(this.offset, this.totalScale, this.computeVerticalBoundary, this.computeHorizontalBoundary, this.boundary, this.actionType, this.userOffset, this.layoutRect, this.destinationRect, this[_center]);
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) {
        return false;
      }
      return T$.GestureDetailsL().is(other) && dart.equals(this.offset, other.offset) && this.totalScale == other.totalScale && this.computeVerticalBoundary == other.computeVerticalBoundary && this.computeHorizontalBoundary == other.computeHorizontalBoundary && dart.equals(this.boundary, other.boundary) && this.actionType == other.actionType && this.userOffset == other.userOffset && dart.equals(this.layoutRect, other.layoutRect) && dart.equals(this.destinationRect, other.destinationRect) && dart.equals(this[_center], other[_center]);
    }
    [_getCenter](destinationRect) {
      if (!dart.test(this.userOffset) && this[_center] != null) {
        return this[_center];
      }
      if (dart.notNull(this.totalScale) > 1.0) {
        if (dart.test(this[_computeHorizontalBoundary$]) && dart.test(this[_computeVerticalBoundary$])) {
          return destinationRect.center['*'](this.totalScale)['+'](this.offset);
        } else if (dart.test(this[_computeHorizontalBoundary$])) {
          return new ui.Offset.new(dart.notNull(destinationRect.center.dx) * dart.notNull(this.totalScale), destinationRect.center.dy)['+'](new ui.Offset.new(this.offset.dx, 0.0));
        } else if (dart.test(this[_computeVerticalBoundary$])) {
          return new ui.Offset.new(destinationRect.center.dx, dart.notNull(destinationRect.center.dy) * dart.notNull(this.totalScale))['+'](new ui.Offset.new(0.0, this.offset.dy));
        } else {
          return destinationRect.center;
        }
      } else {
        return destinationRect.center;
      }
    }
    [_getFixedOffset](destinationRect, center) {
      if (dart.notNull(this.totalScale) > 1.0) {
        if (dart.test(this[_computeHorizontalBoundary$]) && dart.test(this[_computeVerticalBoundary$])) {
          return center['-'](destinationRect.center['*'](this.totalScale));
        } else if (dart.test(this[_computeHorizontalBoundary$])) {
          return center['-'](new ui.Offset.new(dart.notNull(destinationRect.center.dx) * dart.notNull(this.totalScale), destinationRect.center.dy));
        } else if (dart.test(this[_computeVerticalBoundary$])) {
          return center['-'](new ui.Offset.new(destinationRect.center.dx, dart.notNull(destinationRect.center.dy) * dart.notNull(this.totalScale)));
        } else {
          return center['-'](destinationRect.center);
        }
      } else {
        return center['-'](destinationRect.center);
      }
    }
    [_getDestinationRect](destinationRect, center) {
      let width = dart.notNull(destinationRect.width) * dart.notNull(this.totalScale);
      let height = dart.notNull(destinationRect.height) * dart.notNull(this.totalScale);
      return new ui.Rect.fromLTWH(dart.notNull(center.dx) - width / 2.0, dart.notNull(center.dy) - height / 2.0, width, height);
    }
    calculateFinalDestinationRect(layoutRect, destinationRect) {
      let destinationRectChanged = !dart.equals(this.rawDestinationRect, destinationRect);
      this.rawDestinationRect = destinationRect;
      let temp = this.offset;
      this[_innerCalculateFinalDestinationRect](layoutRect, destinationRect);
      this.offset = temp;
      let result = this[_innerCalculateFinalDestinationRect](layoutRect, destinationRect);
      if (dart.notNull(this.totalScale) > 1.0 && destinationRectChanged && this.initialAlignment != null) {
        this.offset = this[_getFixedOffset](destinationRect, result.center['+'](this[_getCenterDif](result, layoutRect, this.initialAlignment)));
        result = this[_innerCalculateFinalDestinationRect](layoutRect, destinationRect);
      }
      this.destinationRect = result;
      this.layoutRect = layoutRect;
      return result;
    }
    [_getCenterDif](result, layout, alignment) {
      switch (alignment) {
        case C[266] || CT.C266:
        {
          return layout.topLeft['-'](result.topLeft);
        }
        case C[267] || CT.C267:
        {
          return layout.topCenter['-'](result.topCenter);
        }
        case C[268] || CT.C268:
        {
          return layout.topRight['-'](result.topRight);
        }
        case C[269] || CT.C269:
        {
          return layout.centerLeft['-'](result.centerLeft);
        }
        case C[270] || CT.C270:
        {
          return layout.center['-'](result.center);
        }
        case C[271] || CT.C271:
        {
          return layout.centerRight['-'](result.centerRight);
        }
        case C[272] || CT.C272:
        {
          return layout.bottomLeft['-'](result.bottomLeft);
        }
        case C[273] || CT.C273:
        {
          return layout.bottomCenter['-'](result.bottomCenter);
        }
        case C[274] || CT.C274:
        {
          return layout.bottomRight['-'](result.bottomRight);
        }
        default:
        {
          return ui.Offset.zero;
        }
      }
    }
    [_innerCalculateFinalDestinationRect](layoutRect, destinationRect) {
      this[_boundary] = new extended_image_gesture_utils.Boundary.new();
      let center = this[_getCenter](destinationRect);
      let result = this[_getDestinationRect](destinationRect, center);
      if (dart.test(this[_computeHorizontalBoundary$])) {
        if (dart.notNull(extended_image_utils.doubleCompare(result.left, layoutRect.left)) >= 0) {
          result = new ui.Rect.fromLTWH(layoutRect.left, result.top, result.width, result.height);
          this[_boundary].left = true;
        }
        if (dart.notNull(extended_image_utils.doubleCompare(result.right, layoutRect.right)) <= 0) {
          result = new ui.Rect.fromLTWH(dart.notNull(layoutRect.right) - dart.notNull(result.width), result.top, result.width, result.height);
          this[_boundary].right = true;
        }
      }
      if (dart.test(this[_computeVerticalBoundary$])) {
        if (dart.notNull(extended_image_utils.doubleCompare(result.bottom, layoutRect.bottom)) <= 0) {
          result = new ui.Rect.fromLTWH(result.left, dart.notNull(layoutRect.bottom) - dart.notNull(result.height), result.width, result.height);
          this[_boundary].bottom = true;
        }
        if (dart.notNull(extended_image_utils.doubleCompare(result.top, layoutRect.top)) >= 0) {
          result = new ui.Rect.fromLTWH(result.left, layoutRect.top, result.width, result.height);
          this[_boundary].top = true;
        }
      }
      this[_computeHorizontalBoundary$] = dart.notNull(extended_image_utils.doubleCompare(result.left, layoutRect.left)) <= 0 && dart.notNull(extended_image_utils.doubleCompare(result.right, layoutRect.right)) >= 0;
      this[_computeVerticalBoundary$] = dart.notNull(extended_image_utils.doubleCompare(result.top, layoutRect.top)) <= 0 && dart.notNull(extended_image_utils.doubleCompare(result.bottom, layoutRect.bottom)) >= 0;
      this.offset = this[_getFixedOffset](destinationRect, result.center);
      this[_center] = result.center;
      return result;
    }
    movePage(delta) {
      let canMoveHorizontal = delta.dx !== 0 && (dart.notNull(delta.dx) < 0 && dart.test(this.boundary.right) || dart.notNull(delta.dx) > 0 && dart.test(this.boundary.left) || !dart.test(this[_computeHorizontalBoundary$]));
      let canMoveVertical = delta.dy !== 0 && (dart.notNull(delta.dy) < 0 && dart.test(this.boundary.bottom) || dart.notNull(delta.dy) > 0 && dart.test(this.boundary.top) || !dart.test(this[_computeVerticalBoundary$]));
      return canMoveHorizontal || canMoveVertical || dart.notNull(this.totalScale) <= 1.0;
    }
  };
  (extended_image_gesture_utils.GestureDetails.new = function(opts) {
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let totalScale = opts && 'totalScale' in opts ? opts.totalScale : null;
    let gestureDetails = opts && 'gestureDetails' in opts ? opts.gestureDetails : null;
    let actionType = opts && 'actionType' in opts ? opts.actionType : C[265] || CT.C265;
    let userOffset = opts && 'userOffset' in opts ? opts.userOffset : true;
    this[_computeVerticalBoundary$] = false;
    this[_computeHorizontalBoundary$] = false;
    this[_boundary] = new extended_image_gesture_utils.Boundary.new();
    this[_center] = null;
    this[layoutRect] = null;
    this[destinationRect] = null;
    this[rawDestinationRect] = null;
    this[initialAlignment] = null;
    this[slidePageOffset] = null;
    this[offset$] = offset;
    this[totalScale$] = totalScale;
    this[actionType$] = actionType;
    this[userOffset$] = userOffset;
    if (gestureDetails != null) {
      this[_computeVerticalBoundary$] = gestureDetails[_computeVerticalBoundary$];
      this[_computeHorizontalBoundary$] = gestureDetails[_computeHorizontalBoundary$];
      this[_center] = gestureDetails[_center];
      this.layoutRect = gestureDetails.layoutRect;
      this.destinationRect = gestureDetails.destinationRect;
    }
  }).prototype = extended_image_gesture_utils.GestureDetails.prototype;
  dart.addTypeTests(extended_image_gesture_utils.GestureDetails);
  dart.addTypeCaches(extended_image_gesture_utils.GestureDetails);
  dart.setMethodSignature(extended_image_gesture_utils.GestureDetails, () => ({
    __proto__: dart.getMethods(extended_image_gesture_utils.GestureDetails.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.dynamic]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.dynamic]),
    [_getCenter]: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(ui.Rect)]),
    [_getFixedOffset]: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(ui.Rect), dart.legacy(ui.Offset)]),
    [_getDestinationRect]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect), dart.legacy(ui.Offset)]),
    calculateFinalDestinationRect: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect), dart.legacy(ui.Rect)]),
    [_getCenterDif]: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(ui.Rect), dart.legacy(ui.Rect), dart.legacy(extended_image_gesture_utils.InitialAlignment)]),
    [_innerCalculateFinalDestinationRect]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect), dart.legacy(ui.Rect)]),
    movePage: dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Offset)])
  }));
  dart.setGetterSignature(extended_image_gesture_utils.GestureDetails, () => ({
    __proto__: dart.getGetters(extended_image_gesture_utils.GestureDetails.__proto__),
    computeVerticalBoundary: dart.legacy(core.bool),
    computeHorizontalBoundary: dart.legacy(core.bool),
    boundary: dart.legacy(extended_image_gesture_utils.Boundary),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(extended_image_gesture_utils.GestureDetails, I[13]);
  dart.setFieldSignature(extended_image_gesture_utils.GestureDetails, () => ({
    __proto__: dart.getFields(extended_image_gesture_utils.GestureDetails.__proto__),
    offset: dart.fieldType(dart.legacy(ui.Offset)),
    totalScale: dart.finalFieldType(dart.legacy(core.double)),
    actionType: dart.finalFieldType(dart.legacy(extended_image_gesture_utils.ActionType)),
    [_computeVerticalBoundary$]: dart.fieldType(dart.legacy(core.bool)),
    [_computeHorizontalBoundary$]: dart.fieldType(dart.legacy(core.bool)),
    [_boundary]: dart.fieldType(dart.legacy(extended_image_gesture_utils.Boundary)),
    userOffset: dart.finalFieldType(dart.legacy(core.bool)),
    [_center]: dart.fieldType(dart.legacy(ui.Offset)),
    layoutRect: dart.fieldType(dart.legacy(ui.Rect)),
    destinationRect: dart.fieldType(dart.legacy(ui.Rect)),
    rawDestinationRect: dart.fieldType(dart.legacy(ui.Rect)),
    initialAlignment: dart.fieldType(dart.legacy(extended_image_gesture_utils.InitialAlignment)),
    slidePageOffset: dart.fieldType(dart.legacy(ui.Offset))
  }));
  dart.defineExtensionMethods(extended_image_gesture_utils.GestureDetails, ['_equals']);
  dart.defineExtensionAccessors(extended_image_gesture_utils.GestureDetails, ['hashCode']);
  extended_image_gesture_utils.InitialAlignment = class InitialAlignment extends core.Object {
    toString() {
      return this[_name$5];
    }
  };
  (extended_image_gesture_utils.InitialAlignment.new = function(index, _name) {
    this.index = index;
    this[_name$5] = _name;
    ;
  }).prototype = extended_image_gesture_utils.InitialAlignment.prototype;
  dart.addTypeTests(extended_image_gesture_utils.InitialAlignment);
  dart.addTypeCaches(extended_image_gesture_utils.InitialAlignment);
  dart.setMethodSignature(extended_image_gesture_utils.InitialAlignment, () => ({
    __proto__: dart.getMethods(extended_image_gesture_utils.InitialAlignment.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_gesture_utils.InitialAlignment, I[13]);
  dart.setFieldSignature(extended_image_gesture_utils.InitialAlignment, () => ({
    __proto__: dart.getFields(extended_image_gesture_utils.InitialAlignment.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$5]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_gesture_utils.InitialAlignment, ['toString']);
  extended_image_gesture_utils.InitialAlignment.topLeft = C[266] || CT.C266;
  extended_image_gesture_utils.InitialAlignment.topCenter = C[267] || CT.C267;
  extended_image_gesture_utils.InitialAlignment.topRight = C[268] || CT.C268;
  extended_image_gesture_utils.InitialAlignment.centerLeft = C[269] || CT.C269;
  extended_image_gesture_utils.InitialAlignment.center = C[270] || CT.C270;
  extended_image_gesture_utils.InitialAlignment.centerRight = C[271] || CT.C271;
  extended_image_gesture_utils.InitialAlignment.bottomLeft = C[272] || CT.C272;
  extended_image_gesture_utils.InitialAlignment.bottomCenter = C[273] || CT.C273;
  extended_image_gesture_utils.InitialAlignment.bottomRight = C[274] || CT.C274;
  extended_image_gesture_utils.InitialAlignment.values = C[275] || CT.C275;
  var hitTestBehavior$0 = dart.privateName(extended_image_gesture_utils, "GestureConfig.hitTestBehavior");
  var gestureDetailsIsChanged$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.gestureDetailsIsChanged");
  var animationMinScale$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.animationMinScale");
  var minScale$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.minScale");
  var animationMaxScale$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.animationMaxScale");
  var maxScale$0 = dart.privateName(extended_image_gesture_utils, "GestureConfig.maxScale");
  var speed$0 = dart.privateName(extended_image_gesture_utils, "GestureConfig.speed");
  var cacheGesture$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.cacheGesture");
  var inPageView$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.inPageView");
  var inertialSpeed$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.inertialSpeed");
  var initialScale$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.initialScale");
  var initialAlignment$ = dart.privateName(extended_image_gesture_utils, "GestureConfig.initialAlignment");
  extended_image_gesture_utils.GestureConfig = class GestureConfig extends core.Object {
    get hitTestBehavior() {
      return this[hitTestBehavior$0];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    get gestureDetailsIsChanged() {
      return this[gestureDetailsIsChanged$];
    }
    set gestureDetailsIsChanged(value) {
      super.gestureDetailsIsChanged = value;
    }
    get animationMinScale() {
      return this[animationMinScale$];
    }
    set animationMinScale(value) {
      super.animationMinScale = value;
    }
    get minScale() {
      return this[minScale$];
    }
    set minScale(value) {
      super.minScale = value;
    }
    get animationMaxScale() {
      return this[animationMaxScale$];
    }
    set animationMaxScale(value) {
      super.animationMaxScale = value;
    }
    get maxScale() {
      return this[maxScale$0];
    }
    set maxScale(value) {
      super.maxScale = value;
    }
    get speed() {
      return this[speed$0];
    }
    set speed(value) {
      super.speed = value;
    }
    get cacheGesture() {
      return this[cacheGesture$];
    }
    set cacheGesture(value) {
      super.cacheGesture = value;
    }
    get inPageView() {
      return this[inPageView$];
    }
    set inPageView(value) {
      super.inPageView = value;
    }
    get inertialSpeed() {
      return this[inertialSpeed$];
    }
    set inertialSpeed(value) {
      super.inertialSpeed = value;
    }
    get initialScale() {
      return this[initialScale$];
    }
    set initialScale(value) {
      super.initialScale = value;
    }
    get initialAlignment() {
      return this[initialAlignment$];
    }
    set initialAlignment(value) {
      super.initialAlignment = value;
    }
  };
  (extended_image_gesture_utils.GestureConfig.new = function(opts) {
    let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6;
    let minScale = opts && 'minScale' in opts ? opts.minScale : null;
    let maxScale = opts && 'maxScale' in opts ? opts.maxScale : null;
    let speed = opts && 'speed' in opts ? opts.speed : null;
    let cacheGesture = opts && 'cacheGesture' in opts ? opts.cacheGesture : null;
    let inertialSpeed = opts && 'inertialSpeed' in opts ? opts.inertialSpeed : null;
    let initialScale = opts && 'initialScale' in opts ? opts.initialScale : null;
    let inPageView = opts && 'inPageView' in opts ? opts.inPageView : null;
    let animationMinScale = opts && 'animationMinScale' in opts ? opts.animationMinScale : null;
    let animationMaxScale = opts && 'animationMaxScale' in opts ? opts.animationMaxScale : null;
    let initialAlignment = opts && 'initialAlignment' in opts ? opts.initialAlignment : C[270] || CT.C270;
    let gestureDetailsIsChanged = opts && 'gestureDetailsIsChanged' in opts ? opts.gestureDetailsIsChanged : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : C[262] || CT.C262;
    this[initialAlignment$] = initialAlignment;
    this[gestureDetailsIsChanged$] = gestureDetailsIsChanged;
    this[hitTestBehavior$0] = hitTestBehavior;
    this[minScale$] = (t0 = minScale, t0 == null ? minScale = 0.8 : t0);
    this[maxScale$0] = (t0$ = maxScale, t0$ == null ? maxScale = 5.0 : t0$);
    this[speed$0] = (t0$0 = speed, t0$0 == null ? speed = 1.0 : t0$0);
    this[cacheGesture$] = (t0$1 = cacheGesture, t0$1 == null ? false : t0$1);
    this[inertialSpeed$] = (t0$2 = inertialSpeed, t0$2 == null ? inertialSpeed = 100.0 : t0$2);
    this[initialScale$] = (t0$3 = initialScale, t0$3 == null ? initialScale = 1.0 : t0$3);
    this[inPageView$] = (t0$4 = inPageView, t0$4 == null ? false : t0$4);
    this[animationMinScale$] = (t0$5 = animationMinScale, t0$5 == null ? animationMinScale = dart.notNull(minScale) * 0.8 : t0$5);
    this[animationMaxScale$] = (t0$6 = animationMaxScale, t0$6 == null ? animationMaxScale = dart.notNull(maxScale) * 1.2 : t0$6);
    if (!(dart.notNull(minScale) <= dart.notNull(maxScale))) dart.assertFailed(null, I[14], 385, 16, "minScale <= maxScale");
    if (!(dart.notNull(animationMinScale) <= dart.notNull(animationMaxScale))) dart.assertFailed(null, I[14], 386, 16, "animationMinScale <= animationMaxScale");
    if (!(dart.notNull(animationMinScale) <= dart.notNull(minScale))) dart.assertFailed(null, I[14], 387, 16, "animationMinScale <= minScale");
    if (!(dart.notNull(animationMaxScale) >= dart.notNull(maxScale))) dart.assertFailed(null, I[14], 388, 16, "animationMaxScale >= maxScale");
    if (!(dart.notNull(minScale) <= dart.notNull(initialScale) && dart.notNull(initialScale) <= dart.notNull(maxScale))) dart.assertFailed(null, I[14], 389, 16, "minScale <= initialScale && initialScale <= maxScale");
    if (!(dart.notNull(speed) > 0)) dart.assertFailed(null, I[14], 390, 16, "speed > 0");
    if (!(dart.notNull(inertialSpeed) > 0)) dart.assertFailed(null, I[14], 391, 16, "inertialSpeed > 0");
    ;
  }).prototype = extended_image_gesture_utils.GestureConfig.prototype;
  dart.addTypeTests(extended_image_gesture_utils.GestureConfig);
  dart.addTypeCaches(extended_image_gesture_utils.GestureConfig);
  dart.setLibraryUri(extended_image_gesture_utils.GestureConfig, I[13]);
  dart.setFieldSignature(extended_image_gesture_utils.GestureConfig, () => ({
    __proto__: dart.getFields(extended_image_gesture_utils.GestureConfig.__proto__),
    hitTestBehavior: dart.finalFieldType(dart.legacy(proxy_box.HitTestBehavior)),
    gestureDetailsIsChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(extended_image_gesture_utils.GestureDetails)]))),
    animationMinScale: dart.finalFieldType(dart.legacy(core.double)),
    minScale: dart.finalFieldType(dart.legacy(core.double)),
    animationMaxScale: dart.finalFieldType(dart.legacy(core.double)),
    maxScale: dart.finalFieldType(dart.legacy(core.double)),
    speed: dart.finalFieldType(dart.legacy(core.double)),
    cacheGesture: dart.finalFieldType(dart.legacy(core.bool)),
    inPageView: dart.finalFieldType(dart.legacy(core.bool)),
    inertialSpeed: dart.finalFieldType(dart.legacy(core.double)),
    initialScale: dart.finalFieldType(dart.legacy(core.double)),
    initialAlignment: dart.finalFieldType(dart.legacy(extended_image_gesture_utils.InitialAlignment))
  }));
  extended_image_gesture_utils.ActionType = class ActionType extends core.Object {
    toString() {
      return this[_name$5];
    }
  };
  (extended_image_gesture_utils.ActionType.new = function(index, _name) {
    this.index = index;
    this[_name$5] = _name;
    ;
  }).prototype = extended_image_gesture_utils.ActionType.prototype;
  dart.addTypeTests(extended_image_gesture_utils.ActionType);
  dart.addTypeCaches(extended_image_gesture_utils.ActionType);
  dart.setMethodSignature(extended_image_gesture_utils.ActionType, () => ({
    __proto__: dart.getMethods(extended_image_gesture_utils.ActionType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_gesture_utils.ActionType, I[13]);
  dart.setFieldSignature(extended_image_gesture_utils.ActionType, () => ({
    __proto__: dart.getFields(extended_image_gesture_utils.ActionType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$5]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_gesture_utils.ActionType, ['toString']);
  extended_image_gesture_utils.ActionType.zoom = C[276] || CT.C276;
  extended_image_gesture_utils.ActionType.pan = C[265] || CT.C265;
  extended_image_gesture_utils.ActionType.edit = C[277] || CT.C277;
  extended_image_gesture_utils.ActionType.values = C[278] || CT.C278;
  var _offsetController = dart.privateName(extended_image_gesture_utils, "_offsetController");
  var _offsetAnimation = dart.privateName(extended_image_gesture_utils, "_offsetAnimation");
  var _scaleController = dart.privateName(extended_image_gesture_utils, "_scaleController");
  var _scaleAnimation = dart.privateName(extended_image_gesture_utils, "_scaleAnimation");
  extended_image_gesture_utils.GestureAnimation = class GestureAnimation extends core.Object {
    animationOffset(begin, end) {
      let t0;
      if (this[_offsetController] == null) {
        return;
      }
      this[_offsetAnimation] = this[_offsetController].drive(T$.OffsetL(), new (T$.TweenOfOffsetL()).new({begin: begin, end: end}));
      t0 = this[_offsetController];
      (() => {
        t0.value = 0.0;
        t0.fling({velocity: 0.4});
        return t0;
      })();
    }
    animationScale(begin, end, velocity) {
      let t0;
      if (this[_scaleController] == null) {
        return;
      }
      this[_scaleAnimation] = this[_scaleController].drive(T$.doubleL(), new (T$.TweenOfdoubleL()).new({begin: begin, end: end}));
      t0 = this[_scaleController];
      (() => {
        t0.value = 0.0;
        t0.fling({velocity: velocity});
        return t0;
      })();
    }
    dispose() {
      let t0, t0$;
      t0 = this[_offsetController];
      t0 == null ? null : t0.dispose();
      this[_offsetController] = null;
      t0$ = this[_scaleController];
      t0$ == null ? null : t0$.dispose();
      this[_scaleController] = null;
    }
    stop() {
      let t0, t0$;
      t0 = this[_offsetController];
      t0 == null ? null : t0.stop();
      t0$ = this[_scaleController];
      t0$ == null ? null : t0$.stop();
    }
  };
  (extended_image_gesture_utils.GestureAnimation.new = function(vsync, opts) {
    let offsetCallBack = opts && 'offsetCallBack' in opts ? opts.offsetCallBack : null;
    let scaleCallBack = opts && 'scaleCallBack' in opts ? opts.scaleCallBack : null;
    this[_offsetController] = null;
    this[_offsetAnimation] = null;
    this[_scaleController] = null;
    this[_scaleAnimation] = null;
    if (offsetCallBack != null) {
      this[_offsetController] = new animation_controller.AnimationController.new({vsync: vsync});
      this[_offsetController].addListener(dart.fn(() => {
        offsetCallBack(this[_offsetAnimation].value);
      }, T$.VoidToNull()));
    }
    if (scaleCallBack != null) {
      this[_scaleController] = new animation_controller.AnimationController.new({vsync: vsync});
      this[_scaleController].addListener(dart.fn(() => {
        scaleCallBack(this[_scaleAnimation].value);
      }, T$.VoidToNull()));
    }
  }).prototype = extended_image_gesture_utils.GestureAnimation.prototype;
  dart.addTypeTests(extended_image_gesture_utils.GestureAnimation);
  dart.addTypeCaches(extended_image_gesture_utils.GestureAnimation);
  dart.setMethodSignature(extended_image_gesture_utils.GestureAnimation, () => ({
    __proto__: dart.getMethods(extended_image_gesture_utils.GestureAnimation.__proto__),
    animationOffset: dart.fnType(dart.void, [dart.legacy(ui.Offset), dart.legacy(ui.Offset)]),
    animationScale: dart.fnType(dart.void, [dart.legacy(core.double), dart.legacy(core.double), dart.legacy(core.double)]),
    dispose: dart.fnType(dart.void, []),
    stop: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(extended_image_gesture_utils.GestureAnimation, I[13]);
  dart.setFieldSignature(extended_image_gesture_utils.GestureAnimation, () => ({
    __proto__: dart.getFields(extended_image_gesture_utils.GestureAnimation.__proto__),
    [_offsetController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_offsetAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(ui.Offset)))),
    [_scaleController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_scaleAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double))))
  }));
  extended_image_gesture_utils.outRect = function outRect(rect, destinationRect) {
    return dart.notNull(extended_image_utils.doubleCompare(destinationRect.top, rect.top)) < 0 || dart.notNull(extended_image_utils.doubleCompare(destinationRect.left, rect.left)) < 0 || dart.notNull(extended_image_utils.doubleCompare(destinationRect.right, rect.right)) > 0 || dart.notNull(extended_image_utils.doubleCompare(destinationRect.bottom, rect.bottom)) > 0;
  };
  extended_image_gesture_utils.roundAfter = function roundAfter(number, position) {
    let shift = math.pow(10, position)[$toDouble]();
    return (dart.notNull(number) * shift)[$roundToDouble]() / shift;
  };
  extended_image_gesture_utils.defaultSlidePageBackgroundHandler = function defaultSlidePageBackgroundHandler(opts) {
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let pageSize = opts && 'pageSize' in opts ? opts.pageSize : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let pageGestureAxis = opts && 'pageGestureAxis' in opts ? opts.pageGestureAxis : null;
    let opacity = 0.0;
    if (pageGestureAxis == extended_image_slide_page.SlideAxis.both) {
      opacity = dart.notNull(offset.distance) / (dart.notNull(new ui.Offset.new(pageSize.width, pageSize.height).distance) / 2.0);
    } else if (pageGestureAxis == extended_image_slide_page.SlideAxis.horizontal) {
      opacity = offset.dx[$abs]() / (dart.notNull(pageSize.width) / 2.0);
    } else if (pageGestureAxis == extended_image_slide_page.SlideAxis.vertical) {
      opacity = offset.dy[$abs]() / (dart.notNull(pageSize.height) / 2.0);
    }
    return color.withOpacity(math.min(T$.doubleL(), 1.0, math.max(T$.doubleL(), 1.0 - opacity, 0.0)));
  };
  extended_image_gesture_utils.defaultSlideEndHandler = function defaultSlideEndHandler(opts) {
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let pageSize = opts && 'pageSize' in opts ? opts.pageSize : null;
    let pageGestureAxis = opts && 'pageGestureAxis' in opts ? opts.pageGestureAxis : null;
    if (pageGestureAxis == extended_image_slide_page.SlideAxis.both) {
      return dart.notNull(extended_image_utils.doubleCompare(offset.distance, dart.notNull(new ui.Offset.new(pageSize.width, pageSize.height).distance) / 6)) > 0;
    } else if (pageGestureAxis == extended_image_slide_page.SlideAxis.horizontal) {
      return dart.notNull(extended_image_utils.doubleCompare(offset.dx[$abs](), dart.notNull(pageSize.width) / 6)) > 0;
    } else if (pageGestureAxis == extended_image_slide_page.SlideAxis.vertical) {
      return dart.notNull(extended_image_utils.doubleCompare(offset.dy[$abs](), dart.notNull(pageSize.height) / 6)) > 0;
    }
    return true;
  };
  extended_image_gesture_utils.defaultSlideScaleHandler = function defaultSlideScaleHandler(opts) {
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let pageSize = opts && 'pageSize' in opts ? opts.pageSize : null;
    let pageGestureAxis = opts && 'pageGestureAxis' in opts ? opts.pageGestureAxis : null;
    let scale = 0.0;
    if (pageGestureAxis == extended_image_slide_page.SlideAxis.both) {
      scale = dart.notNull(offset.distance) / dart.notNull(new ui.Offset.new(pageSize.width, pageSize.height).distance);
    } else if (pageGestureAxis == extended_image_slide_page.SlideAxis.horizontal) {
      scale = offset.dx[$abs]() / (dart.notNull(pageSize.width) / 2.0);
    } else if (pageGestureAxis == extended_image_slide_page.SlideAxis.vertical) {
      scale = offset.dy[$abs]() / (dart.notNull(pageSize.height) / 2.0);
    }
    return math.max(T$.doubleL(), 1.0 - scale, 0.8);
  };
  dart.defineLazy(extended_image_gesture_utils, {
    /*extended_image_gesture_utils.minMagnitude*/get minMagnitude() {
      return 400;
    },
    /*extended_image_gesture_utils.velocity*/get velocity() {
      return 0.4;
    },
    /*extended_image_gesture_utils.minGesturePageDelta*/get minGesturePageDelta() {
      return 5;
    }
  }, true);
  var extendedImageState$ = dart.privateName(extended_image_gesture, "ExtendedImageGesture.extendedImageState");
  var imageBuilder$ = dart.privateName(extended_image_gesture, "ExtendedImageGesture.imageBuilder");
  var canScaleImage$ = dart.privateName(extended_image_gesture, "ExtendedImageGesture.canScaleImage");
  extended_image_gesture.ExtendedImageGesture = class ExtendedImageGesture extends framework.StatefulWidget {
    get extendedImageState() {
      return this[extendedImageState$];
    }
    set extendedImageState(value) {
      super.extendedImageState = value;
    }
    get imageBuilder() {
      return this[imageBuilder$];
    }
    set imageBuilder(value) {
      super.imageBuilder = value;
    }
    get canScaleImage() {
      return this[canScaleImage$];
    }
    set canScaleImage(value) {
      super.canScaleImage = value;
    }
    createState() {
      return new extended_image_gesture.ExtendedImageGestureState.new();
    }
  };
  (extended_image_gesture.ExtendedImageGesture.new = function(extendedImageState, opts) {
    let t0;
    let imageBuilder = opts && 'imageBuilder' in opts ? opts.imageBuilder : null;
    let canScaleImage = opts && 'canScaleImage' in opts ? opts.canScaleImage : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[extendedImageState$] = extendedImageState;
    this[imageBuilder$] = imageBuilder;
    this[canScaleImage$] = (t0 = canScaleImage, t0 == null ? C[279] || CT.C279 : t0);
    extended_image_gesture.ExtendedImageGesture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_gesture.ExtendedImageGesture.prototype;
  dart.addTypeTests(extended_image_gesture.ExtendedImageGesture);
  dart.addTypeCaches(extended_image_gesture.ExtendedImageGesture);
  dart.setMethodSignature(extended_image_gesture.ExtendedImageGesture, () => ({
    __proto__: dart.getMethods(extended_image_gesture.ExtendedImageGesture.__proto__),
    createState: dart.fnType(dart.legacy(extended_image_gesture.ExtendedImageGestureState), [])
  }));
  dart.setLibraryUri(extended_image_gesture.ExtendedImageGesture, I[15]);
  dart.setFieldSignature(extended_image_gesture.ExtendedImageGesture, () => ({
    __proto__: dart.getFields(extended_image_gesture.ExtendedImageGesture.__proto__),
    extendedImageState: dart.finalFieldType(dart.legacy(extended_image_utils.ExtendedImageState)),
    imageBuilder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.Widget)]))),
    canScaleImage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(extended_image_gesture_utils.GestureDetails)])))
  }));
  var _gestureDetails$ = dart.privateName(extended_image_gesture, "_gestureDetails");
  var _normalizedOffset = dart.privateName(extended_image_gesture, "_normalizedOffset");
  var _startingScale = dart.privateName(extended_image_gesture, "_startingScale");
  var _startingOffset$ = dart.privateName(extended_image_gesture, "_startingOffset");
  var _pointerDownPosition = dart.privateName(extended_image_gesture, "_pointerDownPosition");
  var _gestureAnimation$ = dart.privateName(extended_image_gesture, "_gestureAnimation");
  var _gestureConfig = dart.privateName(extended_image_gesture, "_gestureConfig");
  var _pageViewState = dart.privateName(extended_image_gesture, "_pageViewState");
  var _updateSlidePagePreOffset$ = dart.privateName(extended_image_gesture, "_updateSlidePagePreOffset");
  var _initGestureConfig = dart.privateName(extended_image_gesture, "_initGestureConfig");
  var _handleScaleStart$ = dart.privateName(extended_image_gesture, "_handleScaleStart");
  var _handleScaleUpdate$ = dart.privateName(extended_image_gesture, "_handleScaleUpdate");
  var _handleScaleEnd$ = dart.privateName(extended_image_gesture, "_handleScaleEnd");
  var _handleDoubleTap = dart.privateName(extended_image_gesture, "_handleDoubleTap");
  var _handlePointerDown$ = dart.privateName(extended_image_gesture, "_handlePointerDown");
  var _handlePointerSignal = dart.privateName(extended_image_gesture, "_handlePointerSignal");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(extended_image_gesture.ExtendedImageGesture)) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(extended_image_gesture.ExtendedImageGesture))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(dart.legacy(extended_image_gesture.ExtendedImageGesture)));
  extended_image_gesture.ExtendedImageGestureState = class ExtendedImageGestureState extends State_TickerProviderStateMixin$36 {
    get extendedImageSlidePageState() {
      return this.widget.extendedImageState.slidePageState;
    }
    initState() {
      this[_initGestureConfig]();
      super.initState();
    }
    [_initGestureConfig]() {
      let t0, t0$, t0$0, t0$1, t0$2;
      let initialScale = (t0 = this[_gestureConfig], t0 == null ? null : t0.initialScale);
      let initialAlignment = (t0$ = this[_gestureConfig], t0$ == null ? null : t0$.initialAlignment);
      this[_gestureConfig] = (t0$1 = (t0$0 = this.widget.extendedImageState.imageWidget.initGestureConfigHandler, t0$0 == null ? null : t0$0(this.widget.extendedImageState)), t0$1 == null ? new extended_image_gesture_utils.GestureConfig.new() : t0$1);
      if (this[_gestureDetails$] == null || initialScale != this[_gestureConfig].initialScale || initialAlignment != this[_gestureConfig].initialAlignment) {
        this[_gestureDetails$] = (t0$2 = new extended_image_gesture_utils.GestureDetails.new({totalScale: this[_gestureConfig].initialScale, offset: ui.Offset.zero}), (() => {
          t0$2.initialAlignment = this[_gestureConfig].initialAlignment;
          return t0$2;
        })());
      }
      if (dart.test(this[_gestureConfig].cacheGesture)) {
        let cache = extended_image_gesture._gestureDetailsCache[$_get](this.widget.extendedImageState.imageStreamKey);
        if (cache != null) {
          this[_gestureDetails$] = cache;
        }
      }
      this[_gestureDetails$] == null ? this[_gestureDetails$] = new extended_image_gesture_utils.GestureDetails.new({totalScale: this[_gestureConfig].initialScale, offset: ui.Offset.zero}) : null;
      this[_gestureAnimation$] = new extended_image_gesture_utils.GestureAnimation.new(this, {offsetCallBack: dart.fn(value => {
          this.gestureDetails = new extended_image_gesture_utils.GestureDetails.new({offset: value, totalScale: this[_gestureDetails$].totalScale, gestureDetails: this[_gestureDetails$]});
        }, T$.OffsetLToNull()), scaleCallBack: dart.fn(scale => {
          this.gestureDetails = new extended_image_gesture_utils.GestureDetails.new({offset: this[_gestureDetails$].offset, totalScale: scale, gestureDetails: this[_gestureDetails$], actionType: extended_image_gesture_utils.ActionType.zoom, userOffset: false});
        }, T$.doubleLToNull())});
    }
    didChangeDependencies() {
      this[_pageViewState] = null;
      if (dart.test(this[_gestureConfig].inPageView)) {
        this[_pageViewState] = this.context.findAncestorStateOfType(T$.ExtendedImageGesturePageViewStateL());
      }
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      T$.ExtendedImageGestureL().as(oldWidget);
      this[_initGestureConfig]();
      this[_pageViewState] = null;
      if (dart.test(this[_gestureConfig].inPageView)) {
        this[_pageViewState] = this.context.findAncestorStateOfType(T$.ExtendedImageGesturePageViewStateL());
      }
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      let t0, t0$;
      super.dispose();
      t0 = this[_gestureAnimation$];
      t0 == null ? null : t0.stop();
      t0$ = this[_gestureAnimation$];
      t0$ == null ? null : t0$.dispose();
    }
    [_handleScaleStart$](details) {
      this[_gestureAnimation$].stop();
      this[_normalizedOffset] = details.focalPoint['-'](this[_gestureDetails$].offset)['/'](this[_gestureDetails$].totalScale);
      this[_startingScale] = this[_gestureDetails$].totalScale;
      this[_startingOffset$] = details.focalPoint;
    }
    [_handleScaleUpdate$](details) {
      let t1, t0;
      if (this.extendedImageSlidePageState != null && details.scale === 1.0 && dart.test(this[_gestureDetails$].userOffset) && this[_gestureDetails$].actionType == extended_image_gesture_utils.ActionType.pan) {
        let offsetDelta = details.focalPoint['-'](this[_startingOffset$]);
        let updateGesture = false;
        if (!dart.test(this.extendedImageSlidePageState.isSliding)) {
          if (offsetDelta.dx !== 0 && dart.notNull(extended_image_utils.doubleCompare(offsetDelta.dx[$abs](), offsetDelta.dy[$abs]())) > 0) {
            if (dart.test(this[_gestureDetails$].computeHorizontalBoundary)) {
              if (dart.notNull(offsetDelta.dx) > 0) {
                updateGesture = this[_gestureDetails$].boundary.left;
              } else {
                updateGesture = this[_gestureDetails$].boundary.right;
              }
            } else {
              updateGesture = true;
            }
          }
          if (offsetDelta.dy !== 0 && dart.notNull(extended_image_utils.doubleCompare(offsetDelta.dy[$abs](), offsetDelta.dx[$abs]())) > 0) {
            if (dart.test(this[_gestureDetails$].computeVerticalBoundary)) {
              if (dart.notNull(offsetDelta.dy) < 0) {
                updateGesture = this[_gestureDetails$].boundary.bottom;
              } else {
                updateGesture = this[_gestureDetails$].boundary.top;
              }
            } else {
              updateGesture = true;
            }
          }
        } else {
          updateGesture = true;
        }
        let delta = details.focalPoint['-'](this[_startingOffset$]).distance;
        if (dart.notNull(extended_image_utils.doubleCompare(delta, 5)) > 0 && dart.test(updateGesture)) {
          this[_updateSlidePagePreOffset$] == null ? this[_updateSlidePagePreOffset$] = details.focalPoint : null;
          this.extendedImageSlidePageState.slide(details.focalPoint['-'](this[_updateSlidePagePreOffset$]), {extendedImageGestureState: this});
          this[_updateSlidePagePreOffset$] = details.focalPoint;
        }
      }
      if (this.extendedImageSlidePageState != null && dart.test(this.extendedImageSlidePageState.isSliding)) {
        return;
      }
      let scale = dart.test((t0 = this.widget, t1 = this[_gestureDetails$], t0.canScaleImage(t1))) ? extended_image_utils.clampScale(dart.notNull(this[_startingScale]) * dart.notNull(details.scale) * dart.notNull(this[_gestureConfig].speed), this[_gestureConfig].animationMinScale, this[_gestureConfig].animationMaxScale) : this[_gestureDetails$].totalScale;
      if (details.scale !== 1.0 && (dart.test(extended_image_utils.doubleEqual(this[_gestureDetails$].totalScale, this[_gestureConfig].animationMinScale)) && dart.notNull(extended_image_utils.doubleCompare(scale, this[_gestureDetails$].totalScale)) <= 0 || dart.test(extended_image_utils.doubleEqual(this[_gestureDetails$].totalScale, this[_gestureConfig].animationMaxScale)) && dart.notNull(extended_image_utils.doubleCompare(scale, this[_gestureDetails$].totalScale)) >= 0)) {
        return;
      }
      let offset = (details.scale === 1.0 ? details.focalPoint['*'](this[_gestureConfig].speed) : this[_startingOffset$])['-'](this[_normalizedOffset]['*'](scale));
      if (dart.test(this.mounted) && (!dart.equals(offset, this[_gestureDetails$].offset) || scale != this[_gestureDetails$].totalScale)) {
        this.gestureDetails = new extended_image_gesture_utils.GestureDetails.new({offset: offset, totalScale: scale, gestureDetails: this[_gestureDetails$], actionType: details.scale !== 1.0 ? extended_image_gesture_utils.ActionType.zoom : extended_image_gesture_utils.ActionType.pan});
      }
    }
    [_handleScaleEnd$](details) {
      if (this.extendedImageSlidePageState != null && dart.test(this.extendedImageSlidePageState.isSliding)) {
        this[_updateSlidePagePreOffset$] = null;
        this.extendedImageSlidePageState.endSlide(details);
        return;
      }
      if (dart.notNull(extended_image_utils.doubleCompare(this[_gestureDetails$].totalScale, this[_gestureConfig].maxScale)) > 0) {
        let velocity = (dart.notNull(this[_gestureDetails$].totalScale) - dart.notNull(this[_gestureConfig].maxScale)) / dart.notNull(this[_gestureConfig].maxScale);
        this[_gestureAnimation$].animationScale(this[_gestureDetails$].totalScale, this[_gestureConfig].maxScale, velocity);
        return;
      }
      if (dart.notNull(extended_image_utils.doubleCompare(this[_gestureDetails$].totalScale, this[_gestureConfig].minScale)) < 0) {
        let velocity = (dart.notNull(this[_gestureConfig].minScale) - dart.notNull(this[_gestureDetails$].totalScale)) / dart.notNull(this[_gestureConfig].minScale);
        this[_gestureAnimation$].animationScale(this[_gestureDetails$].totalScale, this[_gestureConfig].minScale, velocity);
        return;
      }
      if (this[_gestureDetails$].actionType == extended_image_gesture_utils.ActionType.pan) {
        let magnitude = details.velocity.pixelsPerSecond.distance;
        if (dart.notNull(extended_image_utils.doubleCompare(magnitude, 400)) >= 0) {
          let direction = details.velocity.pixelsPerSecond['/'](magnitude)['*'](this[_gestureConfig].inertialSpeed);
          this[_gestureAnimation$].animationOffset(this[_gestureDetails$].offset, this[_gestureDetails$].offset['+'](direction));
        }
      }
    }
    [_handleDoubleTap]() {
      let t0;
      if (this.widget.extendedImageState.imageWidget.onDoubleTap != null) {
        t0 = this.widget.extendedImageState.imageWidget;
        t0.onDoubleTap(this);
        return;
      }
      if (!dart.test(this.mounted)) {
        return;
      }
      this.gestureDetails = new extended_image_gesture_utils.GestureDetails.new({offset: ui.Offset.zero, totalScale: this[_gestureConfig].initialScale});
    }
    [_handlePointerDown$](pointerDownEvent) {
      let t0;
      this[_pointerDownPosition] = pointerDownEvent.position;
      this[_gestureAnimation$].stop();
      t0 = this[_pageViewState];
      t0 == null ? null : t0.extendedImageGestureState = this;
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7;
      if (dart.test(this[_gestureConfig].cacheGesture)) {
        extended_image_gesture._gestureDetailsCache[$_set](this.widget.extendedImageState.imageStreamKey, this[_gestureDetails$]);
      }
      let image = new extended_raw_image.ExtendedRawImage.new({image: (t0 = this.widget.extendedImageState.extendedImageInfo, t0 == null ? null : t0.image), width: this.widget.extendedImageState.imageWidget.width, height: this.widget.extendedImageState.imageWidget.height, scale: (t0$0 = (t0$ = this.widget.extendedImageState.extendedImageInfo, t0$ == null ? null : t0$.scale), t0$0 == null ? 1.0 : t0$0), color: this.widget.extendedImageState.imageWidget.color, colorBlendMode: this.widget.extendedImageState.imageWidget.colorBlendMode, fit: this.widget.extendedImageState.imageWidget.fit, alignment: this.widget.extendedImageState.imageWidget.alignment, repeat: this.widget.extendedImageState.imageWidget.repeat, centerSlice: this.widget.extendedImageState.imageWidget.centerSlice, matchTextDirection: this.widget.extendedImageState.imageWidget.matchTextDirection, invertColors: this.widget.extendedImageState.invertColors, filterQuality: this.widget.extendedImageState.imageWidget.filterQuality, beforePaintImage: this.widget.extendedImageState.imageWidget.beforePaintImage, afterPaintImage: this.widget.extendedImageState.imageWidget.afterPaintImage, gestureDetails: this[_gestureDetails$], $creationLocationd_0dea112b090073317d4: C[280] || CT.C280});
      if (this.extendedImageSlidePageState != null) {
        image = (t0$3 = (t0$2 = (t0$1 = this.widget.extendedImageState.imageWidget, t0$1 == null ? null : t0$1.heroBuilderForSlidingPage), t0$2 == null ? null : t0$2(image)), t0$3 == null ? image : t0$3);
        if (this.extendedImageSlidePageState.widget.slideType == extended_image_slide_page.SlideType.onlyImage) {
          image = new basic.Transform.translate({offset: this.extendedImageSlidePageState.offset, child: new basic.Transform.scale({scale: this.extendedImageSlidePageState.scale, child: image, $creationLocationd_0dea112b090073317d4: C[298] || CT.C298}), $creationLocationd_0dea112b090073317d4: C[302] || CT.C302});
        }
      }
      image = (t0$5 = (t0$4 = this.widget.imageBuilder, t0$4 == null ? null : t0$4(image)), t0$5 == null ? image : t0$5);
      image = new gesture_detector.GestureDetector.new({onScaleStart: dart.bind(this, _handleScaleStart$), onScaleUpdate: dart.bind(this, _handleScaleUpdate$), onScaleEnd: dart.bind(this, _handleScaleEnd$), onDoubleTap: dart.bind(this, _handleDoubleTap), child: image, behavior: (t0$6 = this[_gestureConfig], t0$6 == null ? null : t0$6.hitTestBehavior), $creationLocationd_0dea112b090073317d4: C[306] || CT.C306});
      image = new basic.Listener.new({child: image, onPointerDown: dart.bind(this, _handlePointerDown$), onPointerSignal: dart.bind(this, _handlePointerSignal), behavior: (t0$7 = this[_gestureConfig], t0$7 == null ? null : t0$7.hitTestBehavior), $creationLocationd_0dea112b090073317d4: C[314] || CT.C314});
      return image;
    }
    get gestureDetails() {
      return this[_gestureDetails$];
    }
    set gestureDetails(value) {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          let t0, t0$;
          this[_gestureDetails$] = value;
          t0$ = (t0 = this[_gestureConfig], t0 == null ? null : t0.gestureDetailsIsChanged);
          t0$ == null ? null : t0$(this[_gestureDetails$]);
        }, T$.VoidToNull()));
      }
    }
    get imageGestureConfig() {
      return this[_gestureConfig];
    }
    handleDoubleTap(opts) {
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let doubleTapPosition = opts && 'doubleTapPosition' in opts ? opts.doubleTapPosition : null;
      doubleTapPosition == null ? doubleTapPosition = this[_pointerDownPosition] : null;
      scale == null ? scale = this[_gestureConfig].initialScale : null;
      this[_handleScaleStart$](new scale$.ScaleStartDetails.new({focalPoint: doubleTapPosition}));
      this[_handleScaleUpdate$](new scale$.ScaleUpdateDetails.new({focalPoint: doubleTapPosition, scale: dart.notNull(scale) / dart.notNull(this[_startingScale])}));
      if (dart.notNull(scale) < dart.notNull(this[_gestureConfig].minScale) || dart.notNull(scale) > dart.notNull(this[_gestureConfig].maxScale)) {
        this[_handleScaleEnd$](new scale$.ScaleEndDetails.new());
      }
    }
    get pointerDownPosition() {
      return this[_pointerDownPosition];
    }
    slide() {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          let t0;
          this[_gestureDetails$].slidePageOffset = (t0 = this.extendedImageSlidePageState, t0 == null ? null : t0.offset);
        }, T$.VoidToNull()));
      }
    }
    reset() {
      let t0, t0$, t0$0;
      this[_gestureConfig] = (t0$ = (t0 = this.widget.extendedImageState.imageWidget.initGestureConfigHandler, t0 == null ? null : t0(this.widget.extendedImageState)), t0$ == null ? new extended_image_gesture_utils.GestureConfig.new() : t0$);
      this.gestureDetails = (t0$0 = new extended_image_gesture_utils.GestureDetails.new({totalScale: this[_gestureConfig].initialScale, offset: ui.Offset.zero}), (() => {
        t0$0.initialAlignment = this[_gestureConfig].initialAlignment;
        return t0$0;
      })());
    }
    [_handlePointerSignal](event) {
      if (T$.PointerScrollEventL().is(event) && event.kind == ui.PointerDeviceKind.mouse) {
        this[_handleScaleStart$](new scale$.ScaleStartDetails.new({focalPoint: event.position}));
        let dy = event.scrollDelta.dy;
        let dx = event.scrollDelta.dx;
        this[_handleScaleUpdate$](new scale$.ScaleUpdateDetails.new({focalPoint: event.position, scale: 1.0 + dart.notNull(dy[$abs]() > dx[$abs]() ? dy : dx) * dart.notNull(this[_gestureConfig].speed) / 1000.0}));
        this[_handleScaleEnd$](new scale$.ScaleEndDetails.new());
      }
    }
  };
  (extended_image_gesture.ExtendedImageGestureState.new = function() {
    this[_gestureDetails$] = null;
    this[_normalizedOffset] = null;
    this[_startingScale] = null;
    this[_startingOffset$] = null;
    this[_pointerDownPosition] = null;
    this[_gestureAnimation$] = null;
    this[_gestureConfig] = null;
    this[_pageViewState] = null;
    this[_updateSlidePagePreOffset$] = null;
    extended_image_gesture.ExtendedImageGestureState.__proto__.new.call(this);
    ;
  }).prototype = extended_image_gesture.ExtendedImageGestureState.prototype;
  dart.addTypeTests(extended_image_gesture.ExtendedImageGestureState);
  dart.addTypeCaches(extended_image_gesture.ExtendedImageGestureState);
  dart.setMethodSignature(extended_image_gesture.ExtendedImageGestureState, () => ({
    __proto__: dart.getMethods(extended_image_gesture.ExtendedImageGestureState.__proto__),
    [_initGestureConfig]: dart.fnType(dart.void, []),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    [_handleScaleStart$]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleStartDetails)]),
    [_handleScaleUpdate$]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleUpdateDetails)]),
    [_handleScaleEnd$]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleEndDetails)]),
    [_handleDoubleTap]: dart.fnType(dart.void, []),
    [_handlePointerDown$]: dart.fnType(dart.void, [dart.legacy(events.PointerDownEvent)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    handleDoubleTap: dart.fnType(dart.void, [], {doubleTapPosition: dart.legacy(ui.Offset), scale: dart.legacy(core.double)}, {}),
    slide: dart.fnType(dart.void, []),
    reset: dart.fnType(dart.void, []),
    [_handlePointerSignal]: dart.fnType(dart.void, [dart.legacy(events.PointerSignalEvent)])
  }));
  dart.setGetterSignature(extended_image_gesture.ExtendedImageGestureState, () => ({
    __proto__: dart.getGetters(extended_image_gesture.ExtendedImageGestureState.__proto__),
    extendedImageSlidePageState: dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState),
    gestureDetails: dart.legacy(extended_image_gesture_utils.GestureDetails),
    imageGestureConfig: dart.legacy(extended_image_gesture_utils.GestureConfig),
    pointerDownPosition: dart.legacy(ui.Offset)
  }));
  dart.setSetterSignature(extended_image_gesture.ExtendedImageGestureState, () => ({
    __proto__: dart.getSetters(extended_image_gesture.ExtendedImageGestureState.__proto__),
    gestureDetails: dart.legacy(extended_image_gesture_utils.GestureDetails)
  }));
  dart.setLibraryUri(extended_image_gesture.ExtendedImageGestureState, I[15]);
  dart.setFieldSignature(extended_image_gesture.ExtendedImageGestureState, () => ({
    __proto__: dart.getFields(extended_image_gesture.ExtendedImageGestureState.__proto__),
    [_gestureDetails$]: dart.fieldType(dart.legacy(extended_image_gesture_utils.GestureDetails)),
    [_normalizedOffset]: dart.fieldType(dart.legacy(ui.Offset)),
    [_startingScale]: dart.fieldType(dart.legacy(core.double)),
    [_startingOffset$]: dart.fieldType(dart.legacy(ui.Offset)),
    [_pointerDownPosition]: dart.fieldType(dart.legacy(ui.Offset)),
    [_gestureAnimation$]: dart.fieldType(dart.legacy(extended_image_gesture_utils.GestureAnimation)),
    [_gestureConfig]: dart.fieldType(dart.legacy(extended_image_gesture_utils.GestureConfig)),
    [_pageViewState]: dart.fieldType(dart.legacy(extended_image_gesture_page_view.ExtendedImageGesturePageViewState)),
    [_updateSlidePagePreOffset$]: dart.fieldType(dart.legacy(ui.Offset))
  }));
  extended_image_gesture._defaultCanScaleImage = function _defaultCanScaleImage(details) {
    return true;
  };
  extended_image_gesture.clearGestureDetailsCache = function clearGestureDetailsCache() {
    extended_image_gesture._gestureDetailsCache[$clear]();
  };
  dart.defineLazy(extended_image_gesture, {
    /*extended_image_gesture._gestureDetailsCache*/get _gestureDetailsCache() {
      return new (T$.LinkedMapOfObjectL$GestureDetailsL()).new();
    },
    set _gestureDetailsCache(_) {}
  }, true);
  var extendedImageGestureKey$ = dart.privateName(extended_image, "ExtendedImage.extendedImageGestureKey");
  var handleLoadingProgress$ = dart.privateName(extended_image, "ExtendedImage.handleLoadingProgress");
  var clearMemoryCacheWhenDispose$ = dart.privateName(extended_image, "ExtendedImage.clearMemoryCacheWhenDispose");
  var heroBuilderForSlidingPage$0 = dart.privateName(extended_image, "ExtendedImage.heroBuilderForSlidingPage");
  var initEditorConfigHandler$ = dart.privateName(extended_image, "ExtendedImage.initEditorConfigHandler");
  var extendedImageEditorKey$ = dart.privateName(extended_image, "ExtendedImage.extendedImageEditorKey");
  var enableSlideOutPage$ = dart.privateName(extended_image, "ExtendedImage.enableSlideOutPage");
  var initGestureConfigHandler$ = dart.privateName(extended_image, "ExtendedImage.initGestureConfigHandler");
  var onDoubleTap$ = dart.privateName(extended_image, "ExtendedImage.onDoubleTap");
  var enableMemoryCache$ = dart.privateName(extended_image, "ExtendedImage.enableMemoryCache");
  var clearMemoryCacheIfFailed$ = dart.privateName(extended_image, "ExtendedImage.clearMemoryCacheIfFailed");
  var mode$ = dart.privateName(extended_image, "ExtendedImage.mode");
  var beforePaintImage$0 = dart.privateName(extended_image, "ExtendedImage.beforePaintImage");
  var afterPaintImage$0 = dart.privateName(extended_image, "ExtendedImage.afterPaintImage");
  var enableLoadState$ = dart.privateName(extended_image, "ExtendedImage.enableLoadState");
  var clipBehavior$ = dart.privateName(extended_image, "ExtendedImage.clipBehavior");
  var shape$ = dart.privateName(extended_image, "ExtendedImage.shape");
  var border$ = dart.privateName(extended_image, "ExtendedImage.border");
  var borderRadius$ = dart.privateName(extended_image, "ExtendedImage.borderRadius");
  var loadStateChanged$ = dart.privateName(extended_image, "ExtendedImage.loadStateChanged");
  var image$0 = dart.privateName(extended_image, "ExtendedImage.image");
  var width$0 = dart.privateName(extended_image, "ExtendedImage.width");
  var height$0 = dart.privateName(extended_image, "ExtendedImage.height");
  var constraints$ = dart.privateName(extended_image, "ExtendedImage.constraints");
  var color$2 = dart.privateName(extended_image, "ExtendedImage.color");
  var filterQuality$0 = dart.privateName(extended_image, "ExtendedImage.filterQuality");
  var colorBlendMode$0 = dart.privateName(extended_image, "ExtendedImage.colorBlendMode");
  var fit$1 = dart.privateName(extended_image, "ExtendedImage.fit");
  var alignment$0 = dart.privateName(extended_image, "ExtendedImage.alignment");
  var repeat$0 = dart.privateName(extended_image, "ExtendedImage.repeat");
  var centerSlice$0 = dart.privateName(extended_image, "ExtendedImage.centerSlice");
  var matchTextDirection$0 = dart.privateName(extended_image, "ExtendedImage.matchTextDirection");
  var gaplessPlayback$ = dart.privateName(extended_image, "ExtendedImage.gaplessPlayback");
  var semanticLabel$ = dart.privateName(extended_image, "ExtendedImage.semanticLabel");
  var excludeFromSemantics$ = dart.privateName(extended_image, "ExtendedImage.excludeFromSemantics");
  var isAntiAlias$0 = dart.privateName(extended_image, "ExtendedImage.isAntiAlias");
  var _name$6 = dart.privateName(extended_image_utils, "_name");
  extended_image.ExtendedImage = class ExtendedImage extends framework.StatefulWidget {
    get extendedImageGestureKey() {
      return this[extendedImageGestureKey$];
    }
    set extendedImageGestureKey(value) {
      super.extendedImageGestureKey = value;
    }
    get handleLoadingProgress() {
      return this[handleLoadingProgress$];
    }
    set handleLoadingProgress(value) {
      super.handleLoadingProgress = value;
    }
    get clearMemoryCacheWhenDispose() {
      return this[clearMemoryCacheWhenDispose$];
    }
    set clearMemoryCacheWhenDispose(value) {
      super.clearMemoryCacheWhenDispose = value;
    }
    get heroBuilderForSlidingPage() {
      return this[heroBuilderForSlidingPage$0];
    }
    set heroBuilderForSlidingPage(value) {
      super.heroBuilderForSlidingPage = value;
    }
    get initEditorConfigHandler() {
      return this[initEditorConfigHandler$];
    }
    set initEditorConfigHandler(value) {
      super.initEditorConfigHandler = value;
    }
    get extendedImageEditorKey() {
      return this[extendedImageEditorKey$];
    }
    set extendedImageEditorKey(value) {
      super.extendedImageEditorKey = value;
    }
    get enableSlideOutPage() {
      return this[enableSlideOutPage$];
    }
    set enableSlideOutPage(value) {
      super.enableSlideOutPage = value;
    }
    get initGestureConfigHandler() {
      return this[initGestureConfigHandler$];
    }
    set initGestureConfigHandler(value) {
      super.initGestureConfigHandler = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get enableMemoryCache() {
      return this[enableMemoryCache$];
    }
    set enableMemoryCache(value) {
      super.enableMemoryCache = value;
    }
    get clearMemoryCacheIfFailed() {
      return this[clearMemoryCacheIfFailed$];
    }
    set clearMemoryCacheIfFailed(value) {
      super.clearMemoryCacheIfFailed = value;
    }
    get mode() {
      return this[mode$];
    }
    set mode(value) {
      super.mode = value;
    }
    get beforePaintImage() {
      return this[beforePaintImage$0];
    }
    set beforePaintImage(value) {
      super.beforePaintImage = value;
    }
    get afterPaintImage() {
      return this[afterPaintImage$0];
    }
    set afterPaintImage(value) {
      super.afterPaintImage = value;
    }
    get enableLoadState() {
      return this[enableLoadState$];
    }
    set enableLoadState(value) {
      super.enableLoadState = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get loadStateChanged() {
      return this[loadStateChanged$];
    }
    set loadStateChanged(value) {
      super.loadStateChanged = value;
    }
    get image() {
      return this[image$0];
    }
    set image(value) {
      super.image = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get color() {
      return this[color$2];
    }
    set color(value) {
      super.color = value;
    }
    get filterQuality() {
      return this[filterQuality$0];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get colorBlendMode() {
      return this[colorBlendMode$0];
    }
    set colorBlendMode(value) {
      super.colorBlendMode = value;
    }
    get fit() {
      return this[fit$1];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$0];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get centerSlice() {
      return this[centerSlice$0];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$0];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get gaplessPlayback() {
      return this[gaplessPlayback$];
    }
    set gaplessPlayback(value) {
      super.gaplessPlayback = value;
    }
    get semanticLabel() {
      return this[semanticLabel$];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get isAntiAlias() {
      return this[isAntiAlias$0];
    }
    set isAntiAlias(value) {
      super.isAntiAlias = value;
    }
    createState() {
      return new extended_image._ExtendedImageState.new();
    }
  };
  (extended_image.ExtendedImage.new = function(opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let loadStateChanged = opts && 'loadStateChanged' in opts ? opts.loadStateChanged : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[320] || CT.C320;
    let enableLoadState = opts && 'enableLoadState' in opts ? opts.enableLoadState : false;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[321] || CT.C321;
    let enableMemoryCache = opts && 'enableMemoryCache' in opts ? opts.enableMemoryCache : true;
    let clearMemoryCacheIfFailed = opts && 'clearMemoryCacheIfFailed' in opts ? opts.clearMemoryCacheIfFailed : true;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let initGestureConfigHandler = opts && 'initGestureConfigHandler' in opts ? opts.initGestureConfigHandler : null;
    let enableSlideOutPage = opts && 'enableSlideOutPage' in opts ? opts.enableSlideOutPage : false;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let extendedImageEditorKey = opts && 'extendedImageEditorKey' in opts ? opts.extendedImageEditorKey : null;
    let initEditorConfigHandler = opts && 'initEditorConfigHandler' in opts ? opts.initEditorConfigHandler : null;
    let heroBuilderForSlidingPage = opts && 'heroBuilderForSlidingPage' in opts ? opts.heroBuilderForSlidingPage : null;
    let clearMemoryCacheWhenDispose = opts && 'clearMemoryCacheWhenDispose' in opts ? opts.clearMemoryCacheWhenDispose : false;
    let extendedImageGestureKey = opts && 'extendedImageGestureKey' in opts ? opts.extendedImageGestureKey : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let handleLoadingProgress = opts && 'handleLoadingProgress' in opts ? opts.handleLoadingProgress : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$0] = image;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[width$0] = width;
    this[height$0] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$1] = fit;
    this[alignment$0] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[loadStateChanged$] = loadStateChanged;
    this[border$] = border;
    this[shape$] = shape;
    this[borderRadius$] = borderRadius;
    this[clipBehavior$] = clipBehavior;
    this[enableLoadState$] = enableLoadState;
    this[beforePaintImage$0] = beforePaintImage;
    this[afterPaintImage$0] = afterPaintImage;
    this[mode$] = mode;
    this[enableMemoryCache$] = enableMemoryCache;
    this[clearMemoryCacheIfFailed$] = clearMemoryCacheIfFailed;
    this[onDoubleTap$] = onDoubleTap;
    this[initGestureConfigHandler$] = initGestureConfigHandler;
    this[enableSlideOutPage$] = enableSlideOutPage;
    this[extendedImageEditorKey$] = extendedImageEditorKey;
    this[initEditorConfigHandler$] = initEditorConfigHandler;
    this[heroBuilderForSlidingPage$0] = heroBuilderForSlidingPage;
    this[clearMemoryCacheWhenDispose$] = clearMemoryCacheWhenDispose;
    this[extendedImageGestureKey$] = extendedImageGestureKey;
    this[isAntiAlias$0] = isAntiAlias;
    this[handleLoadingProgress$] = handleLoadingProgress;
    if (!(image != null)) dart.assertFailed(null, I[16], 61, 16, "image != null");
    if (!(constraints == null || dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, I[16], 62, 16, "constraints == null || constraints.debugAssertIsValid()");
    this[constraints$] = width != null || height != null ? (t0$ = (t0 = constraints, t0 == null ? null : t0.tighten({width: width, height: height})), t0$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t0$) : constraints;
    extended_image.ExtendedImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image.ExtendedImage.prototype;
  (extended_image.ExtendedImage.network = function(url, opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let loadStateChanged = opts && 'loadStateChanged' in opts ? opts.loadStateChanged : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[320] || CT.C320;
    let enableLoadState = opts && 'enableLoadState' in opts ? opts.enableLoadState : true;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[321] || CT.C321;
    let enableMemoryCache = opts && 'enableMemoryCache' in opts ? opts.enableMemoryCache : true;
    let clearMemoryCacheIfFailed = opts && 'clearMemoryCacheIfFailed' in opts ? opts.clearMemoryCacheIfFailed : true;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let initGestureConfigHandler = opts && 'initGestureConfigHandler' in opts ? opts.initGestureConfigHandler : null;
    let enableSlideOutPage = opts && 'enableSlideOutPage' in opts ? opts.enableSlideOutPage : false;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let cancelToken = opts && 'cancelToken' in opts ? opts.cancelToken : null;
    let retries = opts && 'retries' in opts ? opts.retries : 3;
    let timeLimit = opts && 'timeLimit' in opts ? opts.timeLimit : null;
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let cache = opts && 'cache' in opts ? opts.cache : true;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let timeRetry = opts && 'timeRetry' in opts ? opts.timeRetry : C[322] || CT.C322;
    let extendedImageEditorKey = opts && 'extendedImageEditorKey' in opts ? opts.extendedImageEditorKey : null;
    let initEditorConfigHandler = opts && 'initEditorConfigHandler' in opts ? opts.initEditorConfigHandler : null;
    let heroBuilderForSlidingPage = opts && 'heroBuilderForSlidingPage' in opts ? opts.heroBuilderForSlidingPage : null;
    let clearMemoryCacheWhenDispose = opts && 'clearMemoryCacheWhenDispose' in opts ? opts.clearMemoryCacheWhenDispose : false;
    let handleLoadingProgress = opts && 'handleLoadingProgress' in opts ? opts.handleLoadingProgress : false;
    let extendedImageGestureKey = opts && 'extendedImageGestureKey' in opts ? opts.extendedImageGestureKey : null;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[width$0] = width;
    this[height$0] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$1] = fit;
    this[alignment$0] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[loadStateChanged$] = loadStateChanged;
    this[shape$] = shape;
    this[border$] = border;
    this[borderRadius$] = borderRadius;
    this[clipBehavior$] = clipBehavior;
    this[enableLoadState$] = enableLoadState;
    this[beforePaintImage$0] = beforePaintImage;
    this[afterPaintImage$0] = afterPaintImage;
    this[mode$] = mode;
    this[enableMemoryCache$] = enableMemoryCache;
    this[clearMemoryCacheIfFailed$] = clearMemoryCacheIfFailed;
    this[onDoubleTap$] = onDoubleTap;
    this[initGestureConfigHandler$] = initGestureConfigHandler;
    this[enableSlideOutPage$] = enableSlideOutPage;
    this[extendedImageEditorKey$] = extendedImageEditorKey;
    this[initEditorConfigHandler$] = initEditorConfigHandler;
    this[heroBuilderForSlidingPage$0] = heroBuilderForSlidingPage;
    this[clearMemoryCacheWhenDispose$] = clearMemoryCacheWhenDispose;
    this[handleLoadingProgress$] = handleLoadingProgress;
    this[extendedImageGestureKey$] = extendedImageGestureKey;
    this[isAntiAlias$0] = isAntiAlias;
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[16], 116, 16, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[16], 117, 16, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[16], 118, 16, "isAntiAlias != null");
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new _network_image_web.ExtendedNetworkImageProvider.new(url, {scale: scale, headers: headers, cache: cache, cancelToken: cancelToken, retries: retries, timeRetry: timeRetry, timeLimit: timeLimit}));
    if (!(constraints == null || dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, I[16], 133, 16, "constraints == null || constraints.debugAssertIsValid()");
    this[constraints$] = width != null || height != null ? (t0$ = (t0 = constraints, t0 == null ? null : t0.tighten({width: width, height: height})), t0$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t0$) : constraints;
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[16], 138, 16, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[16], 139, 16, "cacheHeight == null || cacheHeight > 0");
    extended_image.ExtendedImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image.ExtendedImage.prototype;
  (extended_image.ExtendedImage.file = function(file, opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let loadStateChanged = opts && 'loadStateChanged' in opts ? opts.loadStateChanged : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[320] || CT.C320;
    let enableLoadState = opts && 'enableLoadState' in opts ? opts.enableLoadState : false;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[321] || CT.C321;
    let enableMemoryCache = opts && 'enableMemoryCache' in opts ? opts.enableMemoryCache : true;
    let clearMemoryCacheIfFailed = opts && 'clearMemoryCacheIfFailed' in opts ? opts.clearMemoryCacheIfFailed : true;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let initGestureConfigHandler = opts && 'initGestureConfigHandler' in opts ? opts.initGestureConfigHandler : null;
    let enableSlideOutPage = opts && 'enableSlideOutPage' in opts ? opts.enableSlideOutPage : false;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let extendedImageEditorKey = opts && 'extendedImageEditorKey' in opts ? opts.extendedImageEditorKey : null;
    let initEditorConfigHandler = opts && 'initEditorConfigHandler' in opts ? opts.initEditorConfigHandler : null;
    let heroBuilderForSlidingPage = opts && 'heroBuilderForSlidingPage' in opts ? opts.heroBuilderForSlidingPage : null;
    let clearMemoryCacheWhenDispose = opts && 'clearMemoryCacheWhenDispose' in opts ? opts.clearMemoryCacheWhenDispose : false;
    let extendedImageGestureKey = opts && 'extendedImageGestureKey' in opts ? opts.extendedImageGestureKey : null;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[width$0] = width;
    this[height$0] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$1] = fit;
    this[alignment$0] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[loadStateChanged$] = loadStateChanged;
    this[shape$] = shape;
    this[border$] = border;
    this[borderRadius$] = borderRadius;
    this[clipBehavior$] = clipBehavior;
    this[enableLoadState$] = enableLoadState;
    this[beforePaintImage$0] = beforePaintImage;
    this[afterPaintImage$0] = afterPaintImage;
    this[mode$] = mode;
    this[enableMemoryCache$] = enableMemoryCache;
    this[clearMemoryCacheIfFailed$] = clearMemoryCacheIfFailed;
    this[onDoubleTap$] = onDoubleTap;
    this[initGestureConfigHandler$] = initGestureConfigHandler;
    this[enableSlideOutPage$] = enableSlideOutPage;
    this[extendedImageEditorKey$] = extendedImageEditorKey;
    this[initEditorConfigHandler$] = initEditorConfigHandler;
    this[heroBuilderForSlidingPage$0] = heroBuilderForSlidingPage;
    this[clearMemoryCacheWhenDispose$] = clearMemoryCacheWhenDispose;
    this[extendedImageGestureKey$] = extendedImageGestureKey;
    this[isAntiAlias$0] = isAntiAlias;
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[16], 200, 16, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[16], 201, 16, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[16], 202, 16, "isAntiAlias != null");
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new extended_file_image_provider.ExtendedFileImageProvider.new(file, {scale: scale}));
    if (!(alignment != null)) dart.assertFailed(null, I[16], 211, 16, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, I[16], 212, 16, "repeat != null");
    if (!(filterQuality != null)) dart.assertFailed(null, I[16], 213, 16, "filterQuality != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, I[16], 214, 16, "matchTextDirection != null");
    this[constraints$] = width != null || height != null ? (t0$ = (t0 = constraints, t0 == null ? null : t0.tighten({width: width, height: height})), t0$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t0$) : constraints;
    this[handleLoadingProgress$] = false;
    extended_image.ExtendedImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image.ExtendedImage.prototype;
  (extended_image.ExtendedImage.asset = function(name, opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let $package = opts && 'package' in opts ? opts.package : null;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let loadStateChanged = opts && 'loadStateChanged' in opts ? opts.loadStateChanged : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[320] || CT.C320;
    let enableLoadState = opts && 'enableLoadState' in opts ? opts.enableLoadState : false;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[321] || CT.C321;
    let enableMemoryCache = opts && 'enableMemoryCache' in opts ? opts.enableMemoryCache : true;
    let clearMemoryCacheIfFailed = opts && 'clearMemoryCacheIfFailed' in opts ? opts.clearMemoryCacheIfFailed : true;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let initGestureConfigHandler = opts && 'initGestureConfigHandler' in opts ? opts.initGestureConfigHandler : null;
    let enableSlideOutPage = opts && 'enableSlideOutPage' in opts ? opts.enableSlideOutPage : false;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let extendedImageEditorKey = opts && 'extendedImageEditorKey' in opts ? opts.extendedImageEditorKey : null;
    let initEditorConfigHandler = opts && 'initEditorConfigHandler' in opts ? opts.initEditorConfigHandler : null;
    let heroBuilderForSlidingPage = opts && 'heroBuilderForSlidingPage' in opts ? opts.heroBuilderForSlidingPage : null;
    let clearMemoryCacheWhenDispose = opts && 'clearMemoryCacheWhenDispose' in opts ? opts.clearMemoryCacheWhenDispose : false;
    let extendedImageGestureKey = opts && 'extendedImageGestureKey' in opts ? opts.extendedImageGestureKey : null;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[width$0] = width;
    this[height$0] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$1] = fit;
    this[alignment$0] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[loadStateChanged$] = loadStateChanged;
    this[shape$] = shape;
    this[border$] = border;
    this[borderRadius$] = borderRadius;
    this[clipBehavior$] = clipBehavior;
    this[enableLoadState$] = enableLoadState;
    this[beforePaintImage$0] = beforePaintImage;
    this[afterPaintImage$0] = afterPaintImage;
    this[mode$] = mode;
    this[enableMemoryCache$] = enableMemoryCache;
    this[clearMemoryCacheIfFailed$] = clearMemoryCacheIfFailed;
    this[onDoubleTap$] = onDoubleTap;
    this[initGestureConfigHandler$] = initGestureConfigHandler;
    this[enableSlideOutPage$] = enableSlideOutPage;
    this[extendedImageEditorKey$] = extendedImageEditorKey;
    this[initEditorConfigHandler$] = initEditorConfigHandler;
    this[heroBuilderForSlidingPage$0] = heroBuilderForSlidingPage;
    this[clearMemoryCacheWhenDispose$] = clearMemoryCacheWhenDispose;
    this[extendedImageGestureKey$] = extendedImageGestureKey;
    this[isAntiAlias$0] = isAntiAlias;
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[16], 389, 16, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[16], 390, 16, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[16], 391, 16, "isAntiAlias != null");
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, scale != null ? new extended_asset_bundle_image_provider.ExtendedExactAssetImageProvider.new(name, {bundle: bundle, scale: scale, package: $package}) : new extended_asset_bundle_image_provider.ExtendedAssetImageProvider.new(name, {bundle: bundle, package: $package}));
    if (!(alignment != null)) dart.assertFailed(null, I[16], 400, 16, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, I[16], 401, 16, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, I[16], 402, 16, "matchTextDirection != null");
    this[constraints$] = width != null || height != null ? (t0$ = (t0 = constraints, t0 == null ? null : t0.tighten({width: width, height: height})), t0$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t0$) : constraints;
    this[handleLoadingProgress$] = false;
    extended_image.ExtendedImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image.ExtendedImage.prototype;
  (extended_image.ExtendedImage.memory = function(bytes, opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[198] || CT.C198;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[199] || CT.C199;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[200] || CT.C200;
    let loadStateChanged = opts && 'loadStateChanged' in opts ? opts.loadStateChanged : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[320] || CT.C320;
    let enableLoadState = opts && 'enableLoadState' in opts ? opts.enableLoadState : false;
    let beforePaintImage = opts && 'beforePaintImage' in opts ? opts.beforePaintImage : null;
    let afterPaintImage = opts && 'afterPaintImage' in opts ? opts.afterPaintImage : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[321] || CT.C321;
    let enableMemoryCache = opts && 'enableMemoryCache' in opts ? opts.enableMemoryCache : true;
    let clearMemoryCacheIfFailed = opts && 'clearMemoryCacheIfFailed' in opts ? opts.clearMemoryCacheIfFailed : true;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let initGestureConfigHandler = opts && 'initGestureConfigHandler' in opts ? opts.initGestureConfigHandler : null;
    let enableSlideOutPage = opts && 'enableSlideOutPage' in opts ? opts.enableSlideOutPage : false;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let extendedImageEditorKey = opts && 'extendedImageEditorKey' in opts ? opts.extendedImageEditorKey : null;
    let initEditorConfigHandler = opts && 'initEditorConfigHandler' in opts ? opts.initEditorConfigHandler : null;
    let heroBuilderForSlidingPage = opts && 'heroBuilderForSlidingPage' in opts ? opts.heroBuilderForSlidingPage : null;
    let clearMemoryCacheWhenDispose = opts && 'clearMemoryCacheWhenDispose' in opts ? opts.clearMemoryCacheWhenDispose : false;
    let extendedImageGestureKey = opts && 'extendedImageGestureKey' in opts ? opts.extendedImageGestureKey : null;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[width$0] = width;
    this[height$0] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$1] = fit;
    this[alignment$0] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[loadStateChanged$] = loadStateChanged;
    this[shape$] = shape;
    this[border$] = border;
    this[borderRadius$] = borderRadius;
    this[clipBehavior$] = clipBehavior;
    this[enableLoadState$] = enableLoadState;
    this[beforePaintImage$0] = beforePaintImage;
    this[afterPaintImage$0] = afterPaintImage;
    this[mode$] = mode;
    this[enableMemoryCache$] = enableMemoryCache;
    this[clearMemoryCacheIfFailed$] = clearMemoryCacheIfFailed;
    this[onDoubleTap$] = onDoubleTap;
    this[initGestureConfigHandler$] = initGestureConfigHandler;
    this[enableSlideOutPage$] = enableSlideOutPage;
    this[extendedImageEditorKey$] = extendedImageEditorKey;
    this[initEditorConfigHandler$] = initEditorConfigHandler;
    this[heroBuilderForSlidingPage$0] = heroBuilderForSlidingPage;
    this[clearMemoryCacheWhenDispose$] = clearMemoryCacheWhenDispose;
    this[extendedImageGestureKey$] = extendedImageGestureKey;
    this[isAntiAlias$0] = isAntiAlias;
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[16], 465, 16, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[16], 466, 16, "cacheHeight == null || cacheHeight > 0");
    if (!(isAntiAlias != null)) dart.assertFailed(null, I[16], 467, 16, "isAntiAlias != null");
    this[image$0] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new extended_memory_image_provider.ExtendedMemoryImageProvider.new(bytes, {scale: scale}));
    if (!(alignment != null)) dart.assertFailed(null, I[16], 476, 16, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, I[16], 477, 16, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, I[16], 478, 16, "matchTextDirection != null");
    this[constraints$] = width != null || height != null ? (t0$ = (t0 = constraints, t0 == null ? null : t0.tighten({width: width, height: height})), t0$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t0$) : constraints;
    this[handleLoadingProgress$] = false;
    extended_image.ExtendedImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image.ExtendedImage.prototype;
  dart.addTypeTests(extended_image.ExtendedImage);
  dart.addTypeCaches(extended_image.ExtendedImage);
  dart.setMethodSignature(extended_image.ExtendedImage, () => ({
    __proto__: dart.getMethods(extended_image.ExtendedImage.__proto__),
    createState: dart.fnType(dart.legacy(extended_image._ExtendedImageState), [])
  }));
  dart.setLibraryUri(extended_image.ExtendedImage, I[17]);
  dart.setFieldSignature(extended_image.ExtendedImage, () => ({
    __proto__: dart.getFields(extended_image.ExtendedImage.__proto__),
    extendedImageGestureKey: dart.finalFieldType(dart.legacy(key.Key)),
    handleLoadingProgress: dart.finalFieldType(dart.legacy(core.bool)),
    clearMemoryCacheWhenDispose: dart.finalFieldType(dart.legacy(core.bool)),
    heroBuilderForSlidingPage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.Widget)]))),
    initEditorConfigHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(extended_image_editor_utils.EditorConfig), [dart.legacy(extended_image_utils.ExtendedImageState)]))),
    extendedImageEditorKey: dart.finalFieldType(dart.legacy(key.Key)),
    enableSlideOutPage: dart.finalFieldType(dart.legacy(core.bool)),
    initGestureConfigHandler: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(extended_image_gesture_utils.GestureConfig), [dart.legacy(extended_image_utils.ExtendedImageState)]))),
    onDoubleTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(extended_image_gesture.ExtendedImageGestureState)]))),
    enableMemoryCache: dart.finalFieldType(dart.legacy(core.bool)),
    clearMemoryCacheIfFailed: dart.finalFieldType(dart.legacy(core.bool)),
    mode: dart.finalFieldType(dart.legacy(extended_image_utils.ExtendedImageMode)),
    beforePaintImage: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)]))),
    afterPaintImage: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Image), dart.legacy(ui.Paint)]))),
    enableLoadState: dart.finalFieldType(dart.legacy(core.bool)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    shape: dart.finalFieldType(dart.legacy(box_border.BoxShape)),
    border: dart.finalFieldType(dart.legacy(box_border.BoxBorder)),
    borderRadius: dart.finalFieldType(dart.legacy(border_radius.BorderRadius)),
    loadStateChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(extended_image_utils.ExtendedImageState)]))),
    image: dart.finalFieldType(dart.legacy(image_provider.ImageProvider$(dart.legacy(core.Object)))),
    width: dart.finalFieldType(dart.legacy(core.double)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    constraints: dart.finalFieldType(dart.legacy(box.BoxConstraints)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    filterQuality: dart.finalFieldType(dart.legacy(ui.FilterQuality)),
    colorBlendMode: dart.finalFieldType(dart.legacy(ui.BlendMode)),
    fit: dart.finalFieldType(dart.legacy(box_fit.BoxFit)),
    alignment: dart.finalFieldType(dart.legacy(alignment.Alignment)),
    repeat: dart.finalFieldType(dart.legacy(decoration_image.ImageRepeat)),
    centerSlice: dart.finalFieldType(dart.legacy(ui.Rect)),
    matchTextDirection: dart.finalFieldType(dart.legacy(core.bool)),
    gaplessPlayback: dart.finalFieldType(dart.legacy(core.bool)),
    semanticLabel: dart.finalFieldType(dart.legacy(core.String)),
    excludeFromSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    isAntiAlias: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _loadState = dart.privateName(extended_image, "_loadState");
  var _imageStream = dart.privateName(extended_image, "_imageStream");
  var _imageInfo = dart.privateName(extended_image, "_imageInfo");
  var _isListeningToStream = dart.privateName(extended_image, "_isListeningToStream");
  var _invertColors$ = dart.privateName(extended_image, "_invertColors");
  var _slidePageState = dart.privateName(extended_image, "_slidePageState");
  var _loadingProgress = dart.privateName(extended_image, "_loadingProgress");
  var _frameNumber = dart.privateName(extended_image, "_frameNumber");
  var _wasSynchronouslyLoaded = dart.privateName(extended_image, "_wasSynchronouslyLoaded");
  var _scrollAwareContext = dart.privateName(extended_image, "_scrollAwareContext");
  var _updateInvertColors = dart.privateName(extended_image, "_updateInvertColors");
  var _resolveImage = dart.privateName(extended_image, "_resolveImage");
  var _listenToStream = dart.privateName(extended_image, "_listenToStream");
  var _stopListeningToStream = dart.privateName(extended_image, "_stopListeningToStream");
  var _updateSourceStream = dart.privateName(extended_image, "_updateSourceStream");
  var _loadFailed = dart.privateName(extended_image, "_loadFailed");
  var _handleImageChunk = dart.privateName(extended_image, "_handleImageChunk");
  var _handleImageChanged = dart.privateName(extended_image, "_handleImageChanged");
  var _getIndicator = dart.privateName(extended_image, "_getIndicator");
  var _getCompletedWidget = dart.privateName(extended_image, "_getCompletedWidget");
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var _buildExtendedRawImage = dart.privateName(extended_image, "_buildExtendedRawImage");
  var _name$7 = dart.privateName(box_border, "_name");
  var CupertinoActivityIndicator_progress = dart.privateName(activity_indicator, "CupertinoActivityIndicator.progress");
  var CupertinoActivityIndicator_radius = dart.privateName(activity_indicator, "CupertinoActivityIndicator.radius");
  var CupertinoActivityIndicator_animating = dart.privateName(activity_indicator, "CupertinoActivityIndicator.animating");
  var returnLoadStateChangedWidget = dart.privateName(extended_image_utils, "ExtendedImageState.returnLoadStateChangedWidget");
  extended_image_utils.ExtendedImageState = class ExtendedImageState extends core.Object {
    get returnLoadStateChangedWidget() {
      return this[returnLoadStateChangedWidget];
    }
    set returnLoadStateChangedWidget(value) {
      this[returnLoadStateChangedWidget] = value;
    }
  };
  (extended_image_utils.ExtendedImageState.new = function() {
    this[returnLoadStateChangedWidget] = null;
    ;
  }).prototype = extended_image_utils.ExtendedImageState.prototype;
  dart.addTypeTests(extended_image_utils.ExtendedImageState);
  dart.addTypeCaches(extended_image_utils.ExtendedImageState);
  dart.setLibraryUri(extended_image_utils.ExtendedImageState, I[18]);
  dart.setFieldSignature(extended_image_utils.ExtendedImageState, () => ({
    __proto__: dart.getFields(extended_image_utils.ExtendedImageState.__proto__),
    returnLoadStateChangedWidget: dart.fieldType(dart.legacy(core.bool))
  }));
  const State_ExtendedImageState$36 = class State_ExtendedImageState extends framework.State$(dart.legacy(extended_image.ExtendedImage)) {};
  (State_ExtendedImageState$36.new = function() {
    extended_image_utils.ExtendedImageState.new.call(this);
    State_ExtendedImageState$36.__proto__.new.call(this);
  }).prototype = State_ExtendedImageState$36.prototype;
  dart.applyMixin(State_ExtendedImageState$36, extended_image_utils.ExtendedImageState);
  const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends State_ExtendedImageState$36 {};
  (State_WidgetsBindingObserver$36.new = function() {
    State_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  extended_image._ExtendedImageState = class _ExtendedImageState extends State_WidgetsBindingObserver$36 {
    initState() {
      this.returnLoadStateChangedWidget = false;
      this[_loadState] = extended_image_utils.LoadState.loading;
      binding.WidgetsBinding.instance.addObserver(this);
      this[_scrollAwareContext] = new (T$.DisposableBuildContextOfStateLOfExtendedImageL()).new(this);
      super.initState();
    }
    didChangeDependencies() {
      this[_updateInvertColors]();
      this[_resolveImage]();
      this[_slidePageState] = null;
      if (dart.test(this.widget.enableSlideOutPage)) {
        this[_slidePageState] = this.context.findAncestorStateOfType(T$.ExtendedImageSlidePageStateL());
      }
      if (dart.test(ticker_provider.TickerMode.of(this.context))) {
        this[_listenToStream]();
      } else {
        this[_stopListeningToStream]();
      }
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      T$.ExtendedImageL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.image, oldWidget.image)) {
        this[_resolveImage]();
      }
      if (this.widget.enableSlideOutPage != oldWidget.enableSlideOutPage) {
        this[_slidePageState] = null;
        if (dart.test(this.widget.enableSlideOutPage)) {
          this[_slidePageState] = this.context.findAncestorStateOfType(T$.ExtendedImageSlidePageStateL());
        }
      }
    }
    didChangeAccessibilityFeatures() {
      super.didChangeAccessibilityFeatures();
      this.setState(dart.fn(() => {
        this[_updateInvertColors]();
      }, T$.VoidToNull()));
    }
    reassemble() {
      this[_resolveImage]();
      super.reassemble();
    }
    [_updateInvertColors]() {
      let t0, t0$;
      this[_invertColors$] = (t0$ = (t0 = media_query.MediaQuery.of(this.context), t0 == null ? null : t0.invertColors), t0$ == null ? binding$.SemanticsBinding.instance.accessibilityFeatures.invertColors : t0$);
    }
    [_resolveImage](rebuild = false) {
      let t0, t0$;
      if (dart.test(rebuild)) {
        this.widget.image.evict();
      }
      let provider = new scroll_aware_image_provider.ScrollAwareImageProvider.new({context: this[_scrollAwareContext], imageProvider: this.widget.image});
      let newStream = provider.resolve(image.createLocalImageConfiguration(this.context, {size: this.widget.width != null && this.widget.height != null ? new ui.Size.new(this.widget.width, this.widget.height) : null}));
      if (!(newStream != null)) dart.assertFailed(null, I[16], 804, 12, "newStream != null");
      if (this[_imageInfo] != null && !dart.test(rebuild) && dart.equals((t0 = this[_imageStream], t0 == null ? null : t0.key), (t0$ = newStream, t0$ == null ? null : t0$.key))) {
        this.setState(dart.fn(() => {
          this[_loadState] = extended_image_utils.LoadState.completed;
        }, T$.VoidToNull()));
      }
      this[_updateSourceStream](newStream, {rebuild: rebuild});
    }
    [_loadFailed](exception, stackTrace) {
      this.setState(dart.fn(() => {
        this[_loadState] = extended_image_utils.LoadState.failed;
      }, T$.VoidToNull()));
      if (!dart.test(this.widget.enableMemoryCache) || dart.test(this.widget.clearMemoryCacheIfFailed)) {
        this.widget.image.evict();
      }
    }
    [_handleImageChunk](event) {
      this.setState(dart.fn(() => {
        this[_loadingProgress] = event;
      }, T$.VoidToNull()));
    }
    [_handleImageChanged](imageInfo, synchronousCall) {
      this.setState(dart.fn(() => {
        if (imageInfo != null) {
          this[_loadState] = extended_image_utils.LoadState.completed;
        } else {
          this[_loadState] = extended_image_utils.LoadState.failed;
        }
        this[_imageInfo] = imageInfo;
        this[_loadingProgress] = null;
        this[_frameNumber] = this[_frameNumber] == null ? 0 : dart.notNull(this[_frameNumber]) + 1;
        this[_wasSynchronouslyLoaded] = !!(dart.notNull(this[_wasSynchronouslyLoaded]) | dart.test(synchronousCall));
      }, T$.VoidToNull()));
      if (!dart.test(this.widget.enableMemoryCache)) {
        this.widget.image.evict();
      }
    }
    [_updateSourceStream](newStream, opts) {
      let t0, t0$;
      let rebuild = opts && 'rebuild' in opts ? opts.rebuild : false;
      if (dart.equals((t0 = this[_imageStream], t0 == null ? null : t0.key), (t0$ = newStream, t0$ == null ? null : t0$.key))) {
        return;
      }
      if (dart.test(this[_isListeningToStream])) {
        this[_imageStream].removeListener(new image_stream.ImageStreamListener.new(dart.bind(this, _handleImageChanged), {onError: dart.bind(this, _loadFailed), onChunk: dart.test(this.widget.handleLoadingProgress) ? dart.bind(this, _handleImageChunk) : null}));
      }
      if (!dart.test(this.widget.gaplessPlayback) || dart.test(rebuild)) {
        this.setState(dart.fn(() => {
          this[_imageInfo] = null;
          this[_loadState] = extended_image_utils.LoadState.loading;
        }, T$.VoidToNull()));
      }
      this.setState(dart.fn(() => {
        this[_loadingProgress] = null;
        this[_frameNumber] = null;
        this[_wasSynchronouslyLoaded] = false;
      }, T$.VoidToNull()));
      this[_imageStream] = newStream;
      if (dart.test(this[_isListeningToStream])) {
        this[_imageStream].addListener(new image_stream.ImageStreamListener.new(dart.bind(this, _handleImageChanged), {onError: dart.bind(this, _loadFailed), onChunk: dart.test(this.widget.handleLoadingProgress) ? dart.bind(this, _handleImageChunk) : null}));
      }
    }
    [_listenToStream]() {
      if (dart.test(this[_isListeningToStream])) {
        return;
      }
      this[_imageStream].addListener(new image_stream.ImageStreamListener.new(dart.bind(this, _handleImageChanged), {onError: dart.bind(this, _loadFailed), onChunk: dart.test(this.widget.handleLoadingProgress) ? dart.bind(this, _handleImageChunk) : null}));
      this[_isListeningToStream] = true;
    }
    [_stopListeningToStream]() {
      if (!dart.test(this[_isListeningToStream])) {
        return;
      }
      this[_imageStream].removeListener(new image_stream.ImageStreamListener.new(dart.bind(this, _handleImageChanged), {onError: dart.bind(this, _loadFailed), onChunk: dart.test(this.widget.handleLoadingProgress) ? dart.bind(this, _handleImageChunk) : null}));
      this[_isListeningToStream] = false;
    }
    dispose() {
      let t0;
      if (!(this[_imageStream] != null)) dart.assertFailed(null, I[16], 938, 12, "_imageStream != null");
      if (dart.test(this.widget.clearMemoryCacheWhenDispose)) {
        t0 = this.widget.image;
        t0 == null ? null : t0.evict();
      }
      binding.WidgetsBinding.instance.removeObserver(this);
      this[_stopListeningToStream]();
      this[_scrollAwareContext].dispose();
      super.dispose();
    }
    build(context) {
      let t0, t0$;
      let current = null;
      this.returnLoadStateChangedWidget = false;
      if (this.widget.loadStateChanged != null) {
        current = (t0 = this.widget, t0.loadStateChanged(this));
        if (current != null && dart.test(this.returnLoadStateChangedWidget)) {
          return current;
        }
      }
      if (current == null) {
        if (dart.test(this.widget.enableLoadState)) {
          switch (this[_loadState]) {
            case C[327] || CT.C327:
            {
              current = new container.Container.new({alignment: alignment.Alignment.center, child: this[_getIndicator](context), $creationLocationd_0dea112b090073317d4: C[323] || CT.C323});
              break;
            }
            case C[328] || CT.C328:
            {
              current = this[_getCompletedWidget]();
              break;
            }
            case C[341] || CT.C341:
            {
              current = new container.Container.new({alignment: alignment.Alignment.center, child: new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                    this.reLoadImage();
                  }, T$.VoidToNull()), child: C[329] || CT.C329, $creationLocationd_0dea112b090073317d4: C[333] || CT.C333}), $creationLocationd_0dea112b090073317d4: C[337] || CT.C337});
              break;
            }
          }
        } else {
          if (this[_loadState] == extended_image_utils.LoadState.completed) {
            current = this[_getCompletedWidget]();
          } else {
            current = this[_buildExtendedRawImage]();
          }
        }
      }
      if (this.widget.shape != null) {
        switch (this.widget.shape) {
          case C[346] || CT.C346:
          {
            current = new basic.ClipOval.new({child: current, clipBehavior: this.widget.clipBehavior, $creationLocationd_0dea112b090073317d4: C[342] || CT.C342});
            break;
          }
          case C[352] || CT.C352:
          {
            if (this.widget.borderRadius != null) {
              current = new basic.ClipRRect.new({child: current, borderRadius: this.widget.borderRadius, clipBehavior: this.widget.clipBehavior, $creationLocationd_0dea112b090073317d4: C[347] || CT.C347});
            }
            break;
          }
        }
      }
      if (this.widget.border != null) {
        current = new basic.CustomPaint.new({foregroundPainter: new extended_image_border_painter.ExtendedImageBorderPainter.new({borderRadius: this.widget.borderRadius, border: this.widget.border, shape: this.widget.shape}), child: current, size: this.widget.width != null && this.widget.height != null ? new ui.Size.new(this.widget.width, this.widget.height) : ui.Size.zero, $creationLocationd_0dea112b090073317d4: C[353] || CT.C353});
      }
      if (this.widget.constraints != null) {
        current = new basic.ConstrainedBox.new({constraints: this.widget.constraints, child: current, $creationLocationd_0dea112b090073317d4: C[358] || CT.C358});
      }
      if (this[_slidePageState] != null && !(this[_loadState] == extended_image_utils.LoadState.completed && this.widget.mode == extended_image_utils.ExtendedImageMode.gesture)) {
        current = new extended_image_slide_page_handler.ExtendedImageSlidePageHandler.new({child: current, extendedImageSlidePageState: this[_slidePageState], heroBuilderForSlidingPage: this.widget.heroBuilderForSlidingPage, $creationLocationd_0dea112b090073317d4: C[362] || CT.C362});
      }
      if (dart.test(this.widget.excludeFromSemantics)) {
        return current;
      }
      return new basic.Semantics.new({container: this.widget.semanticLabel != null, image: true, label: (t0$ = this.widget.semanticLabel, t0$ == null ? "" : t0$), child: current, $creationLocationd_0dea112b090073317d4: C[367] || CT.C367});
    }
    [_getCompletedWidget]() {
      let current = null;
      if (this.widget.mode == extended_image_utils.ExtendedImageMode.gesture) {
        current = new extended_image_gesture.ExtendedImageGesture.new(this, {key: this.widget.extendedImageGestureKey, $creationLocationd_0dea112b090073317d4: C[373] || CT.C373});
      } else if (this.widget.mode == extended_image_utils.ExtendedImageMode.editor) {
        current = new extended_image_editor.ExtendedImageEditor.new({extendedImageState: this, key: this.widget.extendedImageEditorKey, $creationLocationd_0dea112b090073317d4: C[377] || CT.C377});
      } else {
        current = this[_buildExtendedRawImage]();
      }
      return current;
    }
    [_getIndicator](context) {
      return theme$.Theme.of(context).platform == platform.TargetPlatform.iOS ? C[381] || CT.C381 : new progress_indicator.CircularProgressIndicator.new({strokeWidth: 2.0, valueColor: new (T$.AlwaysStoppedAnimationOfColorL()).new(theme$.Theme.of(context).primaryColor), $creationLocationd_0dea112b090073317d4: C[386] || CT.C386});
    }
    [_buildExtendedRawImage]() {
      let t0, t0$, t0$0;
      return new extended_raw_image.ExtendedRawImage.new({image: (t0 = this[_imageInfo], t0 == null ? null : t0.image), width: this.widget.width, height: this.widget.height, scale: (t0$0 = (t0$ = this[_imageInfo], t0$ == null ? null : t0$.scale), t0$0 == null ? 1.0 : t0$0), color: this.widget.color, colorBlendMode: this.widget.colorBlendMode, fit: this.widget.fit, alignment: this.widget.alignment, repeat: this.widget.repeat, centerSlice: this.widget.centerSlice, matchTextDirection: this.widget.matchTextDirection, invertColors: this[_invertColors$], isAntiAlias: this.widget.isAntiAlias, filterQuality: this.widget.filterQuality, beforePaintImage: this.widget.beforePaintImage, afterPaintImage: this.widget.afterPaintImage, $creationLocationd_0dea112b090073317d4: C[390] || CT.C390});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfImageStreamL()).new("stream", this[_imageStream]));
      description.add(new (T$.DiagnosticsPropertyOfImageInfoL()).new("pixels", this[_imageInfo]));
      description.add(new (T$.DiagnosticsPropertyOfImageChunkEventL()).new("loadingProgress", this[_loadingProgress]));
      description.add(new (T$.DiagnosticsPropertyOfintL()).new("frameNumber", this[_frameNumber]));
      description.add(new (T$.DiagnosticsPropertyOfboolL()).new("wasSynchronouslyLoaded", this[_wasSynchronouslyLoaded]));
    }
    reLoadImage() {
      this[_resolveImage](true);
    }
    get extendedImageInfo() {
      return this[_imageInfo];
    }
    get extendedImageLoadState() {
      return this[_loadState];
    }
    get imageProvider() {
      return this.widget.image;
    }
    get invertColors() {
      return this[_invertColors$];
    }
    get imageStreamKey() {
      let t0;
      t0 = this[_imageStream];
      return t0 == null ? null : t0.key;
    }
    get imageWidget() {
      return this.widget;
    }
    get completedWidget() {
      return this[_getCompletedWidget]();
    }
    get loadingProgress() {
      return this[_loadingProgress];
    }
    get frameNumber() {
      return this[_frameNumber];
    }
    get wasSynchronouslyLoaded() {
      return this[_wasSynchronouslyLoaded];
    }
    get slidePageState() {
      return this[_slidePageState];
    }
  };
  (extended_image._ExtendedImageState.new = function() {
    this[_loadState] = null;
    this[_imageStream] = null;
    this[_imageInfo] = null;
    this[_isListeningToStream] = false;
    this[_invertColors$] = null;
    this[_slidePageState] = null;
    this[_loadingProgress] = null;
    this[_frameNumber] = null;
    this[_wasSynchronouslyLoaded] = null;
    this[_scrollAwareContext] = null;
    extended_image._ExtendedImageState.__proto__.new.call(this);
    ;
  }).prototype = extended_image._ExtendedImageState.prototype;
  dart.addTypeTests(extended_image._ExtendedImageState);
  dart.addTypeCaches(extended_image._ExtendedImageState);
  dart.setMethodSignature(extended_image._ExtendedImageState, () => ({
    __proto__: dart.getMethods(extended_image._ExtendedImageState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    [_updateInvertColors]: dart.fnType(dart.void, []),
    [_resolveImage]: dart.fnType(dart.void, [], [dart.legacy(core.bool)]),
    [_loadFailed]: dart.fnType(dart.void, [dart.dynamic, dart.legacy(core.StackTrace)]),
    [_handleImageChunk]: dart.fnType(dart.void, [dart.legacy(image_stream.ImageChunkEvent)]),
    [_handleImageChanged]: dart.fnType(dart.void, [dart.legacy(image_stream.ImageInfo), dart.legacy(core.bool)]),
    [_updateSourceStream]: dart.fnType(dart.void, [dart.legacy(image_stream.ImageStream)], {rebuild: dart.legacy(core.bool)}, {}),
    [_listenToStream]: dart.fnType(dart.void, []),
    [_stopListeningToStream]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_getCompletedWidget]: dart.fnType(dart.legacy(framework.Widget), []),
    [_getIndicator]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_buildExtendedRawImage]: dart.fnType(dart.legacy(framework.Widget), []),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)]),
    reLoadImage: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(extended_image._ExtendedImageState, () => ({
    __proto__: dart.getGetters(extended_image._ExtendedImageState.__proto__),
    extendedImageInfo: dart.legacy(image_stream.ImageInfo),
    extendedImageLoadState: dart.legacy(extended_image_utils.LoadState),
    imageProvider: dart.legacy(image_provider.ImageProvider$(dart.legacy(core.Object))),
    invertColors: dart.legacy(core.bool),
    imageStreamKey: dart.legacy(core.Object),
    imageWidget: dart.legacy(extended_image.ExtendedImage),
    completedWidget: dart.legacy(framework.Widget),
    loadingProgress: dart.legacy(image_stream.ImageChunkEvent),
    frameNumber: dart.legacy(core.int),
    wasSynchronouslyLoaded: dart.legacy(core.bool),
    slidePageState: dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)
  }));
  dart.setLibraryUri(extended_image._ExtendedImageState, I[17]);
  dart.setFieldSignature(extended_image._ExtendedImageState, () => ({
    __proto__: dart.getFields(extended_image._ExtendedImageState.__proto__),
    [_loadState]: dart.fieldType(dart.legacy(extended_image_utils.LoadState)),
    [_imageStream]: dart.fieldType(dart.legacy(image_stream.ImageStream)),
    [_imageInfo]: dart.fieldType(dart.legacy(image_stream.ImageInfo)),
    [_isListeningToStream]: dart.fieldType(dart.legacy(core.bool)),
    [_invertColors$]: dart.fieldType(dart.legacy(core.bool)),
    [_slidePageState]: dart.fieldType(dart.legacy(extended_image_slide_page.ExtendedImageSlidePageState)),
    [_loadingProgress]: dart.fieldType(dart.legacy(image_stream.ImageChunkEvent)),
    [_frameNumber]: dart.fieldType(dart.legacy(core.int)),
    [_wasSynchronouslyLoaded]: dart.fieldType(dart.legacy(core.bool)),
    [_scrollAwareContext]: dart.fieldType(dart.legacy(disposable_build_context.DisposableBuildContext$(dart.legacy(framework.State$(dart.legacy(extended_image.ExtendedImage))))))
  }));
  extended_image_utils.LoadState = class LoadState extends core.Object {
    toString() {
      return this[_name$6];
    }
  };
  (extended_image_utils.LoadState.new = function(index, _name) {
    this.index = index;
    this[_name$6] = _name;
    ;
  }).prototype = extended_image_utils.LoadState.prototype;
  dart.addTypeTests(extended_image_utils.LoadState);
  dart.addTypeCaches(extended_image_utils.LoadState);
  dart.setMethodSignature(extended_image_utils.LoadState, () => ({
    __proto__: dart.getMethods(extended_image_utils.LoadState.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_utils.LoadState, I[18]);
  dart.setFieldSignature(extended_image_utils.LoadState, () => ({
    __proto__: dart.getFields(extended_image_utils.LoadState.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$6]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_utils.LoadState, ['toString']);
  extended_image_utils.LoadState.loading = C[327] || CT.C327;
  extended_image_utils.LoadState.completed = C[328] || CT.C328;
  extended_image_utils.LoadState.failed = C[341] || CT.C341;
  extended_image_utils.LoadState.values = C[408] || CT.C408;
  extended_image_utils.ExtendedImageMode = class ExtendedImageMode extends core.Object {
    toString() {
      return this[_name$6];
    }
  };
  (extended_image_utils.ExtendedImageMode.new = function(index, _name) {
    this.index = index;
    this[_name$6] = _name;
    ;
  }).prototype = extended_image_utils.ExtendedImageMode.prototype;
  dart.addTypeTests(extended_image_utils.ExtendedImageMode);
  dart.addTypeCaches(extended_image_utils.ExtendedImageMode);
  dart.setMethodSignature(extended_image_utils.ExtendedImageMode, () => ({
    __proto__: dart.getMethods(extended_image_utils.ExtendedImageMode.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(extended_image_utils.ExtendedImageMode, I[18]);
  dart.setFieldSignature(extended_image_utils.ExtendedImageMode, () => ({
    __proto__: dart.getFields(extended_image_utils.ExtendedImageMode.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$6]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(extended_image_utils.ExtendedImageMode, ['toString']);
  extended_image_utils.ExtendedImageMode.none = C[321] || CT.C321;
  extended_image_utils.ExtendedImageMode.gesture = C[409] || CT.C409;
  extended_image_utils.ExtendedImageMode.editor = C[410] || CT.C410;
  extended_image_utils.ExtendedImageMode.values = C[411] || CT.C411;
  extended_image_utils.typeOf = function typeOf(T) {
    return dart.wrapType(dart.legacy(T));
  };
  extended_image_utils.clampScale = function clampScale(scale, min, max) {
    return scale[$clamp](min, max);
  };
  extended_image_utils.doubleEqual = function doubleEqual(value, other) {
    return extended_image_utils.doubleCompare(value, other) === 0;
  };
  extended_image_utils.doubleCompare = function doubleCompare(value, other, opts) {
    let precision = opts && 'precision' in opts ? opts.precision : 1e-10;
    if (value[$isNaN] || other[$isNaN]) {
      dart.throw(new core.UnsupportedError.new("Compared with Infinity or NaN"));
    }
    let n = dart.notNull(value) - dart.notNull(other);
    if (n[$abs]() < dart.notNull(precision)) {
      return 0;
    }
    return n < 0 ? -1 : 1;
  };
  var extendedImageState$0 = dart.privateName(extended_image_editor, "ExtendedImageEditor.extendedImageState");
  extended_image_editor.ExtendedImageEditor = class ExtendedImageEditor extends framework.StatefulWidget {
    get extendedImageState() {
      return this[extendedImageState$0];
    }
    set extendedImageState(value) {
      super.extendedImageState = value;
    }
    createState() {
      return new extended_image_editor.ExtendedImageEditorState.new();
    }
  };
  (extended_image_editor.ExtendedImageEditor.new = function(opts) {
    let extendedImageState = opts && 'extendedImageState' in opts ? opts.extendedImageState : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[extendedImageState$0] = extendedImageState;
    if (!(extendedImageState.imageWidget.fit == box_fit.BoxFit.contain)) dart.assertFailed("Make sure the image is all painted to crop,the fit of image must be BoxFit.contain", I[19], 21, 16, "extendedImageState.imageWidget.fit == BoxFit.contain");
    if (!T$.ExtendedImageProviderL().is(extendedImageState.imageWidget.image)) dart.assertFailed("Make sure the image provider is ExtendedImageProvider, we will get raw image data from it", I[19], 23, 16, "extendedImageState.imageWidget.image is ExtendedImageProvider");
    extended_image_editor.ExtendedImageEditor.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = extended_image_editor.ExtendedImageEditor.prototype;
  dart.addTypeTests(extended_image_editor.ExtendedImageEditor);
  dart.addTypeCaches(extended_image_editor.ExtendedImageEditor);
  dart.setMethodSignature(extended_image_editor.ExtendedImageEditor, () => ({
    __proto__: dart.getMethods(extended_image_editor.ExtendedImageEditor.__proto__),
    createState: dart.fnType(dart.legacy(extended_image_editor.ExtendedImageEditorState), [])
  }));
  dart.setLibraryUri(extended_image_editor.ExtendedImageEditor, I[20]);
  dart.setFieldSignature(extended_image_editor.ExtendedImageEditor, () => ({
    __proto__: dart.getFields(extended_image_editor.ExtendedImageEditor.__proto__),
    extendedImageState: dart.finalFieldType(dart.legacy(extended_image_utils.ExtendedImageState))
  }));
  var _editActionDetails$ = dart.privateName(extended_image_editor, "_editActionDetails");
  var _editorConfig = dart.privateName(extended_image_editor, "_editorConfig");
  var _startingScale$ = dart.privateName(extended_image_editor, "_startingScale");
  var _startingOffset$0 = dart.privateName(extended_image_editor, "_startingOffset");
  var _detailsScale = dart.privateName(extended_image_editor, "_detailsScale");
  var _layerKey = dart.privateName(extended_image_editor, "_layerKey");
  var _initGestureConfig$ = dart.privateName(extended_image_editor, "_initGestureConfig");
  var _handleScaleStart$0 = dart.privateName(extended_image_editor, "_handleScaleStart");
  var _handleScaleUpdate$0 = dart.privateName(extended_image_editor, "_handleScaleUpdate");
  var _initCropRect = dart.privateName(extended_image_editor, "_initCropRect");
  var _handlePointerSignal$ = dart.privateName(extended_image_editor, "_handlePointerSignal");
  extended_image_editor.ExtendedImageEditorState = class ExtendedImageEditorState extends framework.State$(dart.legacy(extended_image_editor.ExtendedImageEditor)) {
    initState() {
      this[_initGestureConfig$]();
      super.initState();
    }
    [_initGestureConfig$]() {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7;
      let initialScale = (t0 = this[_editorConfig], t0 == null ? null : t0.initialScale);
      let cropAspectRatio = (t0$ = this[_editorConfig], t0$ == null ? null : t0$.cropAspectRatio);
      this[_editorConfig] = (t0$4 = (t0$3 = (t0$2 = (t0$1 = (t0$0 = this.widget, t0$0 == null ? null : t0$0.extendedImageState), t0$1 == null ? null : t0$1.imageWidget), t0$2 == null ? null : t0$2.initEditorConfigHandler), t0$3 == null ? null : t0$3(this.widget.extendedImageState)), t0$4 == null ? new extended_image_editor_utils.EditorConfig.new() : t0$4);
      if (cropAspectRatio != this[_editorConfig].cropAspectRatio) {
        this[_editActionDetails$] = null;
      }
      if (this[_editActionDetails$] == null || initialScale != this[_editorConfig].initialScale) {
        this[_editActionDetails$] = (t0$5 = new extended_image_editor_utils.EditActionDetails.new(), (() => {
          t0$5.delta = ui.Offset.zero;
          t0$5.totalScale = this[_editorConfig].initialScale;
          t0$5.preTotalScale = this[_editorConfig].initialScale;
          t0$5.cropRectPadding = this[_editorConfig].cropRectPadding;
          return t0$5;
        })());
      }
      if ((t0$7 = (t0$6 = this.widget.extendedImageState, t0$6 == null ? null : t0$6.extendedImageInfo), t0$7 == null ? null : t0$7.image) != null) {
        this[_editActionDetails$].originalAspectRatio = dart.notNull(this.widget.extendedImageState.extendedImageInfo.image.width) / dart.notNull(this.widget.extendedImageState.extendedImageInfo.image.height);
      }
      this[_editActionDetails$].cropAspectRatio = this[_editorConfig].cropAspectRatio;
      if (this[_editorConfig].cropAspectRatio != null && dart.notNull(this[_editorConfig].cropAspectRatio) <= 0) {
        this[_editActionDetails$].cropAspectRatio = this[_editActionDetails$].originalAspectRatio;
      }
    }
    didUpdateWidget(oldWidget) {
      T$.ExtendedImageEditorL().as(oldWidget);
      this[_initGestureConfig$]();
      super.didUpdateWidget(oldWidget);
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2;
      let extendedImage = this.widget.extendedImageState.imageWidget;
      let image = new extended_raw_image.ExtendedRawImage.new({image: (t0 = this.widget.extendedImageState.extendedImageInfo, t0 == null ? null : t0.image), width: extendedImage.width, height: extendedImage.height, scale: (t0$0 = (t0$ = this.widget.extendedImageState.extendedImageInfo, t0$ == null ? null : t0$.scale), t0$0 == null ? 1.0 : t0$0), color: extendedImage.color, colorBlendMode: extendedImage.colorBlendMode, fit: extendedImage.fit, alignment: extendedImage.alignment, repeat: extendedImage.repeat, centerSlice: extendedImage.centerSlice, matchTextDirection: false, invertColors: this.widget.extendedImageState.invertColors, filterQuality: extendedImage.filterQuality, editActionDetails: this[_editActionDetails$], $creationLocationd_0dea112b090073317d4: C[412] || CT.C412});
      let result = new gesture_detector.GestureDetector.new({onScaleStart: dart.bind(this, _handleScaleStart$0), onScaleUpdate: dart.bind(this, _handleScaleUpdate$0), behavior: (t0$1 = this[_editorConfig], t0$1 == null ? null : t0$1.hitTestBehavior), child: new basic.Stack.new({children: T$.JSArrayOfWidgetL().of([new basic.Positioned.new({child: image, top: 0.0, left: 0.0, bottom: 0.0, right: 0.0, $creationLocationd_0dea112b090073317d4: C[428] || CT.C428}), new basic.Positioned.new({child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
                  let layoutRect = ui.Offset.zero['&'](new ui.Size.new(constraints.maxWidth, constraints.maxHeight));
                  let padding = this[_editorConfig].cropRectPadding;
                  if (padding != null) {
                    layoutRect = padding.deflateRect(layoutRect);
                  }
                  if (this[_editActionDetails$].cropRect == null) {
                    let destinationRect = extended_image_editor_utils.getDestinationRect({rect: layoutRect, inputSize: new ui.Size.new(this.widget.extendedImageState.extendedImageInfo.image.width[$toDouble](), this.widget.extendedImageState.extendedImageInfo.image.height[$toDouble]()), flipHorizontally: false, fit: this.widget.extendedImageState.imageWidget.fit, centerSlice: this.widget.extendedImageState.imageWidget.centerSlice, alignment: this.widget.extendedImageState.imageWidget.alignment, scale: this.widget.extendedImageState.extendedImageInfo.scale});
                    let cropRect = this[_initCropRect](destinationRect);
                    if (this[_editorConfig].initCropRectType == extended_image_editor_utils.InitCropRectType.layoutRect && this[_editorConfig].cropAspectRatio != null && dart.notNull(this[_editorConfig].cropAspectRatio) > 0) {
                      let rect = this[_initCropRect](layoutRect);
                      this[_editActionDetails$].totalScale = this[_editActionDetails$].preTotalScale = dart.notNull(extended_image_utils.doubleCompare(destinationRect.width, destinationRect.height)) > 0 ? dart.notNull(rect.height) / dart.notNull(cropRect.height) : dart.notNull(rect.width) / dart.notNull(cropRect.width);
                      cropRect = rect;
                    }
                    this[_editActionDetails$].cropRect = cropRect;
                  }
                  return new extended_image_crop_layer.ExtendedImageCropLayer.new({key: this[_layerKey], layoutRect: layoutRect, editActionDetails: this[_editActionDetails$], editorConfig: this[_editorConfig], fit: this.widget.extendedImageState.imageWidget.fit, $creationLocationd_0dea112b090073317d4: C[435] || CT.C435});
                }, T$.BuildContextLAndBoxConstraintsLToExtendedImageCropLayerL()), $creationLocationd_0dea112b090073317d4: C[442] || CT.C442}), top: 0.0, left: 0.0, bottom: 0.0, right: 0.0, $creationLocationd_0dea112b090073317d4: C[445] || CT.C445})]), $creationLocationd_0dea112b090073317d4: C[452] || CT.C452}), $creationLocationd_0dea112b090073317d4: C[455] || CT.C455});
      result = new basic.Listener.new({child: result, onPointerDown: dart.fn(_ => {
          this[_layerKey].currentState.pointerDown(true);
        }, T$.PointerDownEventLToNull()), onPointerUp: dart.fn(_ => {
          this[_layerKey].currentState.pointerDown(false);
        }, T$.PointerUpEventLToNull()), onPointerSignal: dart.bind(this, _handlePointerSignal$), behavior: (t0$2 = this[_editorConfig], t0$2 == null ? null : t0$2.hitTestBehavior), $creationLocationd_0dea112b090073317d4: C[461] || CT.C461});
      return result;
    }
    [_initCropRect](rect) {
      let cropRect = this[_editActionDetails$].getRectWithScale(rect);
      if (this[_editActionDetails$].cropAspectRatio != null) {
        let aspectRatio = this[_editActionDetails$].cropAspectRatio;
        let width = dart.notNull(cropRect.width) / dart.notNull(aspectRatio);
        let height = math.min(T$.doubleL(), cropRect.height, width);
        width = height * dart.notNull(aspectRatio);
        cropRect = new ui.Rect.fromCenter({center: cropRect.center, width: width, height: height});
      }
      return cropRect;
    }
    [_handleScaleStart$0](details) {
      this[_layerKey].currentState.pointerDown(true);
      this[_startingOffset$0] = details.focalPoint;
      this[_editActionDetails$].screenFocalPoint = details.focalPoint;
      this[_startingScale$] = this[_editActionDetails$].totalScale;
      this[_detailsScale] = 1.0;
    }
    [_handleScaleUpdate$0](details) {
      this[_layerKey].currentState.pointerDown(true);
      if (dart.test(this[_layerKey].currentState.isAnimating) || dart.test(this[_layerKey].currentState.isMoving)) {
        return;
      }
      let totalScale = dart.notNull(this[_startingScale$]) * dart.notNull(details.scale) * dart.notNull(this[_editorConfig].speed);
      let delta = details.focalPoint['*'](this[_editorConfig].speed)['-'](this[_startingOffset$0]);
      let scaleDelta = dart.notNull(details.scale) / dart.notNull(this[_detailsScale]);
      let zoomOut = scaleDelta < 1;
      let zoomIn = scaleDelta > 1;
      this[_detailsScale] = details.scale;
      this[_startingOffset$0] = details.focalPoint;
      if (dart.test(this[_editActionDetails$].reachCropRectEdge) && zoomOut || dart.test(extended_image_utils.doubleEqual(this[_editActionDetails$].totalScale, this[_editorConfig].maxScale)) && zoomIn) {
        this[_startingScale$] = dart.notNull(this[_editActionDetails$].totalScale) / dart.notNull(details.scale);
        return;
      }
      totalScale = math.min(T$.doubleL(), totalScale, this[_editorConfig].maxScale);
      if (dart.test(this.mounted) && (scaleDelta !== 1.0 || !dart.equals(delta, ui.Offset.zero))) {
        this.setState(dart.fn(() => {
          let t0;
          this[_editActionDetails$].totalScale = totalScale;
          t0 = this[_editActionDetails$];
          t0.delta = t0.delta['+'](delta);
        }, T$.VoidToNull()));
      }
    }
    [_handlePointerSignal$](event) {
      if (T$.PointerScrollEventL().is(event) && event.kind == ui.PointerDeviceKind.mouse) {
        this[_handleScaleStart$0](new scale$.ScaleStartDetails.new({focalPoint: event.position}));
        let dy = event.scrollDelta.dy;
        let dx = event.scrollDelta.dx;
        this[_handleScaleUpdate$0](new scale$.ScaleUpdateDetails.new({focalPoint: event.position, scale: 1.0 + dart.notNull(dy[$abs]() > dx[$abs]() ? dy : dx) * dart.notNull(this[_editorConfig].speed) / 1000.0}));
      }
    }
    getCropRect() {
      let t0, t0$;
      if ((t0$ = (t0 = this.widget.extendedImageState, t0 == null ? null : t0.extendedImageInfo), t0$ == null ? null : t0$.image) == null) {
        return null;
      }
      let cropScreen = this[_editActionDetails$].screenCropRect;
      let imageScreenRect = this[_editActionDetails$].screenDestinationRect;
      imageScreenRect = this[_editActionDetails$].paintRect(imageScreenRect);
      cropScreen = this[_editActionDetails$].paintRect(cropScreen);
      cropScreen = cropScreen.shift(imageScreenRect.topLeft._negate());
      imageScreenRect = imageScreenRect.shift(imageScreenRect.topLeft._negate());
      let image = this.widget.extendedImageState.extendedImageInfo.image;
      let imageRect = ui.Offset.zero['&'](new ui.Size.new(image.width[$toDouble](), image.height[$toDouble]()));
      let ratioX = dart.notNull(imageRect.width) / dart.notNull(imageScreenRect.width);
      let ratioY = dart.notNull(imageRect.height) / dart.notNull(imageScreenRect.height);
      let cropImageRect = new ui.Rect.fromLTWH(dart.notNull(cropScreen.left) * ratioX, dart.notNull(cropScreen.top) * ratioY, dart.notNull(cropScreen.width) * ratioX, dart.notNull(cropScreen.height) * ratioY);
      return cropImageRect;
    }
    get image() {
      let t0;
      t0 = this.widget.extendedImageState.extendedImageInfo;
      return t0 == null ? null : t0.image;
    }
    get rawImageData() {
      let t0, t0$;
      return T$.ExtendedImageProviderL().as((t0$ = (t0 = this.widget.extendedImageState, t0 == null ? null : t0.imageWidget), t0$ == null ? null : t0$.image)).rawImageData;
    }
    get editAction() {
      return this[_editActionDetails$];
    }
    rotate(opts) {
      let right = opts && 'right' in opts ? opts.right : true;
      this.setState(dart.fn(() => {
        this[_editActionDetails$].rotate(dart.test(right) ? 3.141592653589793 / 2.0 : -3.141592653589793 / 2.0, this[_layerKey].currentState.layoutRect, this.widget.extendedImageState.imageWidget.fit);
      }, T$.VoidToNull()));
    }
    flip() {
      this.setState(dart.fn(() => {
        this[_editActionDetails$].flip();
      }, T$.VoidToNull()));
    }
    reset() {
      this.setState(dart.fn(() => {
        this[_editorConfig] = null;
        this[_editActionDetails$] = null;
        this[_initGestureConfig$]();
      }, T$.VoidToNull()));
    }
  };
  (extended_image_editor.ExtendedImageEditorState.new = function() {
    this[_editActionDetails$] = null;
    this[_editorConfig] = null;
    this[_startingScale$] = null;
    this[_startingOffset$0] = null;
    this[_detailsScale] = 1.0;
    this[_layerKey] = T$.GlobalKeyOfExtendedImageCropLayerStateL().new();
    extended_image_editor.ExtendedImageEditorState.__proto__.new.call(this);
    ;
  }).prototype = extended_image_editor.ExtendedImageEditorState.prototype;
  dart.addTypeTests(extended_image_editor.ExtendedImageEditorState);
  dart.addTypeCaches(extended_image_editor.ExtendedImageEditorState);
  dart.setMethodSignature(extended_image_editor.ExtendedImageEditorState, () => ({
    __proto__: dart.getMethods(extended_image_editor.ExtendedImageEditorState.__proto__),
    [_initGestureConfig$]: dart.fnType(dart.void, []),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_initCropRect]: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Rect)]),
    [_handleScaleStart$0]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleStartDetails)]),
    [_handleScaleUpdate$0]: dart.fnType(dart.void, [dart.legacy(scale$.ScaleUpdateDetails)]),
    [_handlePointerSignal$]: dart.fnType(dart.void, [dart.legacy(events.PointerSignalEvent)]),
    getCropRect: dart.fnType(dart.legacy(ui.Rect), []),
    rotate: dart.fnType(dart.void, [], {right: dart.legacy(core.bool)}, {}),
    flip: dart.fnType(dart.void, []),
    reset: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(extended_image_editor.ExtendedImageEditorState, () => ({
    __proto__: dart.getGetters(extended_image_editor.ExtendedImageEditorState.__proto__),
    image: dart.legacy(ui.Image),
    rawImageData: dart.legacy(typed_data.Uint8List),
    editAction: dart.legacy(extended_image_editor_utils.EditActionDetails)
  }));
  dart.setLibraryUri(extended_image_editor.ExtendedImageEditorState, I[20]);
  dart.setFieldSignature(extended_image_editor.ExtendedImageEditorState, () => ({
    __proto__: dart.getFields(extended_image_editor.ExtendedImageEditorState.__proto__),
    [_editActionDetails$]: dart.fieldType(dart.legacy(extended_image_editor_utils.EditActionDetails)),
    [_editorConfig]: dart.fieldType(dart.legacy(extended_image_editor_utils.EditorConfig)),
    [_startingScale$]: dart.fieldType(dart.legacy(core.double)),
    [_startingOffset$0]: dart.fieldType(dart.legacy(ui.Offset)),
    [_detailsScale]: dart.fieldType(dart.legacy(core.double)),
    [_layerKey]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(extended_image_crop_layer.ExtendedImageCropLayerState))))
  }));
  dart.trackLibraries("packages/extended_image/src/gesture/extended_image_slide_page_route.dart", {
    "package:extended_image/src/gesture/extended_image_slide_page_route.dart": extended_image_slide_page_route,
    "package:extended_image/src/editor/extended_image_crop_layer.dart": extended_image_crop_layer,
    "package:extended_image/src/image/extended_render_image.dart": extended_render_image,
    "package:extended_image/src/image/extended_raw_image.dart": extended_raw_image,
    "package:extended_image/src/gesture/extended_image_gesture_page_view.dart": extended_image_gesture_page_view,
    "package:extended_image/src/gesture/extended_image_slide_page_handler.dart": extended_image_slide_page_handler,
    "package:extended_image/src/gesture/extended_image_slide_page.dart": extended_image_slide_page,
    "package:extended_image/src/editor/extended_image_editor_utils.dart": extended_image_editor_utils,
    "package:extended_image/src/extended_image_typedef.dart": extended_image_typedef,
    "package:extended_image/src/gesture/extended_image_gesture_utils.dart": extended_image_gesture_utils,
    "package:extended_image/src/gesture/extended_image_gesture.dart": extended_image_gesture,
    "package:extended_image/src/extended_image.dart": extended_image,
    "package:extended_image/src/extended_image_utils.dart": extended_image_utils,
    "package:extended_image/src/editor/extended_image_editor.dart": extended_image_editor,
    "package:extended_image/extended_image.dart": extended_image$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["extended_image_slide_page_route.dart","../editor/extended_image_crop_layer.dart","../image/extended_render_image.dart","../image/extended_raw_image.dart","extended_image_gesture_page_view.dart","extended_image_slide_page_handler.dart","extended_image_slide_page.dart","../editor/extended_image_editor_utils.dart","extended_image_gesture_utils.dart","extended_image_gesture.dart","../extended_image.dart","../extended_image_utils.dart","../editor/extended_image_editor.dart"],"names":[],"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IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;UACM,AAAM,KAAD;UACL,AAAY,AAAQ,WAAT,sBAAY,AAAY,WAAD;IAC7B,qBAAG,AAAM,AAAQ,KAAT,YAAY,AAAO,MAAD,YACmB,YAAnD,WAAW,eAAX,OAAa,mBAAe,KAAK,UAAU,MAAM,KAAjD,cACiB,wCAAgB,KAAK,UAAU,MAAM,YACtD,WAAW;AACjB,gEAAW,GAAG;;EAAC;mDAGZ;;QACH;QACC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACU;QACG;QACd;QACK;QACW;QACf;QACE;QACE;QACJ;QACA;QACA;QACA;QACA;QACA;QACD;QACA;QACC;;IA3CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IASA;IACA;IACA;IACA;IACA;IACA;IAGA;UACM,AAAW,AAAQ,UAAT,YAAuB,aAAX,UAAU,IAAG;UACnC,AAAY,AAAQ,WAAT,YAAwB,aAAZ,WAAW,IAAG;UACrC,AAAY,WAAD;IACZ,gBAAc,0CAClB,UAAU,EACV,WAAW,EACX,wDACE,GAAG,UACI,KAAK,WACH,OAAO,SACT,KAAK,eACC,WAAW,WACf,OAAO,aACL,SAAS,aACT,SAAS;UAGjB,AAAY,AAAQ,WAAT,sBAAY,AAAY,WAAD;IAC7B,qBAAG,AAAM,AAAQ,KAAT,YAAY,AAAO,MAAD,YACmB,YAAnD,WAAW,eAAX,OAAa,mBAAe,KAAK,UAAU,MAAM,KAAjD,cACiB,wCAAgB,KAAK,UAAU,MAAM,YACtD,WAAW;UACV,AAAW,AAAQ,UAAT,YAAuB,aAAX,UAAU,IAAG;UACnC,AAAY,AAAQ,WAAT,YAAwB,aAAZ,WAAW,IAAG;AAC5C,gEAAW,GAAG;;EAAC;gDAqBd;;QACD;QACG;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACU;QACV;QACA;QACA;QACA;QACA;QACD;QACA;QACC;;IAnCA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAGA;UACM,AAAW,AAAQ,UAAT,YAAuB,aAAX,UAAU,IAAG;UACnC,AAAY,AAAQ,WAAT,YAAwB,aAAZ,WAAW,IAAG;UACrC,AAAY,WAAD;IACZ,gBAAc,0CAClB,UAAU,EACV,WAAW,EACX,+DACE,IAAI,UACG,KAAK;UAGT,AAAU,SAAD;UACT,AAAO,MAAD;UACN,AAAc,aAAD;UACb,AAAmB,kBAAD;IACb,qBAAG,AAAM,AAAQ,KAAT,YAAY,AAAO,MAAD,YACmB,YAAnD,WAAW,eAAX,OAAa,mBAAe,KAAK,UAAU,MAAM,KAAjD,cACiB,wCAAgB,KAAK,UAAU,MAAM,YACtD,WAAW;IACK,+BAAE;AACxB,gEAAW,GAAG;;EAAC;iDAgIZ;;QACH;QACQ;QACP;QACA;QACE;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACE;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACU;QACV;QACA;QACA;QACA;QACA;QACD;QACA;QACC;;IArCA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAGA;UACM,AAAW,AAAQ,UAAT,YAAuB,aAAX,UAAU,IA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","file":"../../../../../../../../packages/extended_image/src/gesture/extended_image_slide_page_route.dart.lib.js"}');
  // Exports:
  return {
    src__gesture__extended_image_slide_page_route: extended_image_slide_page_route,
    src__editor__extended_image_crop_layer: extended_image_crop_layer,
    src__image__extended_render_image: extended_render_image,
    src__image__extended_raw_image: extended_raw_image,
    src__gesture__extended_image_gesture_page_view: extended_image_gesture_page_view,
    src__gesture__extended_image_slide_page_handler: extended_image_slide_page_handler,
    src__gesture__extended_image_slide_page: extended_image_slide_page,
    src__editor__extended_image_editor_utils: extended_image_editor_utils,
    src__extended_image_typedef: extended_image_typedef,
    src__gesture__extended_image_gesture_utils: extended_image_gesture_utils,
    src__gesture__extended_image_gesture: extended_image_gesture,
    src__extended_image: extended_image,
    src__extended_image_utils: extended_image_utils,
    src__editor__extended_image_editor: extended_image_editor,
    extended_image: extended_image$
  };
}));

//# sourceMappingURL=extended_image_slide_page_route.dart.lib.js.map
